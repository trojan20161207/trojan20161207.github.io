<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>11 个 Nginx 参数性能优化工作</title>
    <url>/2019/09/01/11%E4%B8%AANginx%E5%8F%82%E6%95%B0%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96%E5%B7%A5%E4%BD%9C/</url>
    <content><![CDATA[<p>工作上，需要配置 Nginx，要投入生产使用，做了一点优化工作，加上以前也经常折腾 Nginx，故记下一些优化工作。</p>
<h4 id="优化-Nginx-进程数量"><a href="#优化-Nginx-进程数量" class="headerlink" title="优化 Nginx 进程数量"></a>优化 Nginx 进程数量</h4><p>配置参数如下：</p>
<pre class="line-numbers language-none"><code class="language-none">worker_processes  1; # 指定 Nginx 要开启的进程数，结尾的数字就是进程的个数，可以为 auto<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>这个参数调整的是 Nginx 服务的 worker 进程数，Nginx 有 Master 进程和 worker 进程之分，Master 为管理进程、真正接待“顾客”的是 worker 进程。</p>
<p>进程个数的策略：worker 进程数可以设置为等于 CPU 的核数。高流量高并发场合也可以考虑将进程数提高至 CPU 核数 x 2。这个参数除了要和 CPU 核数匹配之外，也与硬盘存储的数据及系统的负载有关，设置为 CPU 核数是个好的起始配置，也是官方建议的。</p>
<p>当然，如果想省麻烦也可以配置为<code>worker_processes auto;</code>，将由 Nginx 自行决定 worker 数量。当访问量快速增加时，Nginx 就会临时 fork 新进程来缩短系统的瞬时开销和降低服务的时间。</p>
<h4 id="将不同的进程绑定到不同的CPU"><a href="#将不同的进程绑定到不同的CPU" class="headerlink" title="将不同的进程绑定到不同的CPU"></a>将不同的进程绑定到不同的CPU</h4><p>默认情况下，Nginx 的多个进程有可能运行在同一个 CPU 核上，导致 Nginx 进程使用硬件的资源不均，这就需要制定进程分配到指定的 CPU 核上处理，达到充分有效利用硬件的目的。配置参数如下：</p>
<pre class="line-numbers language-none"><code class="language-none">worker_processes  4; worker_cpu_affinity  0001  0010  0100  1000;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>其中 <code>worker_cpu_affinity</code> 就是配置 Nginx 进程与 CPU 亲和力的参数，即把不同的进程分给不同的 CPU 核处理。这里的<code>0001 0010 0100 1000</code>是掩码，分别代表第1、2、3、4核CPU。上述配置会为每个进程分配一核CPU处理。</p>
<p>当然，如果想省麻烦也可以配置<code>worker_cpu_affinity auto;</code>，将由 Nginx 按需自动分配。</p>
<h4 id="Nginx-事件处理模型优化"><a href="#Nginx-事件处理模型优化" class="headerlink" title="Nginx 事件处理模型优化"></a>Nginx 事件处理模型优化</h4><p>Nginx 的连接处理机制在不同的操作系统中会采用不同的 I&#x2F;O 模型，在 linux 下，Nginx 使用 epoll 的 I&#x2F;O 多路复用模型，在 Freebsd 中使用 kqueue 的 I&#x2F;O 多路复用模型，在 Solaris 中使用 &#x2F;dev&#x2F;poll 方式的 I&#x2F;O 多路复用模型，在 Windows 中使用 icop，等等。</p>
<p>配置如下：</p>
<pre class="line-numbers language-none"><code class="language-none">events &#123; use  epoll; &#125;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p><code>events</code> 指令是设定 Nginx 的工作模式及连接数上限。<code>use</code>指令用来指定 Nginx 的工作模式。Nginx 支持的工作模式有 select、 poll、 kqueue、 epoll 、 rtsig 和&#x2F; dev&#x2F;poll。当然，也可以不指定事件处理模型，Nginx 会自动选择最佳的事件处理模型。</p>
<h4 id="单个进程允许的客户端最大连接数"><a href="#单个进程允许的客户端最大连接数" class="headerlink" title="单个进程允许的客户端最大连接数"></a>单个进程允许的客户端最大连接数</h4><p>通过调整控制连接数的参数来调整 Nginx 单个进程允许的客户端最大连接数。</p>
<pre class="line-numbers language-none"><code class="language-none">events &#123; worker_connections  20480; &#125;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p><code>worker_connections</code> 也是个事件模块指令，用于定义 Nginx 每个进程的最大连接数，默认是 1024。</p>
<p>最大连接数的计算公式如下：</p>
<p><code>max_clients = worker_processes * worker_connections;</code></p>
<p>如果作为反向代理，因为浏览器默认会开启 2 个连接到 server，而且 Nginx 还会使用fds（file descriptor）从同一个连接池建立连接到 upstream 后端。则最大连接数的计算公式如下：</p>
<p><code>max_clients = worker_processes * worker_connections / 4;</code></p>
<p>另外，<strong>进程的最大连接数受 Linux 系统进程的最大打开文件数限制</strong>，在执行操作系统命令 <code>ulimit -HSn 65535</code>或配置相应文件后， <code>worker_connections</code> 的设置才能生效。</p>
<h4 id="配置获取更多连接数"><a href="#配置获取更多连接数" class="headerlink" title="配置获取更多连接数"></a>配置获取更多连接数</h4><p>默认情况下，Nginx 进程只会在一个时刻接收一个新的连接，我们可以配置<code>multi_accept</code> 为 <code>on</code>，实现在一个时刻内可以接收多个新的连接，提高处理效率。该参数默认是 <code>off</code>，建议开启。</p>
<pre class="line-numbers language-none"><code class="language-none">events &#123;
  multi_accept on;
&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>

<h4 id="配置-worker-进程的最大打开文件数"><a href="#配置-worker-进程的最大打开文件数" class="headerlink" title="配置 worker 进程的最大打开文件数"></a>配置 worker 进程的最大打开文件数</h4><p>调整配置 Nginx worker 进程的最大打开文件数，这个控制连接数的参数为<code> worker_rlimit_nofile</code>。该参数的实际配置如下:</p>
<pre class="line-numbers language-none"><code class="language-none">worker_rlimit_nofile 65535;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>可设置为系统优化后的 <code>ulimit -HSn</code> 的结果</p>
<h4 id="优化域名的散列表大小"><a href="#优化域名的散列表大小" class="headerlink" title="优化域名的散列表大小"></a>优化域名的散列表大小</h4><pre class="line-numbers language-none"><code class="language-none">http &#123;
  server_names_hash_bucket_size 128;
&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>

<p>参数作用:设置存放域名( server names)的最大散列表的存储桶( bucket)的大小。 默认值依赖 CPU 的缓存行。</p>
<p><code>server_names_hash_bucket_size</code> 的值是不能带单位 的。配置主机时必须设置该值，否则无法运行 Nginx，或者无法通过测试 。 该设置与 <code>server_ names_hash_max_size</code> 共同控制保存服务器名的 hash 表， hash bucket size 总是等于 hash 表的大小， 并且是一路处理器缓存大小的倍数。若 hash bucket size 等于一路处理器缓存的大小，那么在查找键时， 最坏的情况下在内存中查找的次数为 2。第一次是确定存储单元的地址，第二次是在存储单元中查找键值 。 若报 出 hash max size 或 hash bucket size 的提示，则需要增加 <code>server_names_hash_max size</code> 的值。</p>
<h4 id="TCP-优化"><a href="#TCP-优化" class="headerlink" title="TCP 优化"></a>TCP 优化</h4><pre class="line-numbers language-none"><code class="language-none">http &#123;
  sendfile on;
  tcp_nopush on;

  keepalive_timeout 120;
  tcp_nodelay on;
&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>第一行的 <code>sendfile</code> 配置可以提高 Nginx 静态资源托管效率。sendfile 是一个系统调用，直接在内核空间完成文件发送，不需要先 read 再 write，没有上下文切换开销。</p>
<p>TCP_NOPUSH 是 FreeBSD 的一个 socket 选项，对应 Linux 的 TCP_CORK，Nginx 里统一用 <code>tcp_nopush</code> 来控制它，并且只有在启用了 <code>sendfile</code> 之后才生效。启用它之后，数据包会累计到一定大小之后才会发送，减小了额外开销，提高网络效率。</p>
<p>TCP_NODELAY 也是一个 socket 选项，启用后会禁用 Nagle 算法，尽快发送数据，某些情况下可以节约 200ms（Nagle 算法原理是：在发出去的数据还未被确认之前，新生成的小数据先存起来，凑满一个 MSS 或者等到收到确认后再发送）。Nginx 只会针对处于 keep-alive 状态的 TCP 连接才会启用 <code>tcp_nodelay</code>。</p>
<h4 id="优化连接参数"><a href="#优化连接参数" class="headerlink" title="优化连接参数"></a>优化连接参数</h4><pre class="line-numbers language-none"><code class="language-none">http &#123;
  client_header_buffer_size 32k;
  large_client_header_buffers 4 32k;
  client_max_body_size 1024m;
  client_body_buffer_size 10m;
&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>这部分更多是更具业务场景来决定的。例如<code>client_max_body_size</code>用来决定请求体的大小，用来限制上传文件的大小。上面列出的参数可以作为起始参数。</p>
<h4 id="配置压缩优化"><a href="#配置压缩优化" class="headerlink" title="配置压缩优化"></a>配置压缩优化</h4><p><strong>1、Gzip 压缩</strong></p>
<p>我们在上线前，代码（JS、CSS 和 HTML）会做压缩，图片也会做压缩（PNGOUT、Pngcrush、JpegOptim、Gifsicle 等）。对于文本文件，在服务端发送响应之前进行 GZip 压缩也很重要，通常压缩后的文本大小会减小到原来的 1&#x2F;4 - 1&#x2F;3。</p>
<pre class="line-numbers language-none"><code class="language-none">http &#123;
  gzip on;
  gzip_buffers 16 8k;
  gzip_comp_level 6;
  gzip_http_version 1.0;
  gzip_min_length 1000;
  gzip_proxied any;
  gzip_vary on;
  gzip_types
    text&#x2F;xml application&#x2F;xml application&#x2F;atom+xml application&#x2F;rss+xml application&#x2F;xhtml+xml image&#x2F;svg+xml
    text&#x2F;javascript application&#x2F;javascript application&#x2F;x-javascript
    text&#x2F;x-json application&#x2F;json application&#x2F;x-web-app-manifest+json
    text&#x2F;css text&#x2F;plain text&#x2F;x-component
    font&#x2F;opentype application&#x2F;x-font-ttf application&#x2F;vnd.ms-fontobject
    image&#x2F;x-icon;
  gzip_disable &quot;MSIE [1-6]\.(?!.*SV1)&quot;;
&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>这部分内容比较简单，只有两个地方需要解释下：</p>
<p><code>gzip_vary</code> 用来输出 Vary 响应头，用来解决某些缓存服务的一个问题，详情请看我之前的博客：HTTP 协议中 Vary 的一些研究。</p>
<p><code>gzip_disable</code> 指令接受一个正则表达式，当请求头中的 UserAgent 字段满足这个正则时，响应不会启用 GZip，这是为了解决在某些浏览器启用 GZip 带来的问题。</p>
<p>默认 Nginx 只会针对 HTTP&#x2F;1.1 及以上的请求才会启用 GZip，因为部分早期的 HTTP&#x2F;1.0 客户端在处理 GZip 时有 Bug。现在基本上可以忽略这种情况，于是可以指定 gzip_http_version 1.0 来针对 HTTP&#x2F;1.0 及以上的请求开启 GZip。</p>
<p><strong>2、Brotli 压缩</strong></p>
<p>Brotli 是基于LZ77算法的一个现代变体、霍夫曼编码和二阶上下文建模。Google软件工程师在2015年9月发布了包含通用无损数据压缩的Brotli增强版本，特别侧重于HTTP压缩。其中的编码器被部分改写以提高压缩比，编码器和解码器都提高了速度，流式API已被改进，增加更多压缩质量级别。</p>
<p>需要安装<code>libbrotli </code>、<code>ngx_brotli </code>，重新编译 Nginx 时，带上<code>--add-module=/path/to/ngx_brotli</code>即可，然后配置如下</p>
<pre class="line-numbers language-none"><code class="language-none">http &#123;
  brotli on;
  brotli_comp_level 6;
  brotli_types text&#x2F;plain text&#x2F;css application&#x2F;json application&#x2F;x-javascript text&#x2F;xml application&#x2F;xml application&#x2F;xml+rss text&#x2F;javascript application&#x2F;javascript image&#x2F;svg+xml;
&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>Brotli 可与 Gzip 共存在一个配置文件中</p>
<h4 id="静态资源优化"><a href="#静态资源优化" class="headerlink" title="静态资源优化"></a>静态资源优化</h4><p>静态资源优化，可以减少连接请求数，同时也不需要对这些资源请求打印日志。但副作用是资源更新可能无法及时。</p>
<pre class="line-numbers language-none"><code class="language-none">server &#123;
    # 图片、视频
    location ~ .*\.(gif|jpg|jpeg|png|bmp|swf|flv|mp4|ico)$ &#123;
      expires 30d;
      access_log off;
    &#125;
    # 字体
    location ~ .*\.(eot|ttf|otf|woff|svg)$ &#123;
      expires 30d;
      access_log off;
    &#125;
    # js、css
    location ~ .*\.(js|css)?$ &#123;
      expires 7d;
      access_log off;
    &#125;
&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<hr>
]]></content>
      <categories>
        <category>nginx</category>
      </categories>
      <tags>
        <tag>nginx</tag>
      </tags>
  </entry>
  <entry>
    <title>CentOS7.6进入单用户模式</title>
    <url>/2020/12/01/CentOS7.6%E8%BF%9B%E5%85%A5%E5%8D%95%E7%94%A8%E6%88%B7%E6%A8%A1%E5%BC%8F/</url>
    <content><![CDATA[<ul>
<li></li>
</ul>
<p>CentOS7.6进入单用户模式</p>
<p>1、在启动grub菜单，选择编辑启动选项<br>2、按键盘e键，来进入编辑界面<br>3、找到Linux 16那行，将ro改为rw init&#x3D;&#x2F;sysroot&#x2F;bin&#x2F;sh<br>如果用的是kvm做了console连接授权，还要把授权的console&#x3D;ttyS0去掉<br>4、按下 Control+x ，使用单用户模式启动<br>5、使用下面的命令访问系统<br>chroot &#x2F;sysroot<br>6、重置密码<br>passwd root<br>7、更新系统信息（如果打开了selinux需要做这一步）<br>touch &#x2F;.autorelabel<br>8、退出chroot<br>exit<br>9、重启系统<br>reboot</p>
]]></content>
      <tags>
        <tag>centos</tag>
      </tags>
  </entry>
  <entry>
    <title>Awesome Mac</title>
    <url>/2023/02/08/Awesome-Mac/</url>
    <content><![CDATA[<h1 id="Awesome-Mac"><a href="#Awesome-Mac" class="headerlink" title="Awesome Mac"></a>Awesome Mac</h1><!--rehype:style=font-size: 38px; border-bottom: 0; display: flex; min-height: 260px; align-items: center; justify-content: center;-->

<p><a href="https://github.com/sindresorhus/awesome"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/awesome.svg"
                      alt="Awesome"
                ></a> <a href="README.md"><img src="https://jaywcjlove.github.io/sb/lang/english.svg" alt="jaywcjlove/sb"></a> <a href="https://gitter.im/awesome-mac/en?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=body_badge"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/gitter.svg"
                      alt="Gitter"
                ></a> <a href="https://segmentfault.com/g/1570000010622746"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/segmentfault.svg"
                      alt="SegmentFault"
                ></a> <a href="http://weibo.com/pc175"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/weibo.svg"
                     
                ></a> <a href="#backers"><img  
                     lazyload
                     alt="image"
                     data-src="https://opencollective.com/awesome-mac/backers/badge.svg"
                      alt="Backers on Open Collective"
                ></a> <a href="#sponsors"><img  
                     lazyload
                     alt="image"
                     data-src="https://opencollective.com/awesome-mac/sponsors/badge.svg"
                      alt="Sponsors on Open Collective"
                ></a> <a href="https://hub.docker.com/r/wcjiang/awesome-mac"><img  
                     lazyload
                     alt="image"
                     data-src="https://img.shields.io/docker/v/wcjiang/awesome-mac?logo=docker"
                      alt="Docker Image Version (latest by date)"
                ></a></p>
<!--rehype:style=text-align: center;-->

<p> 现在我们变得非常大，与最初的想法不同，如今我们需要收集各种类别非常好用的 Mac 应用程序、软件以及工具。通过 Pull Request 或者 <a class="link"   href="https://github.com/jaywcjlove/awesome-mac/issues/new/choose" >issues<i class="fas fa-external-link-alt"></i></a> 给我推荐优秀好用的Mac应用，很显然我是一个资深 Mac 用户，我需要它们帮助我快乐、高效的工作，同时也分享给你。文档格式参照 <a class="link"   href="https://github.com/sindresorhus/awesome" >awesome<i class="fas fa-external-link-alt"></i></a>。</p>
<p><strong>说明</strong></p>
<p><a href="README.md">English</a> | <a href="README-zh.md">中文</a></p>
<p><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                > 表示 <strong>开源软件</strong> ，点击进入 <strong>开源</strong> 仓库；<br><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                > 表示 <strong>免费</strong> 使用，或者个人 <strong>免费</strong> ；<br><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-app-store.svg"
                      alt="App Store" title="苹果应用商店软件"
                > 表示 <strong>App store</strong> 连接地址；<br><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-awesome.svg"
                      alt="Awesome List" title="Awesome List"
                > 表示项目的相应 <strong>Awesome list</strong> 的超链接；</p>
<!--idoc:ignore:start-->

<h2 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h2><ul>
<li><a href="#awesome-mac">Awesome Mac</a></li>
<li><a href="#%E7%9B%AE%E5%BD%95">目录</a></li>
<li><a href="#%E5%BC%80%E5%8F%91%E8%80%85%E5%B7%A5%E5%85%B7">开发者工具</a><ul>
<li><a href="#%E7%BC%96%E8%BE%91%E5%99%A8">编辑器</a></li>
<li><a href="#%E5%BC%80%E5%8F%91%E8%80%85%E5%AE%9E%E7%94%A8%E5%B7%A5%E5%85%B7">开发者实用工具</a></li>
<li><a href="#%E6%AD%A3%E5%88%99%E7%BC%96%E8%BE%91%E5%99%A8">正则编辑器</a></li>
<li><a href="#api%E5%BC%80%E5%8F%91%E5%92%8C%E5%88%86%E6%9E%90">API开发和分析</a></li>
<li><a href="#%E7%BD%91%E7%BB%9C%E5%88%86%E6%9E%90">网络分析</a></li>
<li><a href="#%E5%91%BD%E4%BB%A4%E8%A1%8C%E5%B7%A5%E5%85%B7">命令行工具</a></li>
<li><a href="#%E7%89%88%E6%9C%AC%E6%8E%A7%E5%88%B6">版本控制</a></li>
<li><a href="#gui">GUI</a></li>
<li><a href="#%E7%89%88%E6%9C%AC%E6%8E%A7%E5%88%B6%E7%B3%BB%E7%BB%9F">版本控制系统</a></li>
<li><a href="#%E6%95%B0%E6%8D%AE%E5%BA%93">数据库</a></li>
</ul>
</li>
<li><a href="#%E8%AE%BE%E8%AE%A1%E5%92%8C%E4%BA%A7%E5%93%81">设计和产品</a><ul>
<li><a href="#%E8%AE%BE%E8%AE%A1%E5%B7%A5%E5%85%B7">设计工具</a></li>
<li><a href="#%E5%8E%9F%E5%9E%8B%E6%B5%81%E7%A8%8B">原型流程</a></li>
<li><a href="#%E4%BD%9C%E5%9B%BE%E5%B7%A5%E5%85%B7">作图工具</a></li>
<li><a href="#%E6%88%AA%E5%9B%BE%E5%B7%A5%E5%85%B7">截图工具</a></li>
<li><a href="#%E5%85%B6%E5%AE%83%E5%B7%A5%E5%85%B7">其它工具</a></li>
</ul>
</li>
<li><a href="#%E8%99%9A%E6%8B%9F%E6%9C%BA">虚拟机</a></li>
<li><a href="#%E9%80%9A%E4%BF%A1">通信</a><ul>
<li><a href="#email">Email</a></li>
<li><a href="#%E6%96%87%E4%BB%B6%E5%85%B1%E4%BA%AB">文件共享</a></li>
</ul>
</li>
<li><a href="#%E6%95%B0%E6%8D%AE%E6%81%A2%E5%A4%8D">数据恢复</a></li>
<li><a href="#%E9%9F%B3%E9%A2%91%E5%92%8C%E8%A7%86%E9%A2%91">音频和视频</a><ul>
<li><a href="#%E4%BA%91%E9%9F%B3%E4%B9%90%E6%92%AD%E6%94%BE%E5%99%A8">云音乐播放器</a></li>
<li><a href="#%E9%9F%B3%E9%A2%91%E5%BD%95%E5%88%B6%E4%B8%8E%E7%BC%96%E8%BE%91">音频录制与编辑</a></li>
</ul>
</li>
<li><a href="#%E4%B9%A6%E7%AD%BE%E9%98%85%E8%AF%BB%E5%86%99%E4%BD%9C">书签阅读写作</a><ul>
<li><a href="#office">Office</a></li>
<li><a href="#rss">RSS</a></li>
<li><a href="#markdown">Markdown</a></li>
<li><a href="#%E7%AC%94%E8%AE%B0">笔记</a></li>
</ul>
</li>
<li><a href="#%E5%88%B6%E4%BD%9C%E7%94%B5%E5%AD%90%E4%B9%A6">制作电子书</a></li>
<li><a href="#%E8%BD%AF%E4%BB%B6%E6%89%93%E5%8C%85%E5%B7%A5%E5%85%B7">软件打包工具</a></li>
<li><a href="#%E4%B8%8B%E8%BD%BD%E5%B7%A5%E5%85%B7">下载工具</a></li>
<li><a href="#%E7%BD%91%E7%9B%98">网盘</a></li>
<li><a href="#%E8%BE%93%E5%85%A5%E6%B3%95">输入法</a></li>
<li><a href="#%E6%B5%8F%E8%A7%88%E5%99%A8">浏览器</a></li>
<li><a href="#%E7%BF%BB%E8%AF%91%E5%B7%A5%E5%85%B7">翻译工具</a></li>
<li><a href="#%E5%AE%89%E5%85%A8%E5%B7%A5%E5%85%B7">安全工具</a></li>
<li><a href="#%E7%A7%91-%E5%AD%A6-%E4%B8%8A%E7%BD%91">科-学-上网</a></li>
<li><a href="#%E5%85%B6%E5%AE%83%E5%AE%9E%E7%94%A8%E5%B7%A5%E5%85%B7">其它实用工具</a><ul>
<li><a href="#%E5%89%AA%E8%B4%B4%E6%9D%BF%E5%B7%A5%E5%85%B7">剪贴板工具</a></li>
<li><a href="#%E8%8F%9C%E5%8D%95%E6%A0%8F%E5%B7%A5%E5%85%B7">菜单栏工具</a></li>
<li><a href="#%E5%BE%85%E5%8A%9E%E4%BA%8B%E9%A1%B9%E5%B7%A5%E5%85%B7">待办事项工具</a></li>
<li><a href="#%E7%B3%BB%E7%BB%9F%E7%9B%B8%E5%85%B3%E5%B7%A5%E5%85%B7">系统相关工具</a></li>
<li><a href="#%E7%AA%97%E5%8F%A3%E7%AE%A1%E7%90%86">窗口管理</a></li>
<li><a href="#%E5%AF%86%E7%A0%81%E7%AE%A1%E7%90%86">密码管理</a></li>
<li><a href="#finder">Finder</a></li>
</ul>
</li>
<li><a href="#%E8%BF%9C%E7%A8%8B%E5%8D%8F%E5%8A%A9">远程协助</a></li>
<li><a href="#quicklook%E6%8F%92%E4%BB%B6">QuickLook插件</a></li>
<li><a href="#%E7%AC%AC%E4%B8%89%E6%96%B9%E5%BA%94%E7%94%A8%E5%B8%82%E5%9C%BAapp">第三方应用市场APP</a><ul>
<li><a href="#%E6%AD%A3%E7%89%88">正版</a></li>
<li><a href="#%E5%BA%94%E7%94%A8%E5%95%86%E5%BA%97%E9%BB%91%E5%90%8D%E5%8D%95">应用商店黑名单</a></li>
</ul>
</li>
<li><a href="#mac%E8%BD%AF%E4%BB%B6%E4%B8%8B%E8%BD%BD%E7%BD%91%E7%AB%99">Mac软件下载网站</a><ul>
<li><a href="#%E6%AD%A3%E7%89%88%E4%BB%8B%E7%BB%8D">正版&#x2F;介绍</a></li>
<li><a href="#%E7%9B%97%E7%89%88%E8%BD%AF%E4%BB%B6%E4%B8%8B%E8%BD%BD%E7%BD%91%E7%AB%99%E9%BB%91%E5%90%8D%E5%8D%95">盗版软件下载网站黑名单</a></li>
</ul>
</li>
<li><a href="#contributors">Contributors</a></li>
<li><a href="#backers">Backers</a></li>
<li><a href="#sponsors">Sponsors</a></li>
<li><a href="#license">License</a></li>
</ul>
<!--start-->
<!--idoc:ignore:end-->

<h2 id="开发者工具"><a href="#开发者工具" class="headerlink" title="开发者工具"></a>开发者工具</h2><h3 id="编辑器"><a href="#编辑器" class="headerlink" title="编辑器"></a>编辑器</h3><p><em>一种用于编辑纯文本文件的程序，建议使用免费开源的编辑器</em></p>
<ul>
<li><a class="link"   href="https://developer.android.com/studio/index.html" >Android Studio<i class="fas fa-external-link-alt"></i></a> - Android 的官方 IDE，基于 Intellij IDEA。 <a href="http://tools.android.com/"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                ></a> <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                > <a href="https://github.com/balsikandar/Android-Studio-Plugins#readme"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-awesome.svg"
                      alt="Awesome List" title="Awesome List"
                ></a></li>
<li><a class="link"   href="http://brackets.io/" >Brackets<i class="fas fa-external-link-alt"></i></a> - Adobe 推出的 Brackets 免费&#x2F;开源编辑器。<a href="https://github.com/adobe/brackets/"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                ></a> <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="http://www.barebones.com/products/bbedit/" >BBEdit<i class="fas fa-external-link-alt"></i></a> - 强大的文件编辑器，用于编辑文件，文本文件及程序源代码。</li>
<li><a class="link"   href="http://panic.com/coda/" >Nova<i class="fas fa-external-link-alt"></i></a> - 用于编写 Web 应用，长得漂亮的编辑器，Coda2 下一代编辑器。</li>
<li><a class="link"   href="https://coteditor.com/" >CotEditor<i class="fas fa-external-link-alt"></i></a> - 轻量级的纯文本编辑器。 <a href="https://github.com/coteditor/CotEditor/"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                ></a> <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="https://chocolatapp.com/" >Chocolat<i class="fas fa-external-link-alt"></i></a> - 轻量级本地编辑器。</li>
<li><a class="link"   href="https://www.decosoftware.com/" >Deco IDE<i class="fas fa-external-link-alt"></i></a> - React Native IDE 支持控件拖拽界面实时变更。<a href="https://github.com/decosoftware/deco-ide"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                > <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></a></li>
<li><a class="link"   href="http://espressoapp.com/" >Espresso<i class="fas fa-external-link-alt"></i></a> - Web 编程利器，具备了快速且强大的编辑功能、专业检查与分类、即时预览编辑成果、发布与同步功能等。</li>
<li><a class="link"   href="https://www.emacswiki.org/emacs/EmacsForMacOS" >Emacs<i class="fas fa-external-link-alt"></i></a> - Emacs 是基于控制台的编辑器和高度可定制的。 <a href="https://git.savannah.gnu.org/cgit/"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                ></a> <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                > <a href="https://github.com/emacs-tw/awesome-emacs#readme"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-awesome.svg"
                      alt="Awesome List" title="Awesome List"
                ></a></li>
<li><a class="link"   href="https://www.eclipse.org/" >Eclipse<i class="fas fa-external-link-alt"></i></a> - 流行的开源 IDE，主要用于 Java，也为多种语言提供插件支持。<img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                > <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="http://www.sublimetext.com/3" >Sublime Text<i class="fas fa-external-link-alt"></i></a> - 一个比较简洁大方带插件管理系统的流行编辑器，<a href="editor-plugin-zh.md#sublime-text-plugin">Sublime常用插件</a>。 <a href="https://github.com/dreikanter/sublime-bookmarks#readme"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-awesome.svg"
                      alt="Awesome List" title="Awesome List"
                ></a></li>
<li><a class="link"   href="http://haskellformac.com/" >Haskell for Mac<i class="fas fa-external-link-alt"></i></a> - Haskell 的现代开发环境。 <a href="https://itunes.apple.com/app/haskell-development-platform/id841285201"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-app-store.svg"
                      alt="App Store" title="苹果应用商店软件"
                ></a></li>
<li><a class="link"   href="http://www.dcloud.io/" >HBuilder<i class="fas fa-external-link-alt"></i></a> - HBuilder 是 DCloud（数字天堂）推出的一款支持 HTML5 的 Web 开发 IDE。<img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="https://www.jetbrains.com/toolbox/" >JetBrains Toolbox App<i class="fas fa-external-link-alt"></i></a> - 管理已安装的JetBrains工具，下载新工具并打开最近的项目。 <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ><ul>
<li><a class="link"   href="https://www.jetbrains.com/clion/" >CLion<i class="fas fa-external-link-alt"></i></a> - 强大的 C 和 C++ IDE。(<strong>学生免费</strong>)</li>
<li><a class="link"   href="http://www.jetbrains.com/datagrip/" >DataGrip<i class="fas fa-external-link-alt"></i></a> - 用于数据库和SQL的跨平台IDE。 (<strong>学生免费</strong>), 查看<a class="link"   href="https://www.jetbrains.com/student/" >此处<i class="fas fa-external-link-alt"></i></a>了解更多。</li>
<li><a class="link"   href="https://www.jetbrains.com/rider/" >Rider<i class="fas fa-external-link-alt"></i></a> - 跨平台 C# IDE。 它是 Microsoft 的 Visual Studio 的替代方案.</li>
<li><a class="link"   href="https://www.jetbrains.com/objc/" >AppCode<i class="fas fa-external-link-alt"></i></a> - 适用于 iOS &#x2F; macOS 开发的智能 IDE</li>
<li><a class="link"   href="https://www.jetbrains.com/pycharm/" >PyCharm<i class="fas fa-external-link-alt"></i></a> - 一款 Python 开发集成环境，有专业版和社区版。</li>
<li><a class="link"   href="https://www.jetbrains.com/idea/" >IntelliJ IDEA<i class="fas fa-external-link-alt"></i></a> - 一款 Java 开发集成环境。(<strong>学生</strong>免费)</li>
<li><a class="link"   href="https://www.jetbrains.com/go/" >GoLand<i class="fas fa-external-link-alt"></i></a> - JetBrains出品的Go开发IDE，智能，灵活</li>
<li><a class="link"   href="http://www.jetbrains.com/webstorm/" >Webstorm<i class="fas fa-external-link-alt"></i></a> - 是 JetBrains 公司旗下一款 JavaScript 开发工具。<strong>学生</strong>免费，<a class="link"   href="https://www.jetbrains.com/student/" >点击这里<i class="fas fa-external-link-alt"></i></a> 查看更多。<ul>
<li><a class="link"   href="https://plugins.jetbrains.com/plugin/6098-nodejs" >NodeJS<i class="fas fa-external-link-alt"></i></a> - 集成 <code>Node.js</code>，你肯定需要它，很多功能需要它。</li>
<li><a class="link"   href="https://plugins.jetbrains.com/plugin/7294-editorconfig" >EditorConfig<i class="fas fa-external-link-alt"></i></a> - 帮助开发者在不同的编辑器和 IDE 之间定义和维护一致的代码风格。</li>
<li><a class="link"   href="https://plugins.jetbrains.com/plugin/8006-material-theme-ui" >Material Theme UI<i class="fas fa-external-link-alt"></i></a> - Google 为 React 开发的主题。</li>
</ul>
</li>
</ul>
</li>
<li><a class="link"   href="http://lighttable.com/" >LightTable<i class="fas fa-external-link-alt"></i></a> - 下一代代码编辑器。<a href="https://github.com/LightTable/LightTable"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                ></a> <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="https://micro-editor.github.io/" >micro<i class="fas fa-external-link-alt"></i></a> - 一个现代直观的基于终端的文本编辑器。 <a href="https://github.com/ory/editor"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                ></a> <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="https://netbeans.org/" >NetBeans IDE<i class="fas fa-external-link-alt"></i></a> - 免费、开源的 IDE，主要用于 Java 开发，可支持多种语言和框架。 <a href="https://netbeans.org/community/sources/"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                ></a> <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="https://github.com/onivim/oni" >ONI<i class="fas fa-external-link-alt"></i></a> - 由 Neovim 提供的 IDE。<a href="https://github.com/onivim/oni"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                ></a> <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="https://www1.qt.io/cn/" >Qt<i class="fas fa-external-link-alt"></i></a> - 跨平台 C++ 图形用户界面应用程序开发框架。</li>
<li><a class="link"   href="https://macromates.com/" >TextMate<i class="fas fa-external-link-alt"></i></a> - 文本编辑器软件，与 BBedit 一起并称苹果机上的 emacs 和 vim。<a href="https://github.com/textmate/textmate"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                ></a> <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="https://codingfriends.github.io/Tincta/" >Tincta<i class="fas fa-external-link-alt"></i></a> - 一个免费的文本编辑器。<img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                > <a href="https://github.com/CodingFriends/Tincta"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                ></a> <a href="https://itunes.apple.com/cn/app/tincta/id448340648"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-app-store.svg"
                      alt="App Store" title="苹果应用商店软件"
                ></a></li>
<li><a class="link"   href="https://code.visualstudio.com/" >Visual Studio Code<i class="fas fa-external-link-alt"></i></a> - 微软推出的免费&#x2F;开源编辑器，TypeScript 支持杠杠的，<a href="editor-plugin-zh.md#vscode-plugin">VSCode常用插件</a>。<a href="https://github.com/Microsoft/vscode"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                ></a> <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                > <a href="https://github.com/viatsko/awesome-vscode#readme"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-awesome.svg"
                      alt="Awesome List" title="Awesome List"
                ></a></li>
<li><a class="link"   href="http://www.vim.org/" >Vim<i class="fas fa-external-link-alt"></i></a> - Vim 古老的终端中使用的编辑器，<a href="editor-plugin-zh.md#vim-plugin">Vim常用插件</a>。<a href="https://github.com/vim/vim"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                ></a> <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                > <a href="https://github.com/mhinz/vim-galore#readme"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-awesome.svg"
                      alt="Awesome List" title="Awesome List"
                ></a></li>
<li><a class="link"   href="http://vimr.org/" >Vimr<i class="fas fa-external-link-alt"></i></a> - Vim 客户端，升级 Vim 体验。<a href="https://github.com/qvacua/vimr/"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                > <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></a></li>
<li><a class="link"   href="https://www.visualstudio.com/vs/visual-studio-mac/" >Visual Studio Community for Mac<i class="fas fa-external-link-alt"></i></a> - 免费，开源，功能齐全的 IDE。 <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="https://www.visualstudio.com/vs/visual-studio-mac/" >Xamarin Studio<i class="fas fa-external-link-alt"></i></a> - 免费的跨平台的 C# IDE。支持 IOS、Android 和 .net 开发。<a href="https://github.com/mono/monodevelop"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                ></a> <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                > <a href="https://github.com/benoitjadinon/awesome-xamarin#readme"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-awesome.svg"
                      alt="Awesome List" title="Awesome List"
                ></a></li>
<li><a class="link"   href="https://developer.apple.com/xcode/" >Xcode<i class="fas fa-external-link-alt"></i></a> - 开发 iOS 和 MacOS 基本 IDE。 <a href="https://itunes.apple.com/cn/app/xcode/id497799835"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-app-store.svg"
                      alt="App Store" title="苹果应用商店软件"
                ></a></li>
</ul>
<h3 id="开发者实用工具"><a href="#开发者实用工具" class="headerlink" title="开发者实用工具"></a>开发者实用工具</h3><ul>
<li><a class="link"   href="http://www.publicspace.net/BetterRename/" >BetterRename<i class="fas fa-external-link-alt"></i></a> - 一款强大的批量重命名工具，可以通过搜索功能改名。<a href="https://itunes.apple.com/cn/app/better-rename-9/id414209656"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-app-store.svg"
                      alt="App Store" title="苹果应用商店软件"
                ></a></li>
<li><a class="link"   href="http://www.scootersoftware.com/download.php" >Beyond Compare<i class="fas fa-external-link-alt"></i></a> - 对比两个文件夹或者文件，并将差异以颜色标示。</li>
<li><a class="link"   href="https://codekitapp.com/" >CodeKit<i class="fas fa-external-link-alt"></i></a> - 自动编译 Less、Sass、Stylus、CoffeeScript、Jade &amp; Haml等文件。</li>
<li><a class="link"   href="https://www.cacher.io/" >Cacher<i class="fas fa-external-link-alt"></i></a> - 基于云的团队代码片段管理器，具有Gist同步，VSCode&#x2F;Atom&#x2F;Sublime软件包和Mac&#x2F;Windows&#x2F;Linux&#x2F;Web客户端。</li>
<li><a class="link"   href="https://github.com/isaced/CubicBezier" >CubicBezier<i class="fas fa-external-link-alt"></i></a> - 一个适用于 macOS 的贝塞尔曲线生成器。 <a href="https://github.com/isaced/CubicBezier"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                ></a> <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                > <a href="https://itunes.apple.com/us/app/cubicbezier/id1228492117?mt=12"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-app-store.svg"
                      alt="App Store" title="苹果应用商店软件"
                ></a></li>
<li><a class="link"   href="https://kapeli.com/dash" >Dash<i class="fas fa-external-link-alt"></i></a> - 强大到你无法想象的 API 离线文档软件。<img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="http://sourcegear.com/diffmerge/" >DiffMerge<i class="fas fa-external-link-alt"></i></a> - 可视化的文件比较（也可进行目录比较）与合并工具。<img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="https://github.com/hschmidt/EnvPane" >EnvPane<i class="fas fa-external-link-alt"></i></a> - 图形终端查看环境变量的应用工具。<a href="https://github.com/hschmidt/EnvPane"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                > <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></a></li>
<li><a class="link"   href="https://github.com/TencentOpen/Fanvas" >Fanvas<i class="fas fa-external-link-alt"></i></a> - 把 swf 转为 HTML5 canvas 动画的系统。<a href="https://github.com/oklai/koala/"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                > <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></a></li>
<li><a class="link"   href="https://github.com/onmyway133/FinderGo" >FinderGo<i class="fas fa-external-link-alt"></i></a> - Finder 中快速打开终端，定位到目录 <a href="https://github.com/onmyway133/FinderGo"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                ></a></li>
<li><a class="link"   href="https://github.com/2ndalpha/gasmask" >Gas Mask<i class="fas fa-external-link-alt"></i></a> - 编辑 hosts 文件的工具，更简单方便。<a href="https://github.com/2ndalpha/gasmask"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                ></a> <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="http://zipzapmac.com/Go2Shell" >Go2Shell<i class="fas fa-external-link-alt"></i></a> - 从 Finder 打开命令行。<img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="https://macpaw.com/gemini" >Gemini<i class="fas fa-external-link-alt"></i></a> - 智能的重复文件查找器。</li>
<li><a class="link"   href="https://github.com/specialunderwear/Hosts.prefpane" >Hosts.prefpane<i class="fas fa-external-link-alt"></i></a> - 编辑 hosts 文件的工具。<a href="https://github.com/specialunderwear/Hosts.prefpane"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                > <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></a></li>
<li><a class="link"   href="https://ridiculousfish.com/hexfiend/" >Hex Fiend<i class="fas fa-external-link-alt"></i></a> - 快速而聪明的开源十六进制编辑器。 <a href="https://github.com/ridiculousfish/HexFiend/"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                ></a> <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                > <a href="https://itunes.apple.com/cn/app/hex-fiend/id1342896380"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-app-store.svg"
                      alt="App Store" title="苹果应用商店软件"
                ></a></li>
<li><a class="link"   href="https://en.toolinbox.net/iHosts/" >iHosts<i class="fas fa-external-link-alt"></i></a> - 唯一上架 Mac App Store 的 &#x2F;etc&#x2F;hosts 编辑神器。 <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                > <a href="https://itunes.apple.com/cn/app/ihosts-%E7%BC%96%E8%BE%91%E7%A5%9E%E5%99%A8/id1102004240"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-app-store.svg"
                      alt="App Store" title="苹果应用商店软件"
                ></a></li>
<li><a class="link"   href="http://peacockmedia.software/mac/integrity/free.html" >Integrity<i class="fas fa-external-link-alt"></i></a> - 轻松找到无效链接。<img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="http://koala-app.com/" >Koala<i class="fas fa-external-link-alt"></i></a> - 预处理器语言图形编译工具，支持 Less、Sass、CoffeeScript、Compass framework 的即时编译。<a href="https://github.com/oklai/koala/"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                ></a> <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="http://www.kaleidoscopeapp.com/" >Kaleidoscope<i class="fas fa-external-link-alt"></i></a> - 一款很强大的文本文件和图像比较工具，同时和 git、svn 等版本控制工具能够完美的结合。</li>
<li><a class="link"   href="http://localname.io/" >Localname<i class="fas fa-external-link-alt"></i></a> - 提供对本地开发服务器的访问权限。 <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="https://mjmlio.github.io/mjml-app/" >MJML<i class="fas fa-external-link-alt"></i></a> - 简化设计回应电子邮件的方式。<a href="https://github.com/mjmlio/mjml"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                > <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></a></li>
<li><a class="link"   href="https://www.paintcodeapp.com/" >PaintCode<i class="fas fa-external-link-alt"></i></a> - 将设计转换成 Objective-C, Swift 或 C# 代码。</li>
<li><a class="link"   href="https://pushmate.app/" >PushMate<i class="fas fa-external-link-alt"></i></a> - 可通过确保推送有效载荷正确来解决常见的推送通知问题。</li>
<li><a class="link"   href="https://github.com/jkpang/PPRows" >PPRows<i class="fas fa-external-link-alt"></i></a> - 计算你写了多少行代码。<img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                > <a href="https://github.com/jkpang/PPRows"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                ></a></li>
<li><a class="link"   href="https://oldj.github.io/SwitchHosts/" >SwitchHosts<i class="fas fa-external-link-alt"></i></a> - 一个管理、切换多个 hosts 方案的工具。<a href="https://github.com/oldj/SwitchHosts"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                ></a> <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="https://github.com/scmbreeze/scm_breeze" >SCM Breeze<i class="fas fa-external-link-alt"></i></a> - 用于增强与git交互的shell脚本集(用于bash和zsh)。<img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                > <a href="https://github.com/scmbreeze/scm_breeze"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                ></a></li>
<li><a class="link"   href="https://www.renfei.org/snippets-lab/" >SnippetsLab<i class="fas fa-external-link-alt"></i></a> - 管理和组织你的代码片段。</li>
<li><a class="link"   href="http://staruml.io/" >StarUML<i class="fas fa-external-link-alt"></i></a> - 强大的软件建模软件。</li>
<li><a class="link"   href="https://www.vandyke.com/products/securecrt/" >SecureCRT<i class="fas fa-external-link-alt"></i></a> - 一款支持 SSH、Telnet 等多种协议的终端仿真程序。</li>
<li><a class="link"   href="https://objectivec2swift.com/#/xcode-extension/" >Swiftify<i class="fas fa-external-link-alt"></i></a> - Xcode ＆ Finder 扩展 Objective-C 转 Swift 代码转换器</li>
<li><a class="link"   href="https://github.com/zqqf16/SYM" >SYM<i class="fas fa-external-link-alt"></i></a> - 一个图形化的崩溃日志解析工具。 <a href="https://github.com/zqqf16/SYM"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                > <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></a></li>
<li><a class="link"   href="http://www.texstudio.org/" >TeXstudio<i class="fas fa-external-link-alt"></i></a> - 集成创建 LaTeX 文档的写作环境。 <a href="https://sourceforge.net/projects/texstudio/"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                ></a> <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="https://u.tools/" >uTools<i class="fas fa-external-link-alt"></i></a> - 一款基于插件的程序员效率工具，包含非常多的实用插件，如图床、UUID、密码、翻译、JSON格式化等。<a href="https://u.tools/"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></a></li>
<li><a class="link"   href="http://vagrantmanager.com/" >Vagrant Manager<i class="fas fa-external-link-alt"></i></a> - 管理你本地服务。<a href="https://github.com/lanayotech/vagrant-manager/"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                > <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></a></li>
<li><a class="link"   href="https://www.vagrantup.com/" >Vagrant<i class="fas fa-external-link-alt"></i></a> - 用来构建虚拟开发环境的工具。 <a href="https://github.com/mitchellh/vagrant"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                ></a> <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                > <a href="https://github.com/iJackUA/awesome-vagrant#readme"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-awesome.svg"
                      alt="Awesome List" title="Awesome List"
                ></a></li>
<li><a class="link"   href="https://weflow.io/" >WeFlow<i class="fas fa-external-link-alt"></i></a> - 一个基于 <a class="link"   href="https://github.com/Tencent/tmt-workflow" >tmt-workflow<i class="fas fa-external-link-alt"></i></a> 前端工作流的开发工具。<a href="https://github.com/Tencent/WeFlow"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                > <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></a></li>
<li><a class="link"   href="http://www.woodpeck.cn/" >Woodpecker<i class="fas fa-external-link-alt"></i></a> - 在Mac上查看、编辑iOS App的沙盒文件, UserDefaults, Keychain项 <a href="https://itunes.apple.com/cn/app/woodpecker/id1333548463"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-app-store.svg"
                      alt="App Store" title="苹果应用商店软件"
                ></a></li>
<li><a class="link"   href="https://www.zeplin.io/" >zeplin<i class="fas fa-external-link-alt"></i></a> - 前端与设计协同工作专用工具。<img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
</ul>
<h3 id="正则编辑器"><a href="#正则编辑器" class="headerlink" title="正则编辑器"></a>正则编辑器</h3><ul>
<li><a class="link"   href="http://krillapps.com/patterns/" >Patterns<i class="fas fa-external-link-alt"></i></a> - 正则表达式编辑器。</li>
<li><a class="link"   href="http://motionobj.com/regex/?utm_source=RegexApp&utm_medium=app" >Regex<i class="fas fa-external-link-alt"></i></a> - 感觉是用过最漂亮的正则表达式测试工具。</li>
<li><a class="link"   href="http://reggyapp.com/" >Reggy<i class="fas fa-external-link-alt"></i></a> - 正则表达式编辑器。<a href="https://github.com/samsouder/reggy"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                ></a> <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="http://www.mactechnologies.com/index.php?page=downloads#regexrx" >RegExRX<i class="fas fa-external-link-alt"></i></a> - 正则表达式的开发工具。</li>
</ul>
<h3 id="API开发和分析"><a href="#API开发和分析" class="headerlink" title="API开发和分析"></a>API开发和分析</h3><ul>
<li><a class="link"   href="https://mmattozzi.github.io/cocoa-rest-client/" >Cocoa Rest Client<i class="fas fa-external-link-alt"></i></a> - 比 Postman 看起来漂亮的客户端，测试 HTTP&#x2F;REST endpoints。<a href="https://github.com/mmattozzi/cocoa-rest-client"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                > <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></a></li>
<li><a class="link"   href="https://insomnia.rest/" >Insomnia<i class="fas fa-external-link-alt"></i></a> - 最直观的跨平台 REST API 客户端。 <a href="https://github.com/getinsomnia/insomnia"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                ></a> <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="https://www.getpostman.com/" >Postman<i class="fas fa-external-link-alt"></i></a> - Postman 帮助我们快速测试 API。<img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="https://www.katalon.com/" >Katalon Studio<i class="fas fa-external-link-alt"></i></a> - 简单开放性测试前端开放工具， 网页， 手机应用等客户端。 可以使用在不同的浏览器<img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="https://www.apifox.cn/" >Apifox<i class="fas fa-external-link-alt"></i></a> - Apifox 是 API 文档、API 调试、API Mock、API 自动化测试一体化协作平台，定位 Postman + Swagger + Mock + JMeter <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="https://httpie.io/" >HTTPie<i class="fas fa-external-link-alt"></i></a> - 经典的命令行 HTTP 客户端，现在提供 APP 版和网页版。HTTPie 简单、直观的 HTTP API 客户端。<img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
</ul>
<h3 id="网络分析"><a href="#网络分析" class="headerlink" title="网络分析"></a>网络分析</h3><ul>
<li><a class="link"   href="https://www.charlesproxy.com/" >Charles<i class="fas fa-external-link-alt"></i></a> - 一个代理工具，允许你查看所有的 HTTP 和 HTTPS 流量。</li>
<li><a class="link"   href="https://github.com/james-proxy/james" >James<i class="fas fa-external-link-alt"></i></a> - 用于 https 和 http 进行查询映射请求。 <a href="https://github.com/james-proxy/james"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                ></a> <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="https://mitmproxy.org/" >mitmproxy<i class="fas fa-external-link-alt"></i></a> - 一款支持 HTTP(S) 的中间人代理工具，可在终端下运行，可用于抓包 <a href="https://github.com/james-proxy/james"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                ></a> <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="https://luckymarmot.com/paw" >Paw<i class="fas fa-external-link-alt"></i></a> - 先进的 HTTP 客户端。</li>
<li><a class="link"   href="https://proxieapp.com/" >Proxie<i class="fas fa-external-link-alt"></i></a> - HTTP 调试客户端。 <a href="https://itunes.apple.com/cn/app/cellist/id897814548"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-app-store.svg"
                      alt="App Store" title="苹果应用商店软件"
                ></a></li>
<li><a class="link"   href="https://proxyman.app/" >Proxyman<i class="fas fa-external-link-alt"></i></a> - 适用于 macOS 的现代直观 HTTP 调试代理. <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="https://www.wireshark.org/" >Wireshark<i class="fas fa-external-link-alt"></i></a> - 世界上最广泛使用的网络协议分析软件。 <a href="https://github.com/wireshark/wireshark"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                ></a> <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
</ul>
<h3 id="命令行工具"><a href="#命令行工具" class="headerlink" title="命令行工具"></a>命令行工具</h3><blockquote>
<p>A curated list of shell commands and tools specific to OS X. <a href="https://github.com/herrbischoff/awesome-macos-command-line#readme"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-awesome.svg"
                      alt="Awesome List" title="Awesome List"
                ></a></p>
</blockquote>
<ul>
<li><a class="link"   href="https://github.com/wting/autojump/wiki" >autojump<i class="fas fa-external-link-alt"></i></a> - 告别又臭又长的路径名，一键直达任何目录。 <a href="https://github.com/wting/autojump"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                ></a> <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="https://github.com/Bash-it/bash-it" >bash-it<i class="fas fa-external-link-alt"></i></a> - 一个社区的 bash 的框架。<img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                > <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="https://github.com/sharkdp/bat" >bat<i class="fas fa-external-link-alt"></i></a> - 带有语法高亮和Git集成的 <code>cat(1)</code> 克隆。 <a href="https://github.com/sharkdp/bat"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                ></a> <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="https://swordfishslabs.wordpress.com/2014/09/03/cool-old-term-is-dead-long-live-cool-retro-term/" >color-retro-term<i class="fas fa-external-link-alt"></i></a> - 一款复古风格的终端，非常酷炫。</li>
<li><a class="link"   href="https://github.com/Swordfish90/cool-retro-term" >cool-retro-term<i class="fas fa-external-link-alt"></i></a> - 怀旧的命令行终端。<a href="https://github.com/Swordfish90/cool-retro-term"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                > <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></a></li>
<li><a class="link"   href="http://www.cakebrew.com/" >Cakebrew<i class="fas fa-external-link-alt"></i></a> - <a class="link"   href="http://brew.sh/" >Homebrew<i class="fas fa-external-link-alt"></i></a> 的客户端软件。摆脱命令方便安装、查看、卸载软件。<a href="https://github.com/brunophilipe/Cakebrew/"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                > <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></a></li>
<li><a class="link"   href="https://cmus.github.io/" >cmus<i class="fas fa-external-link-alt"></i></a> - 命令行播放音乐应用。 <a href="https://github.com/cmus"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                ></a> <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="https://www.getdnote.com/" >Dnote<i class="fas fa-external-link-alt"></i></a> - 命令行上的笔记本，支持多设备同步和网络界面。 <a href="https://github.com/dnote/dnote"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                ></a> <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="https://fig.io/" >Fig<i class="fas fa-external-link-alt"></i></a> - 终端上的命令行自动补全，支持自定义。 <a href="https://github.com/withfig/autocomplete"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                ></a></li>
<li><a class="link"   href="https://fishshell.com/" >Fish Shell<i class="fas fa-external-link-alt"></i></a> - 智能且用户友好的命令行终端。 <a href="https://github.com/fisherman/awesome-fish-shell#readme"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-awesome.svg"
                      alt="Awesome List" title="Awesome List"
                ></a></li>
<li><a class="link"   href="https://github.com/nicolargo/glances" >Glances<i class="fas fa-external-link-alt"></i></a> - 在命令行中查看你系统运行状态的工具。<a href="https://github.com/nicolargo/glances"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                > <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></a></li>
<li><a class="link"   href="https://httpie.org/" >httpie<i class="fas fa-external-link-alt"></i></a> - HTTPie 是一个让你微笑的命令行 HTTP 客户端。 <a href="https://github.com/jakubroztocil/httpie"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                ></a> <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="https://hyper.is/" >hyper<i class="fas fa-external-link-alt"></i></a> - 基于 Web 技术的终端，直接替代自带的 Terminal。<a href="https://github.com/zeit/hyper"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                ></a> <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="https://hyperterm.org/" >HyperTerm<i class="fas fa-external-link-alt"></i></a> - 一款基于 Node 开发的终端软件，逼格很高。<a href="https://github.com/zeit/hyperterm"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                ></a> <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="http://www.iterm2.com/" >iTerm2<i class="fas fa-external-link-alt"></i></a> - 免费的终端工具，直接替代自带的 Terminal，有非常多惊人的特性。<a href="https://github.com/gnachman/iTerm2"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                ></a> <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="https://github.com/mischah/itunes-remote" >itunes-remote<i class="fas fa-external-link-alt"></i></a> - 通过终端控制您的 iTunes。<a href="https://github.com/mischah/itunes-remote"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                ></a> <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="https://github.com/liujianping/job" >job<i class="fas fa-external-link-alt"></i></a> - 短命令并发、重复执行工具, 适用于压测. <a href="https://github.com/liujianping/job"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                ></a> <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="http://lnav.org/" >LNav<i class="fas fa-external-link-alt"></i></a> - 日志文件阅读器. <a href="https://github.com/tstack/lnav"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                ></a> <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="https://github.com/dbcli/mycli" >mycli<i class="fas fa-external-link-alt"></i></a> - 为 MySQL 命令行客户端，提供语法高亮和提示功能的工具！ <a href="https://github.com/dbcli/mycli"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                ></a> <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="https://github.com/rgcr/m-cli" >m-cli<i class="fas fa-external-link-alt"></i></a> - 用于 macOS 的瑞士军刀。 <a href="https://github.com/rgcr/m-cli"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                ></a> <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="https://github.com/guarinogabriel/Mac-CLI" >Mac-CLI<i class="fas fa-external-link-alt"></i></a> - 自动化您的 OS X 系统的使用。 <a href="https://github.com/guarinogabriel/Mac-CLI"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                ></a> <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="https://github.com/mas-cli/mas" >mas<i class="fas fa-external-link-alt"></i></a> - 一个简单的命令行界面的苹果应用商店。 <a href="https://github.com/mas-cli/mas"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                ></a> <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="https://720kb.github.io/ndm/" >ndm<i class="fas fa-external-link-alt"></i></a> - 查看本地<a class="link"   href="http://npmjs.org/" >NPM<i class="fas fa-external-link-alt"></i></a>安装的包客户端软件。摆脱命令方便安装、查看、卸载软件。<a href="https://github.com/720kb/ndm"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                ></a> <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="https://www.pgcli.com/" >pgcli<i class="fas fa-external-link-alt"></i></a> - 为Postgres提供一个支持自动补全和语法高亮的命令行工具。 <a href="https://github.com/dbcli/pgcli"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                ></a> <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="https://github.com/ggreer/the_silver_searcher" >silver searcher (ag)<i class="fas fa-external-link-alt"></i></a> - 类似于ack的代码搜索工具，专注于速度。 <a href="https://github.com/ggreer/the_silver_searcher"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                ></a> <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="https://www.decisivetactics.com/products/serial/" >Serial<i class="fas fa-external-link-alt"></i></a> - 为工程师和系统管理员嵌入式硬件更容易。</li>
<li><a class="link"   href="https://github.com/denysdovhan/spaceship-prompt" >spaceship<i class="fas fa-external-link-alt"></i></a> - 一个简约，功能强大且极易定制的Zsh提示。 <a href="https://github.com/denysdovhan/spaceship-prompt"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                ></a> <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="https://github.com/Eugeny/terminus" >Tabby (formerly Terminus)<i class="fas fa-external-link-alt"></i></a> - 免费的终端工具，基于 Web 技术的终端，用 TypeScript 写成的跨平台终端工具。深受 hyper 启发。 <a href="https://github.com/Eugeny/terminus"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                ></a> <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="https://www.termius.com/" >Termius<i class="fas fa-external-link-alt"></i></a> - 免费的终端工具，可以与 windows 平台的 xshell 媲美。 <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="https://github.com/nvbn/thefuck" >thefuck<i class="fas fa-external-link-alt"></i></a> - 一个纠正错误命令的工具，输入错误命令后，输入fuck就可以修正成正确的命令行命令，支持自定义的bash_profile命令。<a href="https://github.com/nvbn/thefuck"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                ></a></li>
<li><a class="link"   href="https://github.com/tmux/tmux" >tmux<i class="fas fa-external-link-alt"></i></a> - 一个优秀的终端复用器类自由软件。<a href="https://github.com/tmux/tmux"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                ></a></li>
<li><a class="link"   href="https://github.com/tmuxinator/tmuxinator" >tmuxinator<i class="fas fa-external-link-alt"></i></a> - Tmux的配置管理工具。 <a href="https://github.com/tmuxinator/tmuxinator"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                ></a></li>
<li><a class="link"   href="https://github.com/icholy/ttygif" >ttygif<i class="fas fa-external-link-alt"></i></a> - 将终端录制转换为 GIF 动画。 <a href="https://github.com/icholy/ttygif"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                ></a> <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="https://github.com/sindresorhus/trash" >trash<i class="fas fa-external-link-alt"></i></a> - 将文件和目录移动到废纸篓。 <a href="https://github.com/sindresorhus/trash"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                ></a></li>
<li><a class="link"   href="https://github.com/railsware/upterm" >Upterm<i class="fas fa-external-link-alt"></i></a> - Upterm (之前是 Black Screen) 来自 21 世纪的强大终端。 <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                ></li>
<li><a class="link"   href="https://www.zsh.org/" >Zsh<i class="fas fa-external-link-alt"></i></a> - 一个专为交互式使用而设计的命令行 shell。 <a href="https://sourceforge.net/projects/zsh/"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                ></a> <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                > <a href="https://github.com/unixorn/awesome-zsh-plugins#readme"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-awesome.svg"
                      alt="Awesome List" title="Awesome List"
                ></a></li>
</ul>
<h3 id="版本控制"><a href="#版本控制" class="headerlink" title="版本控制"></a>版本控制</h3><ul>
<li><a class="link"   href="https://git-scm.com/" >Git<i class="fas fa-external-link-alt"></i></a> - 版本控制工具，官网提供<a class="link"   href="https://git-scm.com/download/gui/mac" >数十种 GUI 客户端<i class="fas fa-external-link-alt"></i></a> for Mac。<a href="https://github.com/git/git"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                > <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></a></li>
<li><a class="link"   href="http://subversion.apache.org/" >SVN<i class="fas fa-external-link-alt"></i></a> - 版本控制工具。<img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
</ul>
<h3 id="GUI"><a href="#GUI" class="headerlink" title="GUI"></a>GUI</h3><ul>
<li><a class="link"   href="http://www.zennaware.com/cornerstone/" >Cornerstone<i class="fas fa-external-link-alt"></i></a> - Mac 上最佳的 SVN 管理工具。</li>
<li><a class="link"   href="https://git-fork.com/" >Fork<i class="fas fa-external-link-alt"></i></a> - 一个快速友好的 Git 客户端。</li>
<li><a class="link"   href="https://gitfinder.com/" >GitFinder<i class="fas fa-external-link-alt"></i></a> - 一个快速和轻量级的 Git 客户端的 Mac 与 Finder 集成。</li>
<li><a class="link"   href="https://rowanj.github.io/gitx/" >GitX<i class="fas fa-external-link-alt"></i></a> - <a class="link"   href="https://github.com/pieter/gitx" >Pieter’s<i class="fas fa-external-link-alt"></i></a>的衍生版本，维护增强生产力和团队开发变化。 <a href="https://github.com/rowanj/gitx"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                ></a> <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="https://github.com/Shikkic/gitbar" >Gitbar<i class="fas fa-external-link-alt"></i></a> - 开源，在你的菜单栏上显示 GitHub 贡献统计。<a href="https://github.com/Shikkic/gitbar"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                > <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></a></li>
<li><a class="link"   href="https://desktop.github.com/" >GitHub Desktop<i class="fas fa-external-link-alt"></i></a> - 使用 GitHub 的 GUI 应用。<img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="http://gitup.co/" >GitUp<i class="fas fa-external-link-alt"></i></a> - 一个简单功能强大的 Git 客户端。<a href="https://github.com/git-up/GitUp"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                ></a> <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="https://www.gitkraken.com/" >GitKraken<i class="fas fa-external-link-alt"></i></a> - 最流行的图形用户界面的 git 管理工具。</li>
<li><a class="link"   href="https://hub.github.com/" >Hub<i class="fas fa-external-link-alt"></i></a> - 将 GitHub 接口和 Git 命令进行包装。<a href="https://github.com/github/hub"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                ></a> <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="https://ohmystarapp.com/" >OhMyStar<i class="fas fa-external-link-alt"></i></a> - 最好的组织 GitHub Star 的软件。<img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                > <a href="https://itunes.apple.com/cn/app/ohmystar2/id1218642292"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-app-store.svg"
                      alt="App Store" title="苹果应用商店软件"
                ></a></li>
<li><a class="link"   href="https://www.sourcetreeapp.com/" >SourceTree<i class="fas fa-external-link-alt"></i></a> - 强大的 Git 跨平台客户端。<img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="http://www.syntevo.com/smartgit/" >SmartGit<i class="fas fa-external-link-alt"></i></a> - 非商业用途免费，全平台支持，集成 GitHub 服务。</li>
<li><a class="link"   href="https://www.sublimemerge.com/" >Sublime Merge<i class="fas fa-external-link-alt"></i></a> -  Git客户端，来自Sublime Text的制造商。</li>
<li><a class="link"   href="https://www.git-tower.com/" >Tower2<i class="fas fa-external-link-alt"></i></a> - 最强大的 Git 客户端。</li>
<li><a class="link"   href="http://www.versionsapp.com/" >Versions<i class="fas fa-external-link-alt"></i></a> - Mac 上最好的 SVN 管理工具。</li>
</ul>
<h3 id="版本控制系统"><a href="#版本控制系统" class="headerlink" title="版本控制系统"></a>版本控制系统</h3><ul>
<li><a class="link"   href="https://coding.net/" >Coding.net<i class="fas fa-external-link-alt"></i></a> - 代码托管，项目管理，WebIDE，演示部署，开启云端开发模式，让开发更简单。<img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="http://gitlab.com/" >GitLab<i class="fas fa-external-link-alt"></i></a> - 一个用于仓库管理系统的开源项目。<img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="https://github.com/" >GitHub<i class="fas fa-external-link-alt"></i></a> - GitHub 托管代码，项目管理，演示部署，瞧，您现在就在访问GitHub。<img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="https://gogs.io/" >Gogs<i class="fas fa-external-link-alt"></i></a> - 一款极易搭建的自助 Git 服务 Golang 版本。<a href="https://github.com/gogits/gogs"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                ></a>  <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="https://www.gerritcodereview.com/" >Gerrit<i class="fas fa-external-link-alt"></i></a> - Gerrit 是一个免费、开放源代码的代码审查软件，使用网页界面。<img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="http://www.gitblit.com/" >Gitblit<i class="fas fa-external-link-alt"></i></a> Java 版本 Git 代码托管，项目管理。<a href="https://github.com/gitblit/gitblit"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                ></a> <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="https://gitea.io/" >Gitea<i class="fas fa-external-link-alt"></i></a> - Gogs 的 fork 版本。<img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                ></li>
<li><a class="link"   href="https://phabricator.com/" >phabricator<i class="fas fa-external-link-alt"></i></a> - phabricator 支持 Git、SVN、HG 基于 PHP + Mysql 的开放源代码软件开发平台。<img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
</ul>
<h3 id="数据库"><a href="#数据库" class="headerlink" title="数据库"></a>数据库</h3><ul>
<li><a class="link"   href="https://github.com/qishibo/AnotherRedisDesktopManager" >Another Redis Desktop Manager<i class="fas fa-external-link-alt"></i></a> - 一款稳定全新的Redis管理工具。<img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                ><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="https://github.com/bdash-app/bdash" >Bdash<i class="fas fa-external-link-alt"></i></a> - SQL 客户端应用程序，支持 MySQL、 PostgreSQL (Redshift)、 BigQuery。<a href="https://github.com/bdash-app/bdash"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                > </a> <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="http://menial.co.uk/base/" >Base 2<i class="fas fa-external-link-alt"></i></a> - 一个用于管理 SQLite 数据库的软件。</li>
<li><a class="link"   href="https://www.eisbahn.jp/chrome_mysql_admin" >Chrome MySQL Admin<i class="fas fa-external-link-alt"></i></a> - 一个 Chrome 插件，是 MySQL 开发的跨平台、可视化数据库工具。<a href="https://github.com/yoichiro/chrome_mysql_admin"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                > <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></a></li>
<li><a class="link"   href="https://github.com/ChristianKienle/Core-Data-Editor" >Core Data Editor<i class="fas fa-external-link-alt"></i></a> - 核心数据编辑器可让您轻松查看，编辑和分析应用程序的数据。 <a href="https://github.com/luin/medis"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                ></a> <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="http://sqlitebrowser.org/" >DB Browser for SQLite<i class="fas fa-external-link-alt"></i></a> - 一个跨平台的用于管理 SQLite 数据库的软件。 <a href="https://github.com/sqlitebrowser/sqlitebrowser"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                ></a> <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="http://www.jetbrains.com/datagrip/" >DataGrip<i class="fas fa-external-link-alt"></i></a> - JetBrains 公司旗下一款数据库管理工具。<a class="link"   href="https://www.jetbrains.com/student/" >点击这里<i class="fas fa-external-link-alt"></i></a> <strong>学生</strong>免费。</li>
<li><a class="link"   href="https://dbeaver.jkiss.org/" >DBeaver<i class="fas fa-external-link-alt"></i></a> - 跨平台 SQL 客户端，支持大部分主流数据库</li>
<li><a class="link"   href="http://garrylachman.github.io/ElectroCRUD/" >ElectroCRUD<i class="fas fa-external-link-alt"></i></a> - MySQL 数据库 CRUD 应用程序。<a href="https://github.com/garrylachman/ElectroCRUD"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                > <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></a></li>
<li><a class="link"   href="http://www.sequelpro.com/" >Sequel Pro<i class="fas fa-external-link-alt"></i></a> - 一个 MySQL 数据库管理软件。<a href="https://github.com/sequelpro/sequelpro"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                ></a> <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="https://www.jackdb.com/" >JackDB<i class="fas fa-external-link-alt"></i></a> - 直接的 SQL 访问你所有的数据，无论在哪里。<a href="https://github.com/yoichiro/chrome_mysql_admin"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                ></a> <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="http://getmedis.com/" >medis<i class="fas fa-external-link-alt"></i></a> - 漂亮的 Redis 管理软件。<a href="https://github.com/luin/medis"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                > <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></a></li>
<li><a class="link"   href="https://www.mongodb.com/" >MongoDB<i class="fas fa-external-link-alt"></i></a> - 一个基于分布式文件存储的数据库。 <a href="https://github.com/gcollazo/mongodbapp"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                ></a> <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                > <a href="https://github.com/ramnes/awesome-mongodb#desktop"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-awesome.svg"
                      alt="Awesome List" title="Awesome List"
                ></a></li>
<li><a class="link"   href="http://www.mongobooster.com/" >MongoBooster<i class="fas fa-external-link-alt"></i></a> - MongoDB 图形化管理软件，内嵌 MongoShell，ES6 语法，流畅查询及智能感知。<img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="https://gcollazo.github.io/mongodbapp/" >mongoDB.app<i class="fas fa-external-link-alt"></i></a> - 在Mac 上最简单的使用 MongoDB。<a href="https://github.com/gcollazo/mongodbapp"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                ></a></li>
<li><a class="link"   href="http://www.litixsoft.de/english/mms/" >Mongo Management Studio<i class="fas fa-external-link-alt"></i></a> - MongoDB 图形化客户端管理软件。</li>
<li><a class="link"   href="http://www.macexplorer.co/en/mdb-explorer.php" >MDB Explorer<i class="fas fa-external-link-alt"></i></a> - Mac 上查看编辑 Access 数据库的工具。</li>
<li><a class="link"   href="http://dev.mysql.com/downloads/workbench/" >MySQL Workbench<i class="fas fa-external-link-alt"></i></a> - MySQL 数据库官方管理软件。</li>
<li><a class="link"   href="https://www.navicat.com.cn/products/navicat-data-modeler" >Navicat Data Modeler<i class="fas fa-external-link-alt"></i></a> - 一个数据库设计工具，它帮助创建高质素的概念、逻辑和物理数据模型。 <a href="https://itunes.apple.com/cn/app/navicat-data-modeler-essentials-%E8%A7%86%E8%A7%89%E5%8C%96%E6%95%B0%E6%8D%AE%E5%BA%93%E8%AE%BE%E8%AE%A1%E5%99%A8/id532423082"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-app-store.svg"
                      alt="App Store" title="苹果应用商店软件"
                ></a></li>
<li><a class="link"   href="https://eggerapps.at/postico/" >Postico<i class="fas fa-external-link-alt"></i></a> - 现代 PostgreSQL 客户端，漂亮功能多。</li>
<li><a class="link"   href="http://postgresapp.com/" >Postgres.app<i class="fas fa-external-link-alt"></i></a> - Mac 上最简单的方法的使用 PostgreSQL 关系型数据库管理系统。<a href="https://github.com/PostgresApp/PostgresApp"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                > <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></a></li>
<li><a class="link"   href="http://www.psequel.com/" >PSequel<i class="fas fa-external-link-alt"></i></a> - PostgreSQL 数据库 GUI 软件。<img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="https://pgmodeler.io/" >pgModeler<i class="fas fa-external-link-alt"></i></a> - 是一个专为PostgreSQL设计的开源数据建模工具。 <a href="https://github.com/pgmodeler/pgmodeler"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                ></a> <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="https://github.com/UUGU/redis-client-app" >RedisClient<i class="fas fa-external-link-alt"></i></a> - 漂亮跨平台的Redis管理软件。<a href="https://github.com/UUGU/redis-client-app"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                > <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></a></li>
<li><a class="link"   href="https://redisdesktop.com/" >RedisDesktopManager<i class="fas fa-external-link-alt"></i></a> - Redis 跨平台的 GUI 管理工具。<a href="https://github.com/uglide/RedisDesktopManager"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                ></a> <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="http://www.sqlprostudio.com/" >SQLPro Studio<i class="fas fa-external-link-alt"></i></a> - 支持 SQL Server, Postgres, Oracle 以及 MySQL 等主流的数据库可视化管理工具.</li>
<li><a class="link"   href="https://aurvan.com/sqlight/" >SQLight<i class="fas fa-external-link-alt"></i></a> - 一个 SQLite 数据库管理器工具，非常好用。 <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="https://tableplus.io/" >TablePlus<i class="fas fa-external-link-alt"></i></a> - 支持 PostgreSQL，MySQL，RedShift，MariaDB… 各种数据库的高颜值客户端。 <a href="https://github.com/TablePlus/TablePlus"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                ></a> <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="https://public.tableau.com/s/" >Tableau Public<i class="fas fa-external-link-alt"></i></a> - 数据可视化工具。 <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="https://protonail.com/" >Keylord<i class="fas fa-external-link-alt"></i></a> - Redis，Bolt，LevelDB 和 Memcached 键值数据库的桌面GUI客户端。</li>
<li><a class="link"   href="https://github.com/cmushroom/redis-pro" >redis-pro<i class="fas fa-external-link-alt"></i></a> - 轻量，易用的 Redis 客户端管理工具，使用SwiftUI编写，很好的支持 Dark mode。 <a href="https://github.com/cmushroom/redis-pro"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                ></a> <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
</ul>
<h2 id="设计和产品"><a href="#设计和产品" class="headerlink" title="设计和产品"></a>设计和产品</h2><h3 id="设计工具"><a href="#设计工具" class="headerlink" title="设计工具"></a>设计工具</h3><ul>
<li><a class="link"   href="https://secure.flyingmeat.com/acorn/" >Acorn<i class="fas fa-external-link-alt"></i></a> - 一个像 PS，全面的功能集的图像编辑器。</li>
<li><a class="link"   href="https://affinity.serif.com/en-us/designer/" >Affinity Designer<i class="fas fa-external-link-alt"></i></a> - 矢量图像设计工具，可以是 Adobe Illustrator 的替代。</li>
<li><a class="link"   href="https://affinity.serif.com/en-us/photo/" >Affinity Photo<i class="fas fa-external-link-alt"></i></a> - 光栅图像设计工具，可以替代 Adobe PS 图象处理软件。</li>
<li><a class="link"   href="http://al.chemy.org/" >Alchemy<i class="fas fa-external-link-alt"></i></a> - 开源的绘图工具软件，用于素描、会话以及一种新的绘图方式。<a href="http://svn.al.chemy.org/"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                ></a></li>
<li><a class="link"   href="https://amadine.com/" >Amadine<i class="fas fa-external-link-alt"></i></a> - 一款矢量绘图应用程序，将图形设计师所需的一切包装在一个整洁直观的界面中。</li>
<li><a class="link"   href="https://www.belightsoft.com/art-text/" >Art Text 3<i class="fas fa-external-link-alt"></i></a> - 生成各种特效字体。</li>
<li><a class="link"   href="https://www.blender.org/" >Blender<i class="fas fa-external-link-alt"></i></a> - 全功能可扩展的跨平台 3D 内容套件。<a href="https://developer.blender.org/"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                > <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></a></li>
<li><a class="link"   href="https://colorpicker.crea-th.at/" >Colorpicker<i class="fas fa-external-link-alt"></i></a> - 一个完整的开源颜色处理工具！ <a href="https://github.com/toinane/colorpicker"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                ></a> <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="https://www.figma.com/" >Figma<i class="fas fa-external-link-alt"></i></a> - 一款基于 Web 的实时协作的云设计软件。 <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="http://fontforge.github.io/" >FontForge<i class="fas fa-external-link-alt"></i></a> - 字体编辑工具。 <a href="https://github.com/fontforge"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                ></a> <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="https://www.gimp.org/" >GIMP<i class="fas fa-external-link-alt"></i></a> - 图像编辑软件，号称 Linux 下的 PhotoShop，同时有 Mac 版本。<a href="https://www.gimp.org/source/#gimp-source-code"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                ></a></li>
<li><a class="link"   href="https://designer.io/" >Gravit Designer<i class="fas fa-external-link-alt"></i></a> - 混合矢量&#x2F;位图布局应用，比起 Sketch 还差一点。  <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                > <a href="https://itunes.apple.com/app/id1207744923"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-app-store.svg"
                      alt="App Store" title="苹果应用商店软件"
                ></a></li>
<li><a class="link"   href="https://tenonedesign.com/inklet.php" >inklet<i class="fas fa-external-link-alt"></i></a> - 将 Mac 上的触摸板变成绘图板。</li>
<li><a class="link"   href="https://inkscape.org/zh/" >Inkscape<i class="fas fa-external-link-alt"></i></a> - 一款开源矢量图形编辑软件，与 Illustrator、Freehand、CorelDraw、Xara X 等其他软件相似。<a href="https://launchpad.net/inkscape"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                ></a></li>
<li><a class="link"   href="https://krita.org/" >Krita<i class="fas fa-external-link-alt"></i></a> - 一个开源的位图形编辑软件，包含一个绘画程式和照片编辑器。 <a href="https://github.com/KDE/krita"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                ></a> <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="https://macsvg.org/" >macSVG<i class="fas fa-external-link-alt"></i></a> - 设计HTML5 SVG艺术和动画。 <a href="https://github.com/dsward2/macSVG"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                ></a> <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="https://ephtracy.github.io/" >MagicaVoxel<i class="fas fa-external-link-alt"></i></a> - 轻量级的8位像素编辑和交互路径追踪渲染器。<img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="http://www.makehumancommunity.org/" >MakeHuman<i class="fas fa-external-link-alt"></i></a> - 功能强大且免费的3D人体建模器。 <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="https://helftone.com/" >Monodraw<i class="fas fa-external-link-alt"></i></a> -  macOS 平台上强大的 ASCII 设计流程编辑器。 <a href="https://itunes.apple.com/cn/app/monodraw/id920404675"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-app-store.svg"
                      alt="App Store" title="苹果应用商店软件"
                ></a></li>
<li><a class="link"   href="https://nikcollection.dxo.com/" >Nik Collection<i class="fas fa-external-link-alt"></i></a> - 专业照片后期制作工具，Google 收购后免费<img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="http://paintbrush.sourceforge.net/" >Paintbrush<i class="fas fa-external-link-alt"></i></a> - 位图图像编辑器。<a href="https://sourceforge.net/projects/paintbrush/files/"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                ></a> <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="https://www.pencil2d.org/" >Pencil2D<i class="fas fa-external-link-alt"></i></a> - 制作2D手绘动画的简单直观的工具。 <a href="https://github.com/pencil2d/pencil"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                ></a> <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="http://pixelperfect-app.com/" >Pixel Perfect<i class="fas fa-external-link-alt"></i></a> - 比较 UI 模型和开发结果非常容易。 <a href="https://itunes.apple.com/cn/app/pixel-perfect/id916097243"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-app-store.svg"
                      alt="App Store" title="苹果应用商店软件"
                ></a> <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="http://www.pixelmator.com/mac/" >Pixelmator<i class="fas fa-external-link-alt"></i></a> - 强大的图像编辑器，可能PS图像处理软件的选择。</li>
<li><a class="link"   href="http://principleformac.com/" >Principle<i class="fas fa-external-link-alt"></i></a> -  使用它很容易设计动画和交互式用户界面。</li>
<li><a class="link"   href="https://github.com/duyquoc/ScreenToLayers" >ScreenToLayers<i class="fas fa-external-link-alt"></i></a> - 轻松导出桌面分层文件 PSD 文件。<a href="https://github.com/duyquoc/ScreenToLayers"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                ></a> <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                > <a href="https://itunes.apple.com/cn/app/screentolayers/id1077317077?l=en&mt=12"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-app-store.svg"
                      alt="App Store" title="苹果应用商店软件"
                ></a></li>
<li><a class="link"   href="http://pixologic.com/sculptris/#" >Sculptris<i class="fas fa-external-link-alt"></i></a> - 所见所得的 3D 建模。<img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="https://www.sketchapp.com/" >Sketch<i class="fas fa-external-link-alt"></i></a> - 混合矢量&#x2F;位图布局应用，特别适用于用户界面，Web 和移动设计。<ul>
<li><a class="link"   href="https://yo-op.github.io/sketchcachecleaner/" >Sketch Cache Cleaner<i class="fas fa-external-link-alt"></i></a> - 清理 Sketch 历史文件，释放磁盘空间。 <a href="https://github.com/yo-op/sketchcachecleaner"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                ></a> <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="http://utom.design/measure/" >Measure Plugin<i class="fas fa-external-link-alt"></i></a> - 设计稿标注、测量工具。 <a href="https://github.com/utom/sketch-measure"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                ></a> <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="http://sketchtoolbox.com/" >Sketch Toolbox Plugin Manager<i class="fas fa-external-link-alt"></i></a> - 一个超级简单的 Sketch 插件管理器。<a href="https://github.com/buzzfeed/Sketch-Toolbox"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                > <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></a></li>
<li><a class="link"   href="https://abynim.github.io/UserFlows/" >User Flows Plugin<i class="fas fa-external-link-alt"></i></a> - 直接从画板生成流程图。<a href="https://github.com/abynim/UserFlows"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                ></a> <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
</ul>
</li>
<li><a class="link"   href="https://www.sketchbook.com/?locale=cn" >SketchBook<i class="fas fa-external-link-alt"></i></a> - 出众的绘图软件。<img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="https://sparkleapp.com/" >Sparkle<i class="fas fa-external-link-alt"></i></a> - 可视化网页设计工具。</li>
<li><a class="link"   href="https://github.com/sindresorhus/System-Color-Picker" >System Color Picker<i class="fas fa-external-link-alt"></i></a> - macOS颜色选择器是一款具有更多功能的应用程序。 [<img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                >] <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                > <a href="https://apps.apple.com/app/id1545870783"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-app-store.svg"
                      alt="App Store" title="苹果应用商店软件"
                ></a></li>
<li><a class="link"   href="http://www.tayasui.com/sketches/" >Tayasui Sketches<i class="fas fa-external-link-alt"></i></a> - 专业的绘图软件。</li>
<li><a class="link"   href="https://www.vectornator.io/" >Vectornator: Design Software<i class="fas fa-external-link-alt"></i></a> - Galaxy中最直观、最精确的插图软件。 <a href="https://apps.apple.com/us/app/vectornator-design-software/id1219074514"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-app-store.svg"
                      alt="App Store" title="苹果应用商店软件"
                ></a></li>
<li><a class="link"   href="https://vectr.com/" >Vectr<i class="fas fa-external-link-alt"></i></a> - 免费图形编辑器。这是一个简单而强大的 Web 和桌面跨平台工具，把你的设计变成现实。<img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
</ul>
<h3 id="原型流程"><a href="#原型流程" class="headerlink" title="原型流程"></a>原型流程</h3><ul>
<li><a class="link"   href="https://www.axure.com/" >Axure RP 8<i class="fas fa-external-link-alt"></i></a> - 画原型图工具，团队协作，方便好用。</li>
<li><a class="link"   href="https://www.protopie.io/" >ProtoPie<i class="fas fa-external-link-alt"></i></a> - 高保真交互原型设计。</li>
<li><a class="link"   href="http://www.adobe.com/products/experience-design.html" >Adobe XD (Experience Design)<i class="fas fa-external-link-alt"></i></a> - 用于网站和移动应用的设计和原型设计。</li>
<li><a class="link"   href="https://balsamiq.com/products/mockups/" >Balsamiq Mockups<i class="fas fa-external-link-alt"></i></a> - 一个快速的网页设计原型工具，帮助你更快、更聪明的工作。</li>
<li><a class="link"   href="http://origami.design/" >Origami Studio<i class="fas fa-external-link-alt"></i></a> - 一种设计现代界面的新工具，由 Facebook 设计师构建和使用。</li>
<li><a class="link"   href="https://www.flinto.com/" >Flinto<i class="fas fa-external-link-alt"></i></a> - 快速制作高保真的互交原型工具，支持 Sketch 导入。</li>
<li><a class="link"   href="https://kiteapp.co/" >Kite<i class="fas fa-external-link-alt"></i></a> - 一个强大的动画制作工具制作 Mac 和 iOS 原型中的应用。</li>
<li><a class="link"   href="http://www.justinmind.com/" >Justinmind<i class="fas fa-external-link-alt"></i></a> - 功能更丰富团队协作方便。</li>
<li><a class="link"   href="https://www.mockflow.com/" >MockFlow<i class="fas fa-external-link-alt"></i></a> - 用于网页设计和可用性测试的在线原型设计套件。</li>
<li><a class="link"   href="http://pencil.evolus.vn/" >pencil<i class="fas fa-external-link-alt"></i></a> - 开源免费制作软件原型的工具 <a href="https://github.com/evolus/pencil"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                ></a> <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="http://www.mockplus.com/" >Mockplus<i class="fas fa-external-link-alt"></i></a> - 更快更简单的原型设计工具。</li>
<li><a class="link"   href="https://www.omnigroup.com/omnigraffle" >OmniGraffle<i class="fas fa-external-link-alt"></i></a> - 可用来绘制图表、流程图、组织结构图、思维导图以及插图或原型。</li>
<li><a class="link"   href="http://www.xmind.net/" >XMind<i class="fas fa-external-link-alt"></i></a> - 一款实用的思维导图软件。</li>
<li><a class="link"   href="http://lighten.xmind.net/" >Lighten<i class="fas fa-external-link-alt"></i></a> - XMind 出品的一款实用的思维导图软件。</li>
<li><a class="link"   href="http://loremify.com/" >Loremify<i class="fas fa-external-link-alt"></i></a> - 快速准确的设计，原型或生成标题，段落，列表和文章。<img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ><a href="https://itunes.apple.com/cn/app/loremify/id1028877632"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-app-store.svg"
                      alt="App Store" title="苹果应用商店软件"
                ></a></li>
<li><a class="link"   href="http://www.literatureandlatte.com/scapple.php" >Scapple<i class="fas fa-external-link-alt"></i></a> - 一款实用的思维导图软件。</li>
<li><a class="link"   href="https://framer.com/" >Framer<i class="fas fa-external-link-alt"></i></a> - 做交互原型的工具。</li>
<li><a class="link"   href="https://marvelapp.com/" >Marvel<i class="fas fa-external-link-alt"></i></a> - 简单设计，原型设计和协作。<img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="http://mindnode.com/" >MindNode<i class="fas fa-external-link-alt"></i></a> - 简洁的风格与人性化的操作，绘制思维脑图。</li>
<li><a class="link"   href="https://writemapper.com/" >WriteMapper<i class="fas fa-external-link-alt"></i></a> - 专为写作者而设的脑图工具。</li>
<li><a class="link"   href="https://simplemind.eu/" >SimpleMind<i class="fas fa-external-link-alt"></i></a> - 超小体积的思维导图工具。</li>
<li><a class="link"   href="https://macsvg.org/" >macSVG<i class="fas fa-external-link-alt"></i></a> - 设计 HTML5 SVG 和动画. <a href="https://github.com/dsward2/macSVG"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                ></a> <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
</ul>
<h3 id="作图工具"><a href="#作图工具" class="headerlink" title="作图工具"></a>作图工具</h3><ul>
<li><a class="link"   href="https://www.draw.io/" >Draw.io<i class="fas fa-external-link-alt"></i></a> - 上百种图形，支持多种格式导出。 <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="https://www.omnigroup.com/omnigraffle/" >OmniGraffle<i class="fas fa-external-link-alt"></i></a> - Omni 成员，native 应用。</li>
<li><a class="link"   href="https://www.processon.com/" >ProcessOn<i class="fas fa-external-link-alt"></i></a> - 流程图、思维导图、原型图… 中文友好，免费保存 5 个文件。</li>
</ul>
<h3 id="截图工具"><a href="#截图工具" class="headerlink" title="截图工具"></a>截图工具</h3><ul>
<li><a class="link"   href="https://github.com/onmyway133/GifCapture" >GifCapture<i class="fas fa-external-link-alt"></i></a> - 开源 macOS 截屏生成 Gif 工具。<a href="https://github.com/onmyway133/GifCapture"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                ></a> <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="https://gifox.io/" >Gifox<i class="fas fa-external-link-alt"></i></a> - 专业的高颜值 GIF 录制应用。 <a href="https://itunes.apple.com/cn/app/gifox-gif-recording-and-sharing/id1082624744"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-app-store.svg"
                      alt="App Store" title="苹果应用商店软件"
                ></a></li>
<li><a class="link"   href="https://gfycat.com/gifbrewery" >GIF Brewery<i class="fas fa-external-link-alt"></i></a> - GIF Brewery gives everyone the power to create stunning GIFs from video files. <a href="https://itunes.apple.com/cn/app/gif-brewery-by-gfycat/id1081413713"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-app-store.svg"
                      alt="App Store" title="苹果应用商店软件"
                ></a> <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="https://giphy.com/apps/giphycapture" >GIPHY Capture<i class="fas fa-external-link-alt"></i></a> - 免费软件的捕捉和分享图片在桌面上。<img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                > <a href="https://itunes.apple.com/cn/app/giphy-capture-the-gif-maker/id668208984?l=en&mt=12"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-app-store.svg"
                      alt="App Store" title="苹果应用商店软件"
                ></a></li>
<li><a class="link"   href="https://getkap.co/" >Kap<i class="fas fa-external-link-alt"></i></a> - 轻量 GIF 录屏小工具。<a href="https://github.com/wulkano/kap"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                ></a> <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="https://github.com/keycastr/keycastr" >KeyCastr<i class="fas fa-external-link-alt"></i></a> - 录屏好帮手，实时显示按键操作的小工具。<a href="https://github.com/keycastr/keycastr"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                ></a> <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="http://www.cockos.com/licecap/" >Licecap<i class="fas fa-external-link-alt"></i></a> - 是一款屏幕录制工具输出 GIF，录制过程中可以随意改变录屏范围。<a href="https://github.com/justinfrankel/licecap"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                ></a> <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="https://monosnap.com/" >Monosnap<i class="fas fa-external-link-alt"></i></a> - 制作截图，录制视频共享文件。 <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                > <a href="https://itunes.apple.com/cn/app/monosnap/id540348655"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-app-store.svg"
                      alt="App Store" title="苹果应用商店软件"
                ></a></li>
<li><a class="link"   href="https://evernote.com/intl/zh-cn/skitch/" >Skitch<i class="fas fa-external-link-alt"></i></a> - 截图附带强大的标注功能。<img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="http://shifty.natethompson.io/" >Shifty<i class="fas fa-external-link-alt"></i></a> - 一个菜单栏应用程序，让您更多地控制夜班。 <a href="https://github.com/thompsonate/Shifty"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                ></a></li>
<li><a class="link"   href="http://txtlabs.com/" >ScreenShot PSD<i class="fas fa-external-link-alt"></i></a> - 将屏幕捕获存为分层的 PSD，便于编辑。 <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                > <a href="https://itunes.apple.com/cn/app/screenshot-psd/id489880259"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-app-store.svg"
                      alt="App Store" title="苹果应用商店软件"
                ></a></li>
<li><a class="link"   href="https://zh.snipaste.com/" >Snipaste<i class="fas fa-external-link-alt"></i></a> - 一个简单但强大的截图工具。<img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="http://snip.qq.com/" >Snip<i class="fas fa-external-link-alt"></i></a> - 高效的截图工具，支持滚动截屏，腾讯作品。<img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="http://teampaper.me/snap/" >Teampaper Snap<i class="fas fa-external-link-alt"></i></a> - 为设计师量身定做的屏幕截图兼注释工具。 <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                > <a href="https://itunes.apple.com/cn/app/monosnap/id1199502670"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-app-store.svg"
                      alt="App Store" title="苹果应用商店软件"
                ></a></li>
<li><a class="link"   href="http://jietu.qq.com/" >截图(Jietu)<i class="fas fa-external-link-alt"></i></a> - 截图附带强大的标注功能，腾讯作品。<img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="http://xnipapp.com/" >Xnip<i class="fas fa-external-link-alt"></i></a> - 免费好用的滚动截屏利器。<a href="https://itunes.apple.com/cn/app/xnip-handy-screenshot-app/id1221250572?l=en&mt=12"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-app-store.svg"
                      alt="App Store" title="苹果应用商店软件"
                ></a> <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="https://www.better365.cn/" >iShot<i class="fas fa-external-link-alt"></i></a> - 完全免费、功能全面的截图工具，支持贴图、滚动截图、延时截图等。 <a href="https://apps.apple.com/cn/app/ishot-%E6%88%AA%E5%9B%BE-%E9%95%BF%E6%88%AA%E5%9B%BE-%E6%A0%87%E6%B3%A8%E5%B7%A5%E5%85%B7/id1485844094?mt=12"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-app-store.svg"
                      alt="App Store" title="苹果应用商店软件"
                ></a> <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
</ul>
<h3 id="其它工具"><a href="#其它工具" class="headerlink" title="其它工具"></a>其它工具</h3><ul>
<li><a class="link"   href="https://github.com/mancunianetz/APNGb" >APNGb<i class="fas fa-external-link-alt"></i></a> - 编辑 png 图片格式的软件。 <a href="https://github.com/mancunianetz/APNGb"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                ></a> <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="https://assetizr.com/" >Assetizr<i class="fas fa-external-link-alt"></i></a> - 图片编辑应用，轻松更改图片尺寸，压缩图片，重命名图片。 <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                > <a href="https://itunes.apple.com/de/app/assetizr/id1449126727?l=en&mt=12"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-app-store.svg"
                      alt="App Store" title="苹果应用商店软件"
                ></a></li>
<li><a class="link"   href="https://itunes.apple.com/cn/app/shotbuilder/id1294179975?mt=12" >AppIconBuilder(图标构建)<i class="fas fa-external-link-alt"></i></a> - App图标多平台一键导出。<a href="https://itunes.apple.com/cn/app/shotbuilder/id1294179975?mt=12"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-app-store.svg"
                      alt="App Store" title="苹果应用商店软件"
                ></a></li>
<li><a class="link"   href="http://couleursapp.com/" >Couleurs<i class="fas fa-external-link-alt"></i></a> - 简单的屏幕取色应用程序。 <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="https://cn.eagle.cool/" >Eagle App<i class="fas fa-external-link-alt"></i></a> - 强大的图片、视频、音频、設計素材及文件管理软件。</li>
<li><a class="link"   href="http://jumpzero.com/frank/" >Frank DeLoupe<i class="fas fa-external-link-alt"></i></a> - 支持 Retina 的屏幕拾色器。</li>
<li><a class="link"   href="http://www.img2icnsapp.com/" >Image2icon<i class="fas fa-external-link-alt"></i></a> - 将你的图片转换成图标。<img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="https://pngmini.com/" >ImageAlpha<i class="fas fa-external-link-alt"></i></a> - 压缩 PNG 图片，去掉无效的透明。<a href="https://github.com/pornel/ImageAlpha"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                ></a> <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="https://imageoptim.com/mac" >ImageOptim<i class="fas fa-external-link-alt"></i></a> - 压缩图片，删除 EXIF 信息。<a href="https://github.com/ImageOptim/ImageOptim"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                ></a> <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="http://toolinbox.net/iPic/" >iPic<i class="fas fa-external-link-alt"></i></a> - 上传图片至七牛、阿里云等图床，支持 Markdown 链接。<img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                > <a href="https://itunes.apple.com/cn/app/id1101244278?ls=1&mt=12&at=1000lv4R&ct=iPic_me"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-app-store.svg"
                      alt="App Store" title="苹果应用商店软件"
                ></a></li>
<li><a class="link"   href="http://appersian.net/" >IconKit<i class="fas fa-external-link-alt"></i></a> - App图标自动生成器。<a href="https://itunes.apple.com/cn/app/iconkit-icon-resizer-for-app/id507135296?mt=12"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-app-store.svg"
                      alt="App Store" title="苹果应用商店软件"
                ></a></li>
<li><a class="link"   href="http://geticonjar.com/" >Iconjar<i class="fas fa-external-link-alt"></i></a> - 图标管理软件，带组织和搜索功能。</li>
<li><a class="link"   href="http://www.jpegmini.com/" >JPEGmini<i class="fas fa-external-link-alt"></i></a> - 将图像尺寸降低高达 80％，而不会影响质量。 <a href="https://itunes.apple.com/cn/app/jpegmini-lite/id525742250"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-app-store.svg"
                      alt="App Store" title="苹果应用商店软件"
                ></a> <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="https://www.presetbrewery.com/" >Preset Brewery<i class="fas fa-external-link-alt"></i></a> - 将Lightroom预设转换为Adobe Camera Raw的工具。</li>
<li><a class="link"   href="https://github.com/Molunerfinn/PicGo" >PicGo<i class="fas fa-external-link-alt"></i></a> - 支持常用 cdn 的图床工具。<a href="https://github.com/Molunerfinn/PicGo"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                ></a></li>
<li><a class="link"   href="http://www.boltnev.com/resizemaster/" >Resize Master<i class="fas fa-external-link-alt"></i></a> - 更快速和容易批量调整图像和加水印。 <a href="https://itunes.apple.com/app/resize-master/id1025306797"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-app-store.svg"
                      alt="App Store" title="苹果应用商店软件"
                ></a> <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="http://rightfontapp.com/" >RightFont<i class="fas fa-external-link-alt"></i></a> - 字体管理工具。</li>
<li><a class="link"   href="http://www.svgs.us/" >svgus<i class="fas fa-external-link-alt"></i></a> - SVG 图片管理器。<a href="https://itunes.apple.com/cn/app/svgsus/id1106867065"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-app-store.svg"
                      alt="App Store" title="苹果应用商店软件"
                ></a></li>
<li><a class="link"   href="http://ethanschoonover.com/solarized" >Solarized<i class="fas fa-external-link-alt"></i></a> - 干净清爽的颜色主题，支持 iTerm、Intellij IDEA、Vim 等。</li>
<li><a class="link"   href="http://theolabrothers.com/" >Sip<i class="fas fa-external-link-alt"></i></a> - 收集，整理和分享你的颜色拾色器。</li>
<li><a class="link"   href="http://www.eigenlogik.com/spectrum/mac" >Spectrum<i class="fas fa-external-link-alt"></i></a> - 一款可以轻松直观地创建漂亮配色方案的应用程序。 <a href="https://itunes.apple.com/cn/app/spectrum/id518156125"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-app-store.svg"
                      alt="App Store" title="苹果应用商店软件"
                ></a></li>
<li><a class="link"   href="https://github.com/kyleduo/TinyPNG4Mac" >TinyPNG4Mac<i class="fas fa-external-link-alt"></i></a> - 图片压缩专用开源工具。<a href="https://github.com/kyleduo/TinyPNG4Mac"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                > <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></a></li>
<li><a class="link"   href="https://tropy.org/" >Tropy<i class="fas fa-external-link-alt"></i></a> - 照片档案管理工具。<a href="https://github.com/tropy/tropy"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                ></a> <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="https://github.com/gee1k/uPic" >uPic<i class="fas fa-external-link-alt"></i></a> - macOS 原生应用，功能强大且简洁的图床客户端。 <a href="https://github.com/gee1k/uPic"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                > <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></a></li>
<li><a class="link"   href="http://getmarkman.com/" >马克鳗<i class="fas fa-external-link-alt"></i></a> - 高效的设计稿标注、测量工具。</li>
</ul>
<h2 id="虚拟机"><a href="#虚拟机" class="headerlink" title="虚拟机"></a>虚拟机</h2><ul>
<li><a class="link"   href="https://www.docker.com/" >Docker<i class="fas fa-external-link-alt"></i></a> - 开源的应用容器引擎。 <a href="https://github.com/docker"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                ></a> <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                > <a href="https://github.com/veggiemonk/awesome-docker#readme"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-awesome.svg"
                      alt="Awesome List" title="Awesome List"
                ></a></li>
<li><a class="link"   href="https://dockstation.io/" >DockStation<i class="fas fa-external-link-alt"></i></a> - 管理 Docker 项目的程序。 <a href="https://github.com/DockStation/dockstation"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                ></a> <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="https://multipass.run/" >Multipass<i class="fas fa-external-link-alt"></i></a> - 适用于任何工作站的 Ubuntu 虚拟机。 <a href="https://github.com/canonical/multipass"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                ></a></li>
<li><a class="link"   href="http://www.parallels.com/" >Parallels Desktop<i class="fas fa-external-link-alt"></i></a> - 虽然好用但是收费机制，更新花钱、花钱、花钱。</li>
<li><a class="link"   href="https://portainer.io/" >Portainer<i class="fas fa-external-link-alt"></i></a> - 基于网页管理 Docker 容器和 swarm 集群。 <a href="https://github.com/portainer/portainer"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                ></a> <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="https://mac.getutm.app/" >UTM<i class="fas fa-external-link-alt"></i></a> - 适用于 iOS 和 macOS 的全功能系统模拟器和虚拟机主机。<a href="https://github.com/utmapp/UTM"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                ></a></li>
<li><a class="link"   href="http://www.virtualbox.org/" >Virtual Box<i class="fas fa-external-link-alt"></i></a> - 免费、免费、免费，带 NTFS 读写，不用买 ParagonNTFS，省100块。<img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="http://www.vmware.com/" >VMware Fusion<i class="fas fa-external-link-alt"></i></a> - 强大的虚拟机，商业软件。</li>
<li><a class="link"   href="https://veertu.com/" >Veertu<i class="fas fa-external-link-alt"></i></a> - Mac 上轻量级的虚拟机。通过一种高响应，沙箱且本地化的方式在你在 Mac 上运行虚拟机。<img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
</ul>
<h2 id="通信"><a href="#通信" class="headerlink" title="通信"></a>通信</h2><p><em>推荐一些通信工具，沟通，团队协同。</em></p>
<ul>
<li><a class="link"   href="https://adium.im/" >Adium<i class="fas fa-external-link-alt"></i></a> - 呃，这个是老的集成多个平台的聊天客户端。<img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="https://bearychat.com/" >BearyChat<i class="fas fa-external-link-alt"></i></a> - 互联网团队协作，沟通工具。</li>
<li><a class="link"   href="https://github.com/stonesam92/ChitChat" >ChitChat<i class="fas fa-external-link-alt"></i></a> - WhatsApp 非官方。<a href="https://github.com/stonesam92/ChitChat"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                > <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></a></li>
<li><a class="link"   href="https://github.com/geeeeeeeeek/electronic-wechat" >Electronic WeChat<i class="fas fa-external-link-alt"></i></a> - 调用微信接口，使用 <a class="link"   href="https://github.com/electron/electron" >Electron<i class="fas fa-external-link-alt"></i></a> 开发的第三方漂亮开源微信应用。<a href="https://github.com/geeeeeeeeek/electronic-wechat"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                > <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></a></li>
<li><a class="link"   href="http://meetfranz.com/" >Franz<i class="fas fa-external-link-alt"></i></a> - 一个使用 <a class="link"   href="https://electronjs.org/" >Electron<i class="fas fa-external-link-alt"></i></a>开发的，可以同时登录 23 个平台的即时通讯软件。<img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="https://flumeapp.com/" >Flume<i class="fas fa-external-link-alt"></i></a> - 简约大气高逼格的Instagram，如果只是浏览点赞评论，免费版已经足够用。<img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="https://gitter.im/" >Gitter<i class="fas fa-external-link-alt"></i></a> - 关于 GitHub 的项目交流，支持 Markdown，对开发者极为友好。</li>
<li><a class="link"   href="https://keybase.io/" >Keybase<i class="fas fa-external-link-alt"></i></a> - 一个安全的消息应用程序! <a href="https://github.com/keybase"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                ></a> <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="http://weiboformac.sinaapp.com/" >Maipo脉搏<i class="fas fa-external-link-alt"></i></a> - 微博第三方 Mac 应用。<img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                > <a href="https://itunes.apple.com/cn/app/weibox/id789066512"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-app-store.svg"
                      alt="App Store" title="苹果应用商店软件"
                ></a></li>
<li><a class="link"   href="https://fbmacmessenger.rsms.me/" >Messenger<i class="fas fa-external-link-alt"></i></a> - Facebook 第三方聊天工具。<a href="https://github.com/rsms/fb-mac-messenger"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                > <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></a></li>
<li><a class="link"   href="http://im.qq.com/macqq/index.shtml" >QQ<i class="fas fa-external-link-alt"></i></a> - QQ for Mac App。<img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="http://rambox.pro/" >Rambox<i class="fas fa-external-link-alt"></i></a> - 消息和电子邮件应用程序，将常见的Web应用程序组合成一个程序。 <a href="https://github.com/saenzramiro/rambox"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                ></a> <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="https://www.skype.com/" >Skype<i class="fas fa-external-link-alt"></i></a> - Skype 共享、跨平台的短信和电话。</li>
<li><a class="link"   href="https://slack.com/" >Slack<i class="fas fa-external-link-alt"></i></a> - 团队协作，沟通工具。</li>
<li><a class="link"   href="https://desktop.telegram.org/" >Telegram<i class="fas fa-external-link-alt"></i></a> - 通讯新时代。</li>
<li><a class="link"   href="https://www.codeux.com/textual" >Textual<i class="fas fa-external-link-alt"></i></a> - 最受欢迎的世界与我们相关的 KPI 应用 for OS X。<a href="https://github.com/Codeux-Software/Textual"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                ></a></li>
<li><a class="link"   href="https://www.teambition.com/" >Teambition<i class="fas fa-external-link-alt"></i></a> - 团队协作。提供管理任务、安排日程、查找文件、即时讨论等团队所需要的一切协作功能。<img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="http://weixin.qq.com/cgi-bin/readtemplate?t=mac&platform=wx&lang=zh_CN" >WeChat<i class="fas fa-external-link-alt"></i></a> - 微信 for Mac App。<img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="https://weechat.org/" >WeeChat<i class="fas fa-external-link-alt"></i></a> - 一个命令行聊天客户端。<img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="https://zoom.us/" >Zoom<i class="fas fa-external-link-alt"></i></a> - 视频会议 &amp; 屏幕共享，提供录制功能。</li>
<li><a class="link"   href="https://imach.me/gohanapp/" >御飯<i class="fas fa-external-link-alt"></i></a> - 饭否第三方Mac应用。<img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="https://github.com/jianliaoim/talk-os" >简聊<i class="fas fa-external-link-alt"></i></a> - 企业级即时沟通工具，已经下线了，可以自己搭建一套系统玩儿。<a href="https://github.com/jianliaoim/talk-os"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                ></a> <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="http://www.dingtalk.com/index-b.html#download_block" >钉钉<i class="fas fa-external-link-alt"></i></a> - 企业级办公通讯免费平台。<img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="https://www.feishu.cn/download" >飞书<i class="fas fa-external-link-alt"></i></a> - 字节跳动旗下先进企业协作与管理平台。<img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="https://pubu.im/apps/osx" >零信<i class="fas fa-external-link-alt"></i></a> - 随时随地工作，跨平台。</li>
<li><a class="link"   href="http://www.jingoal.com/client/mac/mac.htm" >今目标<i class="fas fa-external-link-alt"></i></a> - 一款面向中小企业的互联网工作平台。</li>
<li><a class="link"   href="https://www.rishiqing.com/" >日事清<i class="fas fa-external-link-alt"></i></a> - 工作计划软件，日志软件，项目管理，团队协作软件，个人日程管理，团队协作工具。日程安排，计划分配，笔记总结等。<img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="https://www.rtxapp.com/mac" >RTX_腾讯通<i class="fas fa-external-link-alt"></i></a> - 企业内部可以使用的聊天软件，企业内部可以使用此通讯工具，这个软件有Mac版本也有win版本，Mac版本专为 Retina 显示优化过<img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
</ul>
<h3 id="Email"><a href="#Email" class="headerlink" title="Email"></a>Email</h3><ul>
<li><a class="link"   href="http://airmailapp.com/" >Airmail<i class="fas fa-external-link-alt"></i></a> - 快速的邮件客户端支持 Mac 和 iPhone。</li>
<li><a class="link"   href="http://www.foxmail.com/mac/" >Foxmail<i class="fas fa-external-link-alt"></i></a> - 快速的邮件客户端。<img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="http://mail.163.com/dashi/" >网易邮箱大师<i class="fas fa-external-link-alt"></i></a> - 全平台的邮箱管理客户端，网易邮箱大师电脑版。 <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="https://smallcubed.com/mt/" >MailTags<i class="fas fa-external-link-alt"></i></a> - 管理和组织邮件，日程和标签进行分类邮件。</li>
<li><a class="link"   href="https://nylas.com/nylas-mail/" >Nylas Mail<i class="fas fa-external-link-alt"></i></a> - 免费邮件客户端。  <a href="https://github.com/nylas/nylas-mail"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                ></a> <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="https://www.nylas.com/" >N1<i class="fas fa-external-link-alt"></i></a> - 可以扩展的开源收费邮件客户端。</li>
<li><a class="link"   href="https://newtonhq.com/" >Newton(原Cloudmagic)<i class="fas fa-external-link-alt"></i></a> - 界面非常简洁的一个邮件客户端。</li>
<li><a class="link"   href="https://www.postbox-inc.com/" >Postbox<i class="fas fa-external-link-alt"></i></a> - 这个貌似也非常强大哦，关键是简洁漂亮的收费邮件客户端。</li>
<li><a class="link"   href="https://polymail.io/" >Polymail<i class="fas fa-external-link-alt"></i></a> - 简单，功能强大，长得好看的新晋邮件客户端。<img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="https://sparkmailapp.com/" >Spark<i class="fas fa-external-link-alt"></i></a> - 新推出的快速邮件客户端支持 Mac 和 iPhone。<img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="https://www.mozilla.org/zh-CN/thunderbird/" >ThunderBird<i class="fas fa-external-link-alt"></i></a> - Mozilla 公司出品的强大的 Email 客户端程序。<img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="http://www.yomail.com/" >Yomail<i class="fas fa-external-link-alt"></i></a> - 新出的国内开发的比较好的邮件客户端。<img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
</ul>
<h3 id="文件共享"><a href="#文件共享" class="headerlink" title="文件共享"></a>文件共享</h3><ul>
<li><a class="link"   href="https://cyberduck.io/" >Cyberduck<i class="fas fa-external-link-alt"></i></a> - 免费 FTP，SFTP，S3 和 WebDAV 客户端 &amp; OpenStack Swift Client。<img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="http://fivedetails.com/flow/" >Flow<i class="fas fa-external-link-alt"></i></a> - 支持简单的 FTP + SFTP 客户端。</li>
<li><a class="link"   href="https://panic.com/transmit/" >Transmit<i class="fas fa-external-link-alt"></i></a> - 一个 FTP 客户端，支持 FTP + SFTP + S3。</li>
<li><a class="link"   href="http://www.yummysoftware.com/" >Yummy FTP<i class="fas fa-external-link-alt"></i></a> - 专业快速，可靠的 FTP 客户端。</li>
</ul>
<h2 id="数据恢复"><a href="#数据恢复" class="headerlink" title="数据恢复"></a>数据恢复</h2><ul>
<li><a class="link"   href="http://www.alsoft.com/DiskWarrior/" >DiskWarrior<i class="fas fa-external-link-alt"></i></a> - 恢复文件系统损坏时，磁盘工具进行选择。</li>
<li><a class="link"   href="https://www.prosofteng.com/datarescue-mac-data-recovery/" >Data Rescue<i class="fas fa-external-link-alt"></i></a> - 多种情况下的全面和专业的数据恢复。</li>
<li><a class="link"   href="http://www.r-studio.com/data_recovery_macintosh/" >R-Studio for Mac<i class="fas fa-external-link-alt"></i></a> - 可恢复分区被格式化、损坏或被删除的文件。</li>
</ul>
<h2 id="音频和视频"><a href="#音频和视频" class="headerlink" title="音频和视频"></a>音频和视频</h2><ul>
<li><a class="link"   href="https://macroplant.com/adapter" >Adapter<i class="fas fa-external-link-alt"></i></a> - 视频，音频和图像转换工具。<img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="http://www.aegisub.org/" >Aegisub<i class="fas fa-external-link-alt"></i></a> - 用于创建和修改字幕的免费、跨平台开源工具。Aegisub可以快速方便地将字幕计时到音频中，并提供了许多强大的工具来设置字幕的样式，包括内置的实时视频预览。 <a href="https://github.com/Aegisub/Aegisub/"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                ></a> <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="https://apps.apple.com/us/app/audio-profile-manager/id1484150558?ls=1&mt=12" >Audio Profile Manager<i class="fas fa-external-link-alt"></i></a> - 允许您为连接设备的每个特定组合固定输入&#x2F;输出设备。可能会禁止选择HDMI显示器。 <a href="https://apps.apple.com/us/app/audio-profile-manager/id1484150558?ls=1&mt=12"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-app-store.svg"
                      alt="App Store" title="苹果应用商店软件"
                ></a></li>
<li><a class="link"   href="http://ardour.org/" >Ardour<i class="fas fa-external-link-alt"></i></a> - 录制，编辑和混合多轨音频。<a href="https://github.com/Ardour/ardour"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                ></a></li>
<li><a class="link"   href="http://www.audacityteam.org/" >Audacity<i class="fas fa-external-link-alt"></i></a> - 免费开源的编辑音频的软件。<a href="https://github.com/audacity/audacity"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                ></a></li>
<li><a class="link"   href="http://www.rogueamoeba.com/audiohijack/" >Audio Hijack<i class="fas fa-external-link-alt"></i></a> - 一个记录任何应用程序的音频，包括网络电话 Skype，网络流从 Safari，以及更多。</li>
<li><a class="link"   href="http://www.arctime.org/" >ArcTime<i class="fas fa-external-link-alt"></i></a> - 跨平台字幕制作软件。</li>
<li><a class="link"   href="http://www.aegisub.org/" >Aegisub<i class="fas fa-external-link-alt"></i></a> - 免费、开源、跨平台的专业字幕编辑软件，可以快速打轴，制作特效字幕等，字幕组必备。 <a href="https://github.com/Aegisub/Aegisub/"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                ></a> <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="https://www.engineerdraft.com/bemyears/" >BeMyEars<i class="fas fa-external-link-alt"></i></a> - 听障人士免费, 系统语音本地识别实时生成字幕, 支持多种语言, 让你的每个音视频都拥有类似 YouTube 的字幕体验.</li>
<li><a class="link"   href="https://github.com/ExistentialAudio/BlackHole" >BlackHole<i class="fas fa-external-link-alt"></i></a> - Freemium，用于录制&#x2F;路由内部音频的开源虚拟输出&#x2F;输入音频驱动程序。 <a href="https://github.com/ExistentialAudio/BlackHole"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                ></a> <a href="https://github.com/ExistentialAudio/BlackHole"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></a></li>
<li><a class="link"   href="https://github.com/AnaghSharma/Carol" >Carol<i class="fas fa-external-link-alt"></i></a> - 为 macOS 提供最小化和美丽的歌词应用程序。<a href="https://github.com/AnaghSharma/Carol"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                ></a> <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="http://cogx.org/" >Cog<i class="fas fa-external-link-alt"></i></a> - 一个免费的开源音频播放器。<a href="https://bitbucket.org/mamburu/cog/"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                ></a> <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="https://www.blackmagicdesign.com/products/davinciresolve/" >DaVinci Resolve<i class="fas fa-external-link-alt"></i></a>  - 免费、跨平台视频编辑、颜色分级、视频效果和音频编辑软件。</li>
<li><a class="link"   href="https://mac.eltima.com/media-player.html" >Elmedia Player<i class="fas fa-external-link-alt"></i></a> - 支持 FLV, MP4, AVI, MOV, DAT, MKV, MP3, FLAC, M4V 等格式播放.</li>
<li><a class="link"   href="https://www.ffworks.net/" >ffWorks<i class="fas fa-external-link-alt"></i></a> - macOS的综合媒体工具。使每个人都可以使用高质量的视频编码。</li>
<li><a class="link"   href="https://github.com/sindresorhus/gifski-app" >Gifski<i class="fas fa-external-link-alt"></i></a> - 将视频转换为高质量GIF。 <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                > <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                > <a href="https://itunes.apple.com/no/app/gifski/id1351639930?mt=12"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-app-store.svg"
                      alt="App Store" title="苹果应用商店软件"
                ></a></li>
<li><a class="link"   href="https://handbrake.fr/" >HandBrake<i class="fas fa-external-link-alt"></i></a> - 高性能的视频编码和转换工具，具有很好的图形用户界面。<a href="https://github.com/HandBrake/HandBrake"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                ></a></li>
<li><a class="link"   href="http://hydrogen-music.org/" >Hydrogen<i class="fas fa-external-link-alt"></i></a> - 专业鼓乐类工具，创建专业但简单而直观的鼓乐节目。<a href="https://github.com/hydrogen-music/hydrogen"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                ></a></li>
<li><a class="link"   href="http://www.iffmpeg.com/" >iFFmpeg<i class="fas fa-external-link-alt"></i></a> - MacOS 上功能强大、易用的视频压制软件。</li>
<li><a class="link"   href="https://lhc70000.github.io/iina/" >IINA<i class="fas fa-external-link-alt"></i></a> - 基于<a class="link"   href="https://github.com/mpv-player/mpv" >MPV<i class="fas fa-external-link-alt"></i></a>的，现代视频播放器，支持多点触摸控制。<a href="https://github.com/lhc70000/iina"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                ></a> <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="https://kodi.tv/" >Kodi<i class="fas fa-external-link-alt"></i></a> - 一款一流的免费开源媒体中心软件，可用于播放视频、音乐，查看图片，玩游戏等。<a href="https://github.com/xbmc/xbmc"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                ></a> <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="https://www.lmms.io/" >LMMS<i class="fas fa-external-link-alt"></i></a> - LMMS以前称为“Linux多媒体工作室”，是一个功能强大的数字音频工作站，设计类似FL Studio（以前称为Fruity Loops）。<a href="https://github.com/lmms/lmms"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                ></a> <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="https://github.com/mifi/lossless-cut" >LosslessCut<i class="fas fa-external-link-alt"></i></a> - 跨平台工具，使用ffmpeg进行快速无损的视频和音频修剪。 <a href="https://github.com/mifi/lossless-cut"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                > <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></a></li>
<li><a class="link"   href="https://github.com/ddddxxx/LyricsX" >LyricsX<i class="fas fa-external-link-alt"></i></a> - 一款功能完备的歌词工具。 <a href="https://github.com/ddddxxx/LyricsX"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                ></a> <a href="https://itunes.apple.com/cn/app/lyricsx/id1254743014?mt=12"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-app-store.svg"
                      alt="App Store" title="苹果应用商店软件"
                ></a> <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="http://markvapps.com/metadatics" >Metadatics<i class="fas fa-external-link-alt"></i></a> - 音频元数据编辑器，支持大多数常见的音频文件。<a href="https://itunes.apple.com/cn/app/tincta/id448340648"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-app-store.svg"
                      alt="App Store" title="苹果应用商店软件"
                ></a></li>
<li><a class="link"   href="https://mp3tag.app/" >Mp3tag<i class="fas fa-external-link-alt"></i></a> - 一个功能强大且易于使用的工具，用于编辑音频文件的元数据。<a href="https://apps.apple.com/app/id1532597159/"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-app-store.svg"
                      alt="App Store" title="苹果应用商店软件"
                ></a></li>
<li><a class="link"   href="http://mixxx.org/" >Mixxx<i class="fas fa-external-link-alt"></i></a> - 免费的DJ软件，给你一切你需要的表演组合，名副其实的替代 Traktor。<a href="https://github.com/mixxxdj/mixxx"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                ></a> <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="https://evilcult.github.io/moviecatcher/" >Movie Catcher<i class="fas fa-external-link-alt"></i></a> - 电影美剧搜索及在线观看离线下载软件，借助百度云实现离线下载以及在线播放功能。 <a href="https://github.com/EvilCult/moviecatcher"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                ></a></li>
<li><a class="link"   href="https://www.mpv.io/" >mpv<i class="fas fa-external-link-alt"></i></a> - 一个免费、开源和跨平台的媒体播放器。<a href="https://github.com/mpv-player/mpv"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                ></a> <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="https://musescore.org/" >MuseScore<i class="fas fa-external-link-alt"></i></a> - 免费的作曲与乐谱软件。<a href="https://github.com/musescore/MuseScore"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                ></a> <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="https://musicplus.io/" >MusicPlus<i class="fas fa-external-link-alt"></i></a> - 免费搜索、播放和下载音乐。 <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="https://natron.fr/" >Natron<i class="fas fa-external-link-alt"></i></a> - 开源的视频合成软件，功能与 Adobe After Effects 或者 Nuke 类似。<a href="https://github.com/MrKepzie/Natron"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                ></a></li>
<li><a class="link"   href="https://okaapps.com/product/1470926410#" >Omniplayer<i class="fas fa-external-link-alt"></i></a> - Mac上最好的媒体播放器，支持几乎所有格式。 <a href="macappstore://itunes.apple.com/app/id1470926410?pt=119209922&l=en&mt=12&ct=newhomepage"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-app-store.svg"
                      alt="App Store" title="苹果应用商店软件"
                ></a></li>
<li><a class="link"   href="https://popcorntime.co/" >Popcorn Time<i class="fas fa-external-link-alt"></i></a> - 电影播放器，观看 torrent 电影。<img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="https://zh.okaapps.com/product/1612400976#" >PotPlayer X<i class="fas fa-external-link-alt"></i></a> - omi出品，音视频播放器，界面简洁，功能齐全 <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                > <a href="https://apps.apple.com/cn/app/potplayer-x-%E9%9F%B3%E8%A7%86%E9%A2%91%E6%92%AD%E6%94%BE%E5%99%A8/id1612400976?mt=12"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-app-store.svg"
                      alt="App Store" title="苹果应用商店软件"
                ></a></li>
<li><a class="link"   href="http://perian.org/#download" >Perian<i class="fas fa-external-link-alt"></i></a> - (<strong>不再处于活跃开发中</strong>) <del>让 QuickTime 播放所有常见格式的免费插件。</del>. <a href="https://github.com/MaddTheSane/perian"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                ></a></li>
<li><a class="link"   href="https://mafintosh.github.io/playback/" >Playback<i class="fas fa-external-link-alt"></i></a> - 实验性质的视频播放器。 <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                > <a href="https://github.com/mafintosh/playback"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                ></a></li>
<li><a class="link"   href="https://plugformac.com/" >Plug<i class="fas fa-external-link-alt"></i></a> - 发现并聆听来自Hype Machine的音乐。 <a href="https://github.com/wulkano/Plug"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                ></a> <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                > <a href="https://apps.apple.com/app/id1514182074"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-app-store.svg"
                      alt="App Store" title="苹果应用商店软件"
                ></a></li>
<li><a class="link"   href="https://popcorn-time.tw/" >Popcorn Time<i class="fas fa-external-link-alt"></i></a> - 立即观看 torrent 电影，这项爆米花时间服务将永远不会被取消。下载并享受。<img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="http://radiant-player.github.io/radiant-player-mac/" >Radiant Player<i class="fas fa-external-link-alt"></i></a> - Google Play音乐播放器。<a href="https://github.com/radiant-player/radiant-player-mac"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                ></a> <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="https://sindresorhus.com/recordia" >Recordia<i class="fas fa-external-link-alt"></i></a> - 直接从菜单栏或使用全局键盘快捷键录制音频。 <a href="https://apps.apple.com/app/id1529006487"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-app-store.svg"
                      alt="App Store" title="苹果应用商店软件"
                ></a></li>
<li><a class="link"   href="http://www.telestream.net/screenflow/" >ScreenFlow<i class="fas fa-external-link-alt"></i></a> - 屏幕和视频编辑软件。</li>
<li><a class="link"   href="https://www.shotcut.org/" >Shotcut<i class="fas fa-external-link-alt"></i></a> - 免费开源视频编辑器。 <a href="https://github.com/mltframework/shotcut"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                ></a> <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="https://www.sodaplayer.com/" >Soda Player<i class="fas fa-external-link-alt"></i></a> - 一款能够直接播放种子、磁力链接、在线视频、自动获取字幕、链接和本地视频文件的播放器。 <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="https://github.com/sonoramac/Sonora" >Sonora<i class="fas fa-external-link-alt"></i></a> -  一个很小的音乐播放器。<a href="https://github.com/sonoramac/Sonora"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                ></a> <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="https://github.com/kmikiy/SpotMenu" >SpotMenu<i class="fas fa-external-link-alt"></i></a> - Spotify 和 iTunes 在状态菜单栏中显示。 <a href="https://github.com/kmikiy/SpotMenu"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                ></a> <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="https://www.stremio.com/" >Stremio<i class="fas fa-external-link-alt"></i></a> - 电影、电视节目、连续剧、电视直播或 YouTube 和 Twitch 等网络频道。电视-你可以在 Stremio 上找到这一切。 <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="http://stringed.buenosapps.com/" >Stringed 2<i class="fas fa-external-link-alt"></i></a> - 音频编辑处理工具。 <a href="https://itunes.apple.com/cn/app/stringed/id698710517"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-app-store.svg"
                      alt="App Store" title="苹果应用商店软件"
                ></a></li>
<li><a class="link"   href="http://synfig.org/" >Synfig Studio<i class="fas fa-external-link-alt"></i></a> - 工业级、强大的 2D 矢量动画制作软件。<a href="https://github.com/synfig/synfig"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                ></a> <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="http://www.videolan.org/" >VLC<i class="fas fa-external-link-alt"></i></a> - 开源的跨平台多媒体播放器及框架，可播放大多数多媒体文件。<a href="https://github.com/videolan/vlc"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                ></a> <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="https://vox.rocks/mac-music-player" >VOX Player<i class="fas fa-external-link-alt"></i></a> - 免费全能音乐播放器，撸码之余听听歌是一种享受。<img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="http://tmkk.undo.jp/xld/index_e.html" >XLD<i class="fas fa-external-link-alt"></i></a> - 解码&#x2F;解码&#x2F;转换&#x2F;播放各种“无损”音频文件。<a href="https://code.google.com/archive/p/xld/source"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                ></a> <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
</ul>
<h3 id="云音乐播放器"><a href="#云音乐播放器" class="headerlink" title="云音乐播放器"></a>云音乐播放器</h3><ul>
<li><a class="link"   href="https://github.com/trazyn/ieaseMusic" >ieaseMusic<i class="fas fa-external-link-alt"></i></a> - 基于网易云音乐 <a href="https://github.com/Binaryify/NeteaseCloudMusicApi"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                ></a> <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="https://y.qq.com/download/index.html" >QQ音乐<i class="fas fa-external-link-alt"></i></a> <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="http://music.163.com/" >网易云音乐<i class="fas fa-external-link-alt"></i></a> <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="http://www.xiami.com/apps/mac" >虾米音乐<i class="fas fa-external-link-alt"></i></a> <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="http://kuwo.cn/down/index" >酷我音乐<i class="fas fa-external-link-alt"></i></a> <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="http://download.kugou.com/mac.html" >酷狗音乐<i class="fas fa-external-link-alt"></i></a> <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
</ul>
<h3 id="音频录制与编辑"><a href="#音频录制与编辑" class="headerlink" title="音频录制与编辑"></a>音频录制与编辑</h3><ul>
<li><a class="link"   href="https://www.apple.com.cn/mac/garageband/" >GarageBand<i class="fas fa-external-link-alt"></i></a> - 来自Apple的免费数字音频工作站（DAW)，提供简介低门槛的操作界面和完整的音乐录制、剪辑制作功能 <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                > <a href="https://apps.apple.com/cn/app/garageband/id682658836?l=zh&ls=1&mt=12"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-app-store.svg"
                      alt="App Store" title="苹果应用商店软件"
                ></a></li>
<li><a class="link"   href="https://www.apple.com.cn/logic-pro/" >Logic Pro X<i class="fas fa-external-link-alt"></i></a> - 来自Apple的专业数字音频工作站（DAW），提供完整专业的音乐制作功能、优秀的自带插件和音源，原生支持Apple Silicon实现高效运行 <a href="https://apps.apple.com/cn/app/logic-pro-x/id634148309?l=zh&mt=12"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-app-store.svg"
                      alt="App Store" title="苹果应用商店软件"
                ></a></li>
</ul>
<h2 id="书签阅读写作"><a href="#书签阅读写作" class="headerlink" title="书签阅读写作"></a>书签阅读写作</h2><ul>
<li><a class="link"   href="https://agenda.com/" >Agenda<i class="fas fa-external-link-alt"></i></a> - 以日期为重点的笔记记录应用程序，用于规划和记录您的项目。 <a href="https://itunes.apple.com/cn/app/id1287445660?mt=12"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-app-store.svg"
                      alt="App Store" title="苹果应用商店软件"
                ></a></li>
<li><a class="link"   href="http://www.bear-writer.com/" >Bear Writer<i class="fas fa-external-link-alt"></i></a> - 漂亮，灵活的写作应用程序，用于制作笔记和散文。 <a href="https://itunes.apple.com/cn/app/bear-beautiful-writing-app/id1091189122"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-app-store.svg"
                      alt="App Store" title="苹果应用商店软件"
                ></a></li>
<li><a class="link"   href="https://boostnote.io/" >Boostnote<i class="fas fa-external-link-alt"></i></a> - 为程序员量身定做的笔记应用。 <a href="https://github.com/BoostIO/Boostnote"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                ></a></li>
<li><a class="link"   href="http://chmox.sourceforge.net/" >Chmox<i class="fas fa-external-link-alt"></i></a> - 读 chm 文件的软件。<img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="http://www.hewbo.com/chm-reader.html" >CHM Reader<i class="fas fa-external-link-alt"></i></a> - 读 chm 文件的软件。<img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="https://github.com/NSGod/ichm" >iChm<i class="fas fa-external-link-alt"></i></a> - 读 chm 文件的软件。<a href="https://github.com/NSGod/ichm"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                ></a> <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="https://joplin.cozic.net/" >Joplin<i class="fas fa-external-link-alt"></i></a> - 支持 markdown 的开源记事本和具有同步功能的待办事项列表管理器。 <a href="https://github.com/laurent22/joplin"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                ></a> <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="http://www.amazon.com/gp/help/customer/display.html?nodeId=201246110" >Kindle App<i class="fas fa-external-link-alt"></i></a> - 亚马逊 Kindle App 电子书阅读器。</li>
<li><a class="link"   href="http://klib.me/cn/" >Klib<i class="fas fa-external-link-alt"></i></a> - 全新的 Kindle、iBooks 标注管理工具。<img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                > <a href="https://itunes.apple.com/cn/app/id1196268448?mt=12&at=1000lv4R&ct=klib_me"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-app-store.svg"
                      alt="App Store" title="苹果应用商店软件"
                ></a></li>
<li><a class="link"   href="https://marginnote.com/?lang=zh-hans" >MarginNote<i class="fas fa-external-link-alt"></i></a> - 一款优秀的 PDF 有标注软件，批注、抽认卡、思维导图、汇总视图等功能。</li>
<li><a class="link"   href="http://www.pdfreaderpro.com/" >PDF Reader Pro<i class="fas fa-external-link-alt"></i></a> - 可以查看，创建，签名，转换和压缩任何 PDF 文档。<a href="https://itunes.apple.com/cn/app/pdf-reader-pro-your-pdf-office/id825459243"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-app-store.svg"
                      alt="App Store" title="苹果应用商店软件"
                ></a></li>
<li><a class="link"   href="https://pdfexpert.com/" >PDF Expert<i class="fas fa-external-link-alt"></i></a> - PDF 阅读、批注，编辑文本，添加照片，填写表单。</li>
<li><a class="link"   href="http://www.qownnotes.org/" >QOwnNotes<i class="fas fa-external-link-alt"></i></a> - 是开源记事本，带有 markdown 支持和待办事项列表管理器。 <a href="https://github.com/pbek/QOwnNotes"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                ></a> <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="https://bananafishsoftware.com/products/spillo/" >Spillo<i class="fas fa-external-link-alt"></i></a> - 功能强大，美观、快速网络书签网页阅读。</li>
<li><a class="link"   href="http://skim-app.sourceforge.net/" >Skim<i class="fas fa-external-link-alt"></i></a> - PDF 阅读器和笔记本。 <a href="https://sourceforge.net/projects/skim-app/"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                ></a> <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="https://www.texpad.com/" >texpad<i class="fas fa-external-link-alt"></i></a> - Mac 下非常棒的 LaTeX 编辑器。 支持自动编译预览，自动补全等。</li>
<li><a class="link"   href="https://www.momothink.com/wonderpen" >WonderPen<i class="fas fa-external-link-alt"></i></a> - 专注于写作的应用，支持 markdown，很多贴心细节，支持长文写作，可导出多种格式。<a href="https://itunes.apple.com/cn/app/wonderpen/id1173437104?l=en&mt=12"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-app-store.svg"
                      alt="App Store" title="苹果应用商店软件"
                ></a></li>
</ul>
<h3 id="Office"><a href="#Office" class="headerlink" title="Office"></a>Office</h3><ul>
<li><a class="link"   href="https://www.kde.org/applications/office/" >KOffice<i class="fas fa-external-link-alt"></i></a> - 集成化办公套件，包含文字处理器、电子 表格、幻灯片制作、项目管理等多种工具。<img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="https://apps.apple.com/cn/app/keynote/id409183694?mt=12" >Keynote 讲演<i class="fas fa-external-link-alt"></i></a> - 构建炫目的演示文稿。 <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                > <a href="https://apps.apple.com/cn/app/keynote/id409183694?mt=12"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-app-store.svg"
                      alt="App Store" title="苹果应用商店软件"
                ></a></li>
<li><a class="link"   href="https://zh-cn.libreoffice.org/" >LibreOffice<i class="fas fa-external-link-alt"></i></a> - 一款功能强大的免费开源办公软件，默认使用开放文档格式，并支持其他多种文档格式。<a href="http://zh-cn.libreoffice.org/download/source-code/"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                ></a> <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="https://products.office.com/zh-cn/mac" >Microsoft Office<i class="fas fa-external-link-alt"></i></a> - 微软Office办公套件 <a href="https://apps.apple.com/cn/app/numbers/id409203825?mt=12"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-app-store.svg"
                      alt="App Store" title="苹果应用商店软件"
                ></a></li>
<li><a class="link"   href="https://apps.apple.com/cn/app/numbers/id409203825?mt=12" >Numbers 表格<i class="fas fa-external-link-alt"></i></a> - 创建令人印象深刻的电子表格。 <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                > <a href="https://apps.apple.com/cn/app/numbers/id409203825?mt=12"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-app-store.svg"
                      alt="App Store" title="苹果应用商店软件"
                ></a></li>
<li><a class="link"   href="https://apps.apple.com/cn/app/pages/id409201541?mt=12" >Pages 文稿<i class="fas fa-external-link-alt"></i></a> - 引人注目的文稿。 <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                > <a href="https://apps.apple.com/cn/app/pages/id409201541?mt=12"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-app-store.svg"
                      alt="App Store" title="苹果应用商店软件"
                ></a></li>
<li><a class="link"   href="https://www.wps.cn/product/wpsmac/" >WPS<i class="fas fa-external-link-alt"></i></a> - 是一套跨平台的办公室软件套件。 <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
</ul>
<h3 id="RSS"><a href="#RSS" class="headerlink" title="RSS"></a>RSS</h3><ul>
<li><a class="link"   href="http://www.rockysandstudio.com/" >Leaf<i class="fas fa-external-link-alt"></i></a> - RSS 客户端程序。</li>
<li><a class="link"   href="https://ranchero.com/netnewswire/" >NetNewsWire<i class="fas fa-external-link-alt"></i></a> - 免费的 RSS 阅读器。<a href="https://github.com/brentsimmons/NetNewsWire"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                ></a> <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="http://readkitapp.com/" >ReadKit<i class="fas fa-external-link-alt"></i></a> - 书签 RSS 管理客户端。</li>
<li><a class="link"   href="http://reederapp.com/" >Reeder 5<i class="fas fa-external-link-alt"></i></a> - RSS 服务订阅。</li>
<li><a class="link"   href="http://viennarss.github.io/" >Vienna<i class="fas fa-external-link-alt"></i></a> - RSS&#x2F;Atom 新闻阅读客户端。<a href="https://github.com/ViennaRSS/vienna-rss"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                ></a> <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="http://irreader.fatecore.com/" >irreader<i class="fas fa-external-link-alt"></i></a> - 多功能的 RSS 阅读器，支持订阅播客和任何网站。<img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
</ul>
<h3 id="Markdown"><a href="#Markdown" class="headerlink" title="Markdown"></a>Markdown</h3><blockquote>
<p>A curated list of delightful Markdown stuff. <a href="https://github.com/BubuAnabelas/awesome-markdown#tools"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-awesome.svg"
                      alt="Awesome List" title="Awesome List"
                ></a></p>
</blockquote>
<ul>
<li><a class="link"   href="https://www.zybuluo.com/" >Cmd Markdown<i class="fas fa-external-link-alt"></i></a> - Cmd Markdown 编辑阅读器，支持实时同步预览，区分写作和阅读模式，支持在线存储，分享文稿网址。 <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="https://www.effie.co/" >Effie<i class="fas fa-external-link-alt"></i></a> - 轻量级 Markdown 写作软件，支持大纲笔记和思维导图。<img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="https://github.com/egoist/eme" >EME<i class="fas fa-external-link-alt"></i></a> - 最近刚出的一款 Markdown 编辑器，界面很像 Chrome 浏览器的界面，很简约。</li>
<li><a class="link"   href="https://ia.net/writer/" >iA Writer<i class="fas fa-external-link-alt"></i></a> - Markdown 文本预览编辑，注重语法检查，专门为作家提供的编辑器。</li>
<li><a class="link"   href="http://lightpaper.42squares.in/" >LightPaper<i class="fas fa-external-link-alt"></i></a> - 简单的 Markdown 文本编辑器。</li>
<li><a class="link"   href="http://macdown.uranusjr.com/" >MacDown<i class="fas fa-external-link-alt"></i></a> - 一款开源的 Markdown 编辑器，深受<a class="link"   href="http://25.io/mou/" >Mou<i class="fas fa-external-link-alt"></i></a>的影响。<img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                > <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="http://marked2app.com/" >Marked 2<i class="fas fa-external-link-alt"></i></a> - Markdown 文本预览编辑，为所有作家提供一套优雅而强大的工具。</li>
<li><a class="link"   href="https://marktext.app/" >MarkText<i class="fas fa-external-link-alt"></i></a> - 简单而优雅的 Markdown 编辑器，专注于速度和可用性。 <a href="https://github.com/marktext/marktext"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                ></a> <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="https://marp.app/" >Marp<i class="fas fa-external-link-alt"></i></a> -  Markdown 制作幻灯片编辑器。<a href="https://github.com/yhatt/marp"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                ></a> <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="https://maxiang.io/" >Marxico马克飞象<i class="fas fa-external-link-alt"></i></a> - 一款专为印象笔记（Evernote）打造的Markdown编辑器，通过精心的设计与技术实现，配合印象笔记强大的存储和同步功能，带来前所未有的书写体验。</li>
<li><a class="link"   href="http://zh.mweb.im/" >MWeb<i class="fas fa-external-link-alt"></i></a> - 专业的 Markdown 写作、记笔记、静态博客生成软件。</li>
<li><a class="link"   href="http://www.textnutwriter.com/" >TextNut<i class="fas fa-external-link-alt"></i></a> - Markdown 编辑器，富文本之间自由切换。<img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="http://www.typora.io/" >Typora<i class="fas fa-external-link-alt"></i></a> - 基于 Electron 的“读写一体” Markdown 编辑器。<img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="https://www.ulyssesapp.com/features/" >Ulysses<i class="fas fa-external-link-alt"></i></a> - 适用于 Mac，iPad 和 iPhone 的写作应用程序，支持 Markdown。</li>
<li><a class="link"   href="https://ivarptr.github.io/yu-writer.site/" >Yu Writer<i class="fas fa-external-link-alt"></i></a> - 一款能找到写作乐趣的 Markdown 文本编辑器。 <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
</ul>
<h3 id="笔记"><a href="#笔记" class="headerlink" title="笔记"></a>笔记</h3><ul>
<li><a class="link"   href="https://evernote.com/" >Evernote<i class="fas fa-external-link-alt"></i></a> - 笔记本应用程序。 <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="https://www.inkdrop.info/" >Inkdrop<i class="fas fa-external-link-alt"></i></a> - Markdown 爱好者的笔记本应用程序。</li>
<li><a class="link"   href="http://app.leanote.com/" >leanote<i class="fas fa-external-link-alt"></i></a> - 支持 Markdown 的一款开源笔记软件，支持直接成为个人博客。<a href="https://github.com/leanote/leanote"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                ></a> <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="http://www.get-notes.com/" >Notes<i class="fas fa-external-link-alt"></i></a> - 简洁的笔记应用。 <a href="https://github.com/nuttyartist/notes"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                ></a> <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="https://noteplan.co/" >NotePlan 3<i class="fas fa-external-link-alt"></i></a> - 您的任务、笔记和日历、纯文本 Markdown 文件。 <a href="https://apps.apple.com/en/app/noteplan-3/id1505432629"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-app-store.svg"
                      alt="App Store" title="苹果应用商店软件"
                ></a></li>
<li><a class="link"   href="https://www.zoho.com/notebook/notebook-for-mac.html" >Notebook<i class="fas fa-external-link-alt"></i></a> 漂亮的笔记本应用程序。 <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="https://www.notion.so/zh-cn" >Notion<i class="fas fa-external-link-alt"></i></a> - 一个集大成的富文本笔记管理软件，支持丰富却又简单明了的的文字格式，甚至覆盖了<code>TODO</code>类软件的功能。数据在服务端存储，支持web访问，也提供了<code>macOS</code>&#x2F;<code>Windows</code>&#x2F;<code>iOS</code>&#x2F;<code>安卓</code>等平台客户端。 <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="https://www.onenote.com/" >OneNote<i class="fas fa-external-link-alt"></i></a> - 微软备注应用。 <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="http://happenapps.com/#quiver" >Quiver<i class="fas fa-external-link-alt"></i></a> - 程序猿的笔记本。</li>
<li><a class="link"   href="http://note.youdao.com/" >有道云笔记<i class="fas fa-external-link-alt"></i></a> - 支持多目录，Markdown，iWork&#x2F;Office 预览。<img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="http://www.wiz.cn/download.html" >为知笔记<i class="fas fa-external-link-alt"></i></a> - 支持 Markdown，搜集整理图片链接导入文档。<img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="https://www.yuque.com/install/desktop" >阿里语雀<i class="fas fa-external-link-alt"></i></a> - 云笔记类知识管理、协作平台，基于Markdown写作，支持内嵌流程图、脑图、时序、代码渲染以及Sketch画板创作，个人知识分享等！相比有道云笔记、印象笔记同类产品，包含其全部的功能以外，支持知识分享以及更强大的创作、协作、编辑器，它来自阿里巴巴蚂蚁金服。<img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
</ul>
<h2 id="制作电子书"><a href="#制作电子书" class="headerlink" title="制作电子书"></a>制作电子书</h2><ul>
<li><a class="link"   href="http://calibre-ebook.com/" >Calibre<i class="fas fa-external-link-alt"></i></a> - 丑陋的软件，但强大的软件电子书管理和转换。<a href="https://github.com/kovidgoyal/calibre"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                ></a> <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="https://sigil-ebook.com/" >Sigil<i class="fas fa-external-link-alt"></i></a> - 多平台 EPUB 编辑器。 <a href="https://github.com/Sigil-Ebook/Sigil"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                ></a> <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="https://www.scribus.net/" >Scribus<i class="fas fa-external-link-alt"></i></a> - 开源电子杂志制作软件。 <a href="https://sourceforge.net/projects/scribus/"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                ></a> <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
</ul>
<h2 id="软件打包工具"><a href="#软件打包工具" class="headerlink" title="软件打包工具"></a>软件打包工具</h2><ul>
<li><a class="link"   href="http://appjs.com/" >AppJS<i class="fas fa-external-link-alt"></i></a> - 使用 JS、HTML 和CSS 构建跨平台的桌面应用程序。<a href="https://github.com/appjs/appjs"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                ></a> <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="https://github.com/AlloyTeam/webtop" >AlloyDesktop<i class="fas fa-external-link-alt"></i></a> - 同上，腾讯出品，给个差评。<a href="https://github.com/AlloyTeam/webtop"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                ></a> <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="https://github.com/sindresorhus/create-dmg" >create-dmg<i class="fas fa-external-link-alt"></i></a> - 快速创建一个压缩镜像文件。 <a href="https://github.com/sindresorhus/create-dmg"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                ></a> <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="https://electronjs.org/" >Electron<i class="fas fa-external-link-alt"></i></a> - 前身是 AtomShell，使用 JS、HTML 和 CSS 构建跨平台的桌面应用程序。<a href="https://github.com/electron/electron"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                ></a> <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="https://github.com/pojala/electrino" >Electrino<i class="fas fa-external-link-alt"></i></a> - 使用 JS、HTML 和 CSS 构建跨平台的桌面应用程序，构建出的应用体积比 Electron 小。<a href="https://github.com/pojala/electrino"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                ></a> <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="https://johnste.github.io/finicky/" >Finicky<i class="fas fa-external-link-alt"></i></a> - Web 应用程序转化为苹果的应用程序。<a href="https://github.com/johnste/finicky"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                ></a> <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="http://hex.youdao.com/zh-cn/index.html" >HEX<i class="fas fa-external-link-alt"></i></a> - 使用 JS、HTML 和 CSS 构建跨平台的桌面应用程序，有道出品。<a href="https://github.com/netease-youdao/hex"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                ></a> <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="http://ionicframework.com/" >ionic<i class="fas fa-external-link-alt"></i></a> - 一个用来开发混合手机应用的，开源的，免费的代码库。 <a href="https://github.com/driftyco/ionic"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                ></a> <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="http://nwjs.io/" >nw.js<i class="fas fa-external-link-alt"></i></a> - 使用 HTML 和 JavaScript 来制作桌面应用。<a href="https://github.com/nwjs/nw.js"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                ></a> <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="http://macgapproject.github.io/" >MacGap<i class="fas fa-external-link-alt"></i></a> - 桌面 WebKit 打包 HTML、CSS、JS 应用。<a href="https://github.com/MacGapProject"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                ></a> <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="http://reactdesktop.js.org/" >react-desktop<i class="fas fa-external-link-alt"></i></a> - 为 macOS Sierra带来 React UI 组件。<a href="https://github.com/gabrielbull/react-desktop"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                ></a> <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="https://microsoft.github.io/reactxp/" >ReactXP<i class="fas fa-external-link-alt"></i></a> - 微软官方出品，支持平台 Web，iOS，Android 和 Windows UWP 仍然是一项正在进行的工作。<a href="https://github.com/microsoft/reactxp"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                ></a> <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="https://github.com/ptmt/react-native-desktop" >React Native macOS<i class="fas fa-external-link-alt"></i></a> - 用 React Native 技术构建 OS X 下的桌面应用程序。<a href="https://github.com/ptmt/react-native-desktop"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                ></a> <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="https://github.com/CanonicalLtd/react-native" >React Native Desktop for Ubuntu<i class="fas fa-external-link-alt"></i></a> - 用 React Native 技术构建 Ubuntu 下的桌面应用程序。<a href="https://github.com/CanonicalLtd/react-native"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                ></a> <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
</ul>
<h2 id="下载工具"><a href="#下载工具" class="headerlink" title="下载工具"></a>下载工具</h2><ul>
<li><a class="link"   href="https://aria2.github.io/" >aria2<i class="fas fa-external-link-alt"></i></a> - 一款支持多种协议的轻量级命令行下载工具。<a href="https://github.com/aria2"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                ></a> <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="https://software.charliemonroe.net/downie.php" >Downie<i class="fas fa-external-link-alt"></i></a> - 支持多达近 1200 个视频站点的视频下载工具。</li>
<li><a class="link"   href="http://www.freedownloadmanager.org/" >Free Download Manager<i class="fas fa-external-link-alt"></i></a> - 功能强大的下载加速器。<img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="http://mac.eltima.com/download-manager.html" >FOLX<i class="fas fa-external-link-alt"></i></a> - 一个 Mac osx 系统风格界面的下载管理工具。 <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="http://jdownloader.org/" >JDownloader<i class="fas fa-external-link-alt"></i></a> - 下载工具，下载文件的一键式托管。<img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="https://motrix.app/" >Motrix<i class="fas fa-external-link-alt"></i></a> - Motrix 是一款全能的下载工具，支持下载 HTTP、FTP、BT、磁力链、百度网盘等资源。 <a href="https://github.com/agalwood/Motrix"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                ></a> <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="https://www.qbittorrent.org/" >qBittorrent<i class="fas fa-external-link-alt"></i></a> - 一个替代 μTorrent 的开源软件。 <a href="https://github.com/qbittorrent/qBittorrent"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                ></a> <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="https://www.transmissionbt.com/" >Transmission<i class="fas fa-external-link-alt"></i></a> - 免费的 BitTorrent 客户端 <a href="https://github.com/transmission/transmission"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                ></a> <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="https://you-get.org/" >You-Get<i class="fas fa-external-link-alt"></i></a> - 网络富媒体命令行下载工具。<a href="https://github.com/soimort/you-get"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                ></a> <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
</ul>
<h2 id="网盘"><a href="#网盘" class="headerlink" title="网盘"></a>网盘</h2><p><em>推荐一些有Mac客户端的网盘。</em></p>
<ul>
<li><a class="link"   href="http://pc.115.com/" >115<i class="fas fa-external-link-alt"></i></a> - 115 云客户端。<img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="http://www.dropboxchina.com/Download/dropbox-for-mac.html" >Dropbox<i class="fas fa-external-link-alt"></i></a> - 非常好用的免费网络文件同步工具，提供在线存储服务。<img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="https://nextcloud.com/" >NextCloud<i class="fas fa-external-link-alt"></i></a> - 基于 ownCloud 完全开源免费开源，企业文件同步和共享。 <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                ></li>
<li><a class="link"   href="https://mega.nz/" >Mega<i class="fas fa-external-link-alt"></i></a> - 免费的云服务，提供 50GB 的免费存储空间。<img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="https://www.resilio.com/individuals/" >Resilio Sync<i class="fas fa-external-link-alt"></i></a> - P2P私有云盘，BitTorrent血统，支持<code>安卓</code>&#x2F;<code>iOS</code>&#x2F;<code>Windows</code>&#x2F;<code>macOS</code>&#x2F;<code>Linux</code>&#x2F;<code>FreeBSD</code>&#x2F;<code>NAS</code>等系统平台。注意：截止2021.7.20，macOS平台客户端存在休眠崩溃现象，除此之外可以正常使用。<img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="https://www.seafile.com/" >Seafile<i class="fas fa-external-link-alt"></i></a> - 是由国内团队开发的国际化的开源云存储软件项目。<img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="https://syncthing.net/" >Syncthing<i class="fas fa-external-link-alt"></i></a> - <a class="link"   href="https://www.resilio.com/individuals/" >Resilio Sync<i class="fas fa-external-link-alt"></i></a>的开源竞争者，架构上更加开放自由，良好的用户文档，基于Go语言支持大量系统平台，甚至包括<code>OpenWrt</code>！此项目的界面翻译工作也支持<a class="link"   href="https://www.transifex.com/syncthing/syncthing/dashboard/" >开源共建<i class="fas fa-external-link-alt"></i></a>。<a href="https://github.com/syncthing/"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                ></a> <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="https://owncloud.org/" >ownCloud<i class="fas fa-external-link-alt"></i></a> - 私有云网盘。</li>
<li><a class="link"   href="http://pan.baidu.com/download?from=header#pan" >百度云<i class="fas fa-external-link-alt"></i></a> - 百度云客户端。<img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="https://www.weiyun.com/" >腾讯微云<i class="fas fa-external-link-alt"></i></a> - 腾讯云客户端。<img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="https://www.jianguoyun.com/s/downloads" >坚果云<i class="fas fa-external-link-alt"></i></a> - 坚果云客户端。<img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="https://www.fangcloud.com/" >亿方云<i class="fas fa-external-link-alt"></i></a> - 硅谷团队打造，个人免费。<img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="https://www.aliyundrive.com/drive/" >阿里云盘<i class="fas fa-external-link-alt"></i></a> - 阿里云盘。<img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
</ul>
<h2 id="输入法"><a href="#输入法" class="headerlink" title="输入法"></a>输入法</h2><ul>
<li><a class="link"   href="https://github.com/utatti/kawa" >Kawa<i class="fas fa-external-link-alt"></i></a> - 给每个输入法定义一个快捷键. <a href="https://github.com/utatti/kawa"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                ></a> <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="http://rime.im/" >RIME<i class="fas fa-external-link-alt"></i></a> - 中州韻輸入法引擎。<a href="https://github.com/rime"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                ></a> <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="http://matthewpalmer.net/rocket/" >Rocket<i class="fas fa-external-link-alt"></i></a> - 使用冒号快捷键可以更快捷地输入表情符号。<img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="https://www.houdah.com/support/" >Type2Phone<i class="fas fa-external-link-alt"></i></a> - 把 Macbook 键盘变为 iPhone 的蓝牙键盘。 <a href="https://itunes.apple.com/cn/app/type2phone-bluetooth-keyboard/id472717129?mt=12"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-app-store.svg"
                      alt="App Store" title="苹果应用商店软件"
                ></a></li>
<li><a class="link"   href="http://www.glamtime.com.cn/product/wbim" >WBIM<i class="fas fa-external-link-alt"></i></a> - 五笔输入法。<a href="https://itunes.apple.com/cn/app/wbim-%E5%86%99%E5%AD%97%E6%9D%BF/id929844708?mt=12"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-app-store.svg"
                      alt="App Store" title="苹果应用商店软件"
                ></a></li>
<li><del><a class="link"   href="http://qq.pinyin.cn/" >QQ输入法<i class="fas fa-external-link-alt"></i></a> - 腾讯出品的输入法。<img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></del></li>
<li><a class="link"   href="http://pinyin.sogou.com/mac/" >搜狗输入法<i class="fas fa-external-link-alt"></i></a> - 搜狗输入法。<img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="https://srf.baidu.com/input/mac.html" >百度输入法<i class="fas fa-external-link-alt"></i></a> - 支持拼音五笔输入。<img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="https://im.logcg.com/loginputmac" >落格输入法<i class="fas fa-external-link-alt"></i></a> - 打破 Mac 双拼多年来的窘境。</li>
<li><a class="link"   href="https://www.omicronlab.com/iavro.html" >iAvro<i class="fas fa-external-link-alt"></i></a> - 孟加拉语输入法。 <a href="https://github.com/torifat/iAvro"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                ></a> <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="https://qingg.im/index.html" >清歌五笔输入法<i class="fas fa-external-link-alt"></i></a> - 为 iOS 和 Mac 专门打造的五笔输入法。<img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="https://itunes.apple.com/cn/app/yan-wen-zi/id914708191?mt=12" >颜文字<i class="fas fa-external-link-alt"></i></a> - 颜文字输入。<img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="https://github.com/dongyuwei/hallelujahIM" >哈利路亚英文输入法<i class="fas fa-external-link-alt"></i></a> - 智能英文输入法，具备自动补全，自动纠错功能。 <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="https://github.com/qwertyyb/Fire" >业火五笔输入法<i class="fas fa-external-link-alt"></i></a> - 轻量干净，功能强大的五笔输入法，完全开源。<a href="https://github.com/qwertyyb/Fire"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                ></a> <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="https://inputsource.pro/" >InputSourcePro<i class="fas fa-external-link-alt"></i></a> - 通过简洁的提示方式，配合输入法自动切换功能，让每一次输入都信心十足。</li>
</ul>
<h2 id="浏览器"><a href="#浏览器" class="headerlink" title="浏览器"></a>浏览器</h2><p><em>这里放Mac的浏览器应用</em></p>
<ul>
<li><a class="link"   href="https://brave.com/" >Brave<i class="fas fa-external-link-alt"></i></a> - 用 Brave 浏览更快更安全。 <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="http://www.google.cn/chrome/browser/" >Chrome<i class="fas fa-external-link-alt"></i></a> - Chrome 浏览器谷歌出品。<img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="http://www.firefox.com.cn/" >Firefox<i class="fas fa-external-link-alt"></i></a> - 迎接 Firefox Quantum。快，只为更好。火狐浏览器。<img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="http://www.apple.com/cn/safari/" >Safari<i class="fas fa-external-link-alt"></i></a> - Mac 预装自带浏览器。<img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                > <a href="https://github.com/learn-anything/safari-extensions#readme"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-awesome.svg"
                      alt="Awesome List" title="Awesome List"
                ></a></li>
<li><a class="link"   href="http://www.opera.com/zh-cn" >Opera<i class="fas fa-external-link-alt"></i></a> - Opera 浏览器。<img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="http://browser.qq.com/mac/" >QQ浏览器<i class="fas fa-external-link-alt"></i></a> - QQ 浏览器－腾讯出品。<img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="https://vivaldi.com/" >Vivaldi<i class="fas fa-external-link-alt"></i></a> - Opera 开发商出品新的浏览器。<img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="http://oryoki.io/" >Ōryōki<i class="fas fa-external-link-alt"></i></a> - 小的 web 浏览器。这是一个试验性的项目，目前正在开发中<img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="http://www.maxthon.cn/mac/" >傲游云浏览器<i class="fas fa-external-link-alt"></i></a> - 傲游云浏览器。<img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="https://browser.360.cn/ee/mac/index.html" >360极速浏览器<i class="fas fa-external-link-alt"></i></a> - 更好用，不将就。<img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
</ul>
<h2 id="翻译工具"><a href="#翻译工具" class="headerlink" title="翻译工具"></a>翻译工具</h2><ul>
<li><a class="link"   href="http://cidian.youdao.com/multi.html" >有道翻译<i class="fas fa-external-link-alt"></i></a> - 有道词典桌面版。<img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="http://cidian.dict.cn/mac.html" >辞海词典<i class="fas fa-external-link-alt"></i></a> - 学单词、背单词、辞海词典。<img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="http://www.eudic.net/eudic/mac_dictionary.aspx" >eudic<i class="fas fa-external-link-alt"></i></a> - 欧路词典词典。</li>
<li><a class="link"   href="https://app.grammarly.com/" >Grammarly<i class="fas fa-external-link-alt"></i></a> - 修正英语语法及用语</li>
<li><a class="link"   href="https://toolinbox.net/iText/" >iText<i class="fas fa-external-link-alt"></i></a> - 截图识别文字、翻译  <a href="https://itunes.apple.com/cn/app/id1314980676?mt=12"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-app-store.svg"
                      alt="App Store" title="苹果应用商店软件"
                ></a></li>
<li><a class="link"   href="http://www.itranslate.com/" >iTranslate<i class="fas fa-external-link-alt"></i></a> - 支持全世界超过 80 种语言发音和输出。<img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="https://ludwig.guru/" >Ludwig<i class="fas fa-external-link-alt"></i></a> - 语言搜索引擎，可帮助您用英语写得更好。</li>
<li><a class="link"   href="http://translate-tab.com/" >Translate Tab<i class="fas fa-external-link-alt"></i></a> - 菜单栏翻译插件，封装了谷歌翻译，支持自动识别语言。</li>
<li><a class="link"   href="https://github.com/ripperhe/Bob" >Bob<i class="fas fa-external-link-alt"></i></a> - 简小好用的翻译工具，支持语言自动检测，截图翻译。<a href="https://github.com/ripperhe/Bob"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                ></a></li>
<li><a class="link"   href="https://translatium.app/" >Translatium<i class="fas fa-external-link-alt"></i></a> - 在 100 多种语言之间翻译单词、短语和图像，并提供字典、音译和语音输出支持。 <a href="https://github.com/webcatalog/translatium-desktop"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                ></a> <a href="https://itunes.apple.com/us/app/translatium/id1547052291"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-app-store.svg"
                      alt="App Store" title="苹果应用商店软件"
                ></a></li>
</ul>
<h2 id="安全工具"><a href="#安全工具" class="headerlink" title="安全工具"></a>安全工具</h2><ul>
<li><a class="link"   href="https://cleanerone.trendmicro.com/antivirus-one-for-mac/?utm_source=github&utm_medium=referral&utm_campaign=githubproject" >Antivirus One<i class="fas fa-external-link-alt"></i></a> - 值得信赖的Mac安全保护工具：保护您的 Mac 免受病毒、恶意软件和广告软件的侵害。阻止潜在的 Web威胁并保护您的Mac免受漏洞影响。<img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                > <a href="https://apps.apple.com/cn/app/apple-store/id1068435535?pt=444218&ct=GitHub&mt=8"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-app-store.svg"
                      alt="App Store" title="苹果应用商店软件"
                ></a></li>
<li><a class="link"   href="https://objective-see.com/products/blockblock.html" >BlockBlock<i class="fas fa-external-link-alt"></i></a> - 恶意软件会自行安装，以确保它在重新引导时自动重新执行。</li>
<li><a class="link"   href="https://objective-see.com/products/dhs.html" >Dylib Hijack Scanner<i class="fas fa-external-link-alt"></i></a> - Dylib 劫机扫描仪或 DHS，是一个简单的实用程序，将扫描您的计算机的应用程序是易受 dylib 劫持或被劫持。</li>
<li><a class="link"   href="https://macpaw.com/encrypto" >Encrypto<i class="fas fa-external-link-alt"></i></a> - 免费加密工具，用于加密文件和文件夹</li>
<li><a class="link"   href="https://gpgtools.org/" >GPG Suite<i class="fas fa-external-link-alt"></i></a> - macOS平台的一站式GnuPG解决方案，提供命令行和GUI的加解密工具。开箱即用的<code>gpg-agent</code>密码缓存服务，还包括一个GUI的pinenry程序，支持与macOS原生钥匙串集成。<a href="https://gpgtools.org/"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                ></a> <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="https://objective-see.com/products/kextviewr.html" >KextViewer<i class="fas fa-external-link-alt"></i></a> - 查看所有在 OS 内核中加载的模块。</li>
<li><a class="link"   href="https://objective-see.com/products/knockknock.html" >KnockKnock<i class="fas fa-external-link-alt"></i></a> - “谁在那？” 查看Mac上持久安装的内容。</li>
<li><a class="link"   href="https://github.com/halo/LinkLiar" >LinkLiar<i class="fas fa-external-link-alt"></i></a> - 可以帮助你哄骗 Wi-Fi 和以太网接口的 MAC 地址。 <a href="https://github.com/halo/LinkLiar"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                ></a> <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="https://objective-see.com/products/lulu.html" >LuLu<i class="fas fa-external-link-alt"></i></a> - 免费的macOS防火墙，旨在阻止未经授权（传出）的网络流量。 <a href="https://www.tinc-vpn.org/git/browse?p=tinc"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                ></a> <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="https://www.murusfirewall.com/" >Murus<i class="fas fa-external-link-alt"></i></a> - 强大、灵活且易于理解使用的防火墙，官方提供多种不同的APP以提供不同功能的组合。最基础的免费版本<code>Murus Lite</code>是纯粹基于传入端口的防火墙，跟基于应用程序的macOS原生防火墙形成有效互补。<img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="https://objective-see.com/products/oversight.html" >OverSight<i class="fas fa-external-link-alt"></i></a> - 监控 Mac 的麦克风和网络摄像头，当内部麦克风被激活，或者当进程访问摄像头时提醒用户。</li>
<li><a class="link"   href="https://objective-see.com/products/ransomwhere.html" >RansomWhere?<i class="fas fa-external-link-alt"></i></a> - 通用 Ransomware 检测。</li>
<li><a class="link"   href="https://objective-see.com/products/taskexplorer.html" >TaskExplorer<i class="fas fa-external-link-alt"></i></a> - 使用 TaskExplorer 探索在 Mac 上运行的所有任务（进程）。</li>
<li><a class="link"   href="https://objective-see.com/products/whatsyoursign.html" >What’s Your Sign?<i class="fas fa-external-link-alt"></i></a> - 验证文件的加密签名可以推断其来源或可信度。</li>
</ul>
<h2 id="科-学-上网"><a href="#科-学-上网" class="headerlink" title="科-学-上网"></a>科-学-上网</h2><p><em>假设你是个勤奋的同学，你总有一天会强烈需要它们，上帝保佑他们吧。</em></p>
<ul>
<li><a class="link"   href="https://github.com/trailofbits/algo" >Algo<i class="fas fa-external-link-alt"></i></a> - 在云中设置个人 IPSEC VPN。 <a href="https://github.com/trailofbits/algo"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                ></a></li>
<li><a class="link"   href="https://github.com/yichengchen/clashX" >ClashX<i class="fas fa-external-link-alt"></i></a> - 基于 clash 的一款支持规则过滤的科-学-上网工具。 <a href="https://github.com/yichengchen/clashX"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                ></a><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="https://getlantern.org/" >Lantern<i class="fas fa-external-link-alt"></i></a> - 科-学-上网。<a href="https://github.com/getlantern/lantern"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                ></a> <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="http://shadowsocks.org/" >ShadowsocksX<i class="fas fa-external-link-alt"></i></a> - 一个快速的隧道代理，可以帮助你绕过防火墙。<a href="https://github.com/shadowsocks"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                ></a> <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="https://github.com/qiuyuzhou/ShadowsocksX-NG" >ShadowsocksX-NG<i class="fas fa-external-link-alt"></i></a> - 一款 ShadowsocksX 客户端软件。<a href="https://github.com/qiuyuzhou/ShadowsocksX-NG"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                ></a> <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="https://nssurge.com/" >Surge<i class="fas fa-external-link-alt"></i></a> - 科-学-上网。</li>
<li><a class="link"   href="https://www.shimovpn.com/" >Shimo<i class="fas fa-external-link-alt"></i></a> - 连接大量 VPN 的应用</li>
<li><a class="link"   href="https://www.tunnelbear.com/" >Tunnelbear<i class="fas fa-external-link-alt"></i></a> - 简单的私人 VPN。 <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="https://tunnelblick.net/downloads.html" >Tunnelblick<i class="fas fa-external-link-alt"></i></a> - OpenVPN 的免费软件。<img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="https://www.tinc-vpn.org/" >tinc<i class="fas fa-external-link-alt"></i></a> - VPN 软件. <a href="https://www.tinc-vpn.org/git/browse?p=tinc"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                ></a> <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="https://www.v2ray.com/" >V2Ray<i class="fas fa-external-link-alt"></i></a> - 原生支持 Socks、HTTP、Shadowsocks、VMess 等协议。</li>
</ul>
<h2 id="其它实用工具"><a href="#其它实用工具" class="headerlink" title="其它实用工具"></a>其它实用工具</h2><ul>
<li><a class="link"   href="https://github.com/fancymax/12306ForMac" >12306ForMac<i class="fas fa-external-link-alt"></i></a> - Mac 版 12306 订票&#x2F;检票助手。<a href="https://github.com/fancymax/12306ForMac"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                ></a> <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="https://1440app.com/" >1440 Minutes Left Today<i class="fas fa-external-link-alt"></i></a> - 在菜单栏中，直接记录到一天结束还剩多少分钟。<img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                > <a href="https://apps.apple.com/cn/app/1440/id1483764819"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-app-store.svg"
                      alt="App Store" title="苹果应用商店软件"
                ></a></li>
<li><a class="link"   href="http://www.airserver.com/Download" >AirServer<i class="fas fa-external-link-alt"></i></a> - 将手机投影到电脑上。</li>
<li><a class="link"   href="https://www.alfredapp.com/" >Alfred<i class="fas fa-external-link-alt"></i></a> - 效率神器。 <a href="https://github.com/learn-anything/alfred-workflows#readme"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-awesome.svg"
                      alt="Awesome List" title="Awesome List"
                ></a></li>
<li><a class="link"   href="https://www.raycast.com/" >Raycast<i class="fas fa-external-link-alt"></i></a> - 类似Alfred功能，重要的是免费。</li>
<li><a class="link"   href="https://getbitbar.com/" >BitBar<i class="fas fa-external-link-alt"></i></a> - 支持使用各种语言将信息展示到Mac OS的菜单栏。<a href="https://github.com/matryer/bitbar"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                ></a> <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="https://macitbetter.com/" >BetterZip<i class="fas fa-external-link-alt"></i></a> - 压缩解压缩工具支持格式 ZIP、TAR、TGZ、TBZ、TXZ (new)、7-ZIP、RAR。</li>
<li><a class="link"   href="https://folivora.ai/" >BetterTouchTool<i class="fas fa-external-link-alt"></i></a> - 代替默认的系统操作方式（组合键、修饰键、手势等）。</li>
<li><a class="link"   href="http://www.controlplaneapp.com/" >ControlPlane<i class="fas fa-external-link-alt"></i></a> - 自定义 Mac 情景模式。某些场景让 Mac 自动静音或是自动打开 Mail 客户端等等。<a href="https://github.com/dustinrue/ControlPlane"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                ></a> <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="https://www.mediaatelier.com/CheatSheet/" >CheatSheet<i class="fas fa-external-link-alt"></i></a> - CheatSheet 是一款 Mac 上的非常实用的快捷键快速提醒工具。 <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="https://daisydiskapp.com/" >DaisyDisk<i class="fas fa-external-link-alt"></i></a> - 磁盘空间使用扫描工具。</li>
<li><a class="link"   href="https://github.com/greenboxal/dns-heaven" >DNS Heaven<i class="fas fa-external-link-alt"></i></a> - 可以令基于 glibc 的 macOS 应用直接使用原生栈来解析 DNS，主要适用于 VPN。 <a href="https://github.com/greenboxal/dns-heaven"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                ></a> <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="http://ezip.awehunt.com/" >eZip<i class="fas fa-external-link-alt"></i></a> - 界面简洁，功能完善，支持主流的多种压缩格式。支持 Mojave 深色模式、QuickLook预览、拖拽解压。 <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="https://justgetflux.com/" >f.lux<i class="fas fa-external-link-alt"></i></a> - 自动调整您的电脑屏幕，以匹配亮度。<img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="https://lunar.fyi/" >Lunar<i class="fas fa-external-link-alt"></i></a> - 外接显示器亮度&#x2F;对比度调节工具，从此告别物理按键。<a href="https://github.com/alin23/Lunar"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                ></a> <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="http://www.hammerspoon.org/" >Hammerspoon<i class="fas fa-external-link-alt"></i></a> - 功能强大的自动化工具，Lua 脚本驱动，支持窗口管理。<a href="https://github.com/Hammerspoon/hammerspoon"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                ></a> <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="http://www.httrack.com/" >HTTrack<i class="fas fa-external-link-alt"></i></a> - 可以下载整个网站和离线浏览。<img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="https://github.com/niw/HapticKey/releases" >HapticKey<i class="fas fa-external-link-alt"></i></a> - Touch Bar 触觉反馈。 <a href="https://github.com/niw/HapticKey"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                ></a> <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="https://sourceforge.net/projects/hwsensors" >HWSensors<i class="fas fa-external-link-alt"></i></a> - 自带FakeSMC的黑苹果硬件状态监控插件。 <a href="https://bitbucket.org/kozlek/hwsensors/overview"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                ></a> <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="https://zhengying.github.io/hungrymark" >Hungrymark<i class="fas fa-external-link-alt"></i></a> - 非常有用的收藏夹应用，收藏文件，文件夹，网址，快速的通过状态栏菜单访问这些书签。  <a href="https://apps.apple.com/cn/app/hungrymark/id1482778901?l=en&mt=12"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-app-store.svg"
                      alt="App Store" title="苹果应用商店软件"
                ></a></li>
<li><a class="link"   href="https://bjango.com/mac/istatmenus/" >iStat pro<i class="fas fa-external-link-alt"></i></a> - 免费的 Mac OS 电脑硬件信息检测软件。<img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="https://www.mowglii.com/itsycal/" >Itsycal<i class="fas fa-external-link-alt"></i></a> - 一款简洁实用的开源日历工具。<a href="https://github.com/sfsam/itsycal"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                ></a> <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="https://pqrs.org/osx/karabiner/" >Karabiner<i class="fas fa-external-link-alt"></i></a> - 一个强大的和稳定的 OS X 的键盘定制。<a href="https://github.com/tekezo/Karabiner"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                ></a> <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="http://www.keyboardmaestro.com/" >Keyboard Maestro<i class="fas fa-external-link-alt"></i></a> - 根据键盘，菜单，位置，添加的设备等触发器自动执行日常操作。</li>
<li><a class="link"   href="http://keytty.com/" >Keytty<i class="fas fa-external-link-alt"></i></a> - 让你通过键盘使用鼠标。</li>
<li><a class="link"   href="https://www.keka.io/zh-cn/" >Keka<i class="fas fa-external-link-alt"></i></a> - 一个免费的 macOS 文件解压缩程序。 <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                > <a href="https://itunes.apple.com/app/keka/id470158793"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-app-store.svg"
                      alt="App Store" title="苹果应用商店软件"
                ></a></li>
<li><a class="link"   href="https://sindresorhus.com/lungo" >Lungo<i class="fas fa-external-link-alt"></i></a> - 防止Mac进入睡眠状态。 <a href="https://apps.apple.com/cn/app/lungo/id1263070803"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-app-store.svg"
                      alt="App Store" title="苹果应用商店软件"
                ></a></li>
<li><a class="link"   href="http://memo-app.net/" >Memo<i class="fas fa-external-link-alt"></i></a> - 给你的便笺加个密。<img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                > <a href="https://itunes.apple.com/app/id1212409035"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-app-store.svg"
                      alt="App Store" title="苹果应用商店软件"
                ></a></li>
<li><a class="link"   href="https://manta.life/" >Manta<i class="fas fa-external-link-alt"></i></a> - 灵活的发票桌面应用程序，漂亮和可定制模板。<a href="https://github.com/hql287/Manta"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                ></a> <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="https://mos.caldis.me/" >Mos<i class="fas fa-external-link-alt"></i></a> - 让你的鼠标滚轮丝滑如触控板。<a href="https://github.com/Caldis/Mos"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                ></a> <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="https://github.com/kaunteya/MacCacheCleaner" >Mac Cache Cleaner<i class="fas fa-external-link-alt"></i></a> - 缓存清理工具 <a href="https://github.com/kaunteya/MacCacheCleaner"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                ></a> <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="http://numi.io/" >Numi<i class="fas fa-external-link-alt"></i></a> - 漂亮的计算器应用。<img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="https://www.macupdate.com/app/mac/37991/nosleep" >NoSleep<i class="fas fa-external-link-alt"></i></a> - 合上盖子不休眠，可根据是否连接电源单独设置。</li>
<li><a class="link"   href="https://www.omnigroup.com/more" >OmniDiskSweeper<i class="fas fa-external-link-alt"></i></a> - 磁盘空间使用扫描工具。 <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="https://www.omnigroup.com/omniplan/" >OmniPlan<i class="fas fa-external-link-alt"></i></a> - 项目管理软件。</li>
<li><a class="link"   href="https://github.com/JulianKahnert/PDF-Archiver" >PDF Archiver<i class="fas fa-external-link-alt"></i></a> - 一个用于标记和归档任务的好工具。<a href="https://github.com/JulianKahnert/PDF-Archiver"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                ></a> <a href="https://itunes.apple.com/app/pdf-archivar/id1352719750"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-app-store.svg"
                      alt="App Store" title="苹果应用商店软件"
                ></a></li>
<li><a class="link"   href="https://qotoqot.com/qbserve/" >Qbserve<i class="fas fa-external-link-alt"></i></a> - 观察你如何度过你的时间。</li>
<li><a class="link"   href="https://www.rescuetime.com/" >RescueTime<i class="fas fa-external-link-alt"></i></a> - 个人分析服务，向您展示如何花时间和提供工具来帮助您提高工作效率。</li>
<li><a class="link"   href="http://indragie.com/snap" >Snap<i class="fas fa-external-link-alt"></i></a> - 一款可以给 Dock 上的程序添加快捷键的小工具。 <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                > <a href="https://itunes.apple.com/cn/app/id418073146"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-app-store.svg"
                      alt="App Store" title="苹果应用商店软件"
                ></a></li>
<li><a class="link"   href="https://github.com/jamieweavis/streaker" >Streaker<i class="fas fa-external-link-alt"></i></a> - GitHub贡献和统计跟踪菜单栏应用程序。 <a href="https://github.com/jamieweavis/streaker"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                > <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></a></li>
<li><a class="link"   href="https://theunarchiver.com/" >The Unarchiver<i class="fas fa-external-link-alt"></i></a> - 解压许多不同种类的归档压缩文件。 <a href="https://bitbucket.org/kosovan/theunarchiver"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                ></a> <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="https://timingapp.com/" >Timing<i class="fas fa-external-link-alt"></i></a> - Mac 的自动时间和生产力跟踪。</li>
<li><a class="link"   href="https://cleanerone.trendmicro.com/unarchiver-one/?utm_source=github&utm_medium=referral&utm_campaign=githubproject" >Unarchive One<i class="fas fa-external-link-alt"></i></a> - 快速解压单个多个不同种类的压缩文件&#x2F;压缩文件到各类常见压缩格式。 <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                > <a href="https://apps.apple.com/cn/app/apple-store/id1127253508?pt=444218&ct=GitHub&mt=8"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-app-store.svg"
                      alt="App Store" title="苹果应用商店软件"
                ></a></li>
<li><a class="link"   href="http://scripts.sil.org/ukelele" >Ukelele<i class="fas fa-external-link-alt"></i></a> - Unicode 键盘布局编辑器。</li>
<li><a class="link"   href="https://github.com/insidegui/WWDC" >WWDC<i class="fas fa-external-link-alt"></i></a> - Mac OS 的非官方的 WWDC APP。<a href="https://github.com/insidegui/WWDC"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                ></a> <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="http://xscopeapp.com/" >xScope<i class="fas fa-external-link-alt"></i></a> - 测量、检查和测试屏幕上的图形和布局的工具。搜索你的苹果和网络，快速打开应用程序。</li>
<li><a class="link"   href="https://yasuo.360.cn/mac/index.html" >360压缩<i class="fas fa-external-link-alt"></i></a> - 简单易用，免费无广告的压缩工具。<img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="https://apps.apple.com/cn/app/%E8%B6%85%E7%BA%A7%E5%8F%B3%E9%94%AE-irightmouse/id1497428978?mt=12" >超级右键<i class="fas fa-external-link-alt"></i></a> - 一款finder右键菜单扩展，包括了大量便捷工具比如新建文件，直接打开终端等 [<img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-app-store.svg"
                      alt="App Store" title="苹果应用商店软件"
                >]</li>
</ul>
<h3 id="剪贴板工具"><a href="#剪贴板工具" class="headerlink" title="剪贴板工具"></a>剪贴板工具</h3><ul>
<li><a class="link"   href="http://www.clipmenu.com/" >ClipMenu<i class="fas fa-external-link-alt"></i></a> - 一个剪贴板操作的管理器。<a href="https://github.com/naotaka/ClipMenu"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                ></a> <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="https://clipy-app.com/" >Clipy<i class="fas fa-external-link-alt"></i></a> - 基于 ClipMenu 继续开发的强大的剪切板管理器。 <a href="https://github.com/Clipy/Clipy"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                ></a> <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="https://hluk.github.io/CopyQ" >CopyQ<i class="fas fa-external-link-alt"></i></a> - 高级功能剪贴板管理工具。 <a href="https://github.com/hluk/CopyQ"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                ></a> <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="https://github.com/TermiT/Flycut" >Flycut<i class="fas fa-external-link-alt"></i></a> - 面向开发者的干净简单的剪贴板管理器。 <a href="https://github.com/TermiT/Flycut"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                ></a> <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="https://en.toolinbox.net/iPaste" >iPaste<i class="fas fa-external-link-alt"></i></a> - 轻巧高效的剪贴板工具。 <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                > <a href="https://itunes.apple.com/app/id1056935452?ls=1&mt=12&at=1000lv4R&ct=iPaste_me"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-app-store.svg"
                      alt="App Store" title="苹果应用商店软件"
                ></a></li>
<li><a class="link"   href="https://github.com/p0deje/Maccy" >Maccy<i class="fas fa-external-link-alt"></i></a> - 开源于GitHub但不免费的剪贴板管理工具，应用商店中下载需要付费。 <a href="https://github.com/p0deje/Maccy"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                ></a> <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="http://pasteapp.me/" >Paste<i class="fas fa-external-link-alt"></i></a> - 智能剪贴板历史片段管理。 <a href="https://itunes.apple.com/cn/app/paste-clipboard-history-manager/id967805235"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-app-store.svg"
                      alt="App Store" title="苹果应用商店软件"
                ></a></li>
<li><a class="link"   href="https://tapbots.com/pastebot/" >PasteBot<i class="fas fa-external-link-alt"></i></a> - 强大的剪贴板管理器。 <a href="https://itunes.apple.com/cn/app/pastebot/id1179623856"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-app-store.svg"
                      alt="App Store" title="苹果应用商店软件"
                ></a></li>
<li><a class="link"   href="https://yippy.mattdavo.com/" >Yippy<i class="fas fa-external-link-alt"></i></a> - 具有用户友好界面的剪贴板管理器。 <a href="https://github.com/mattDavo/Yippy"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                ></a> <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
</ul>
<h3 id="菜单栏工具"><a href="#菜单栏工具" class="headerlink" title="菜单栏工具"></a>菜单栏工具</h3><ul>
<li><a class="link"   href="https://github.com/beardedspice/beardedspice" >BeardedSpice<i class="fas fa-external-link-alt"></i></a> - 允许您使用 Mac 键盘上的媒体键控制基于Web的媒体播放器（SoundCloud，YouTube 等）和一些本机应用程序。 <a href="https://github.com/beardedspice/beardedspice"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                ></a> <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="https://www.macbartender.com/" >Bartender<i class="fas fa-external-link-alt"></i></a> - 组织或隐藏Mac上的菜单栏图标。</li>
<li><a class="link"   href="https://getbitbar.com/" >BitBar<i class="fas fa-external-link-alt"></i></a> - 支持使用各种语言将信息展示到 Mac OS 的菜单栏。<a href="https://github.com/matryer/bitbar"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                ></a> <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="https://ff.1zilc.top/" >Fishing Funds<i class="fas fa-external-link-alt"></i></a> - 基金，大盘，股票状态栏实时显示。 <a href="https://github.com/1zilc/fishing-funds"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                ></a> <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="https://github.com/Moneypulation/iGlance" >iGlance<i class="fas fa-external-link-alt"></i></a> - 状态栏的系统监视器。 <a href="https://github.com/Moneypulation/iGlance"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                ></a> <a href="https://github.com/Moneypulation/iGlance"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></a></li>
<li><a class="link"   href="https://www.mowglii.com/itsycal/" >Itsycal<i class="fas fa-external-link-alt"></i></a> - 一款简洁实用的开源日历工具。<a href="https://github.com/sfsam/itsycal"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                ></a> <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="http://vanilla.matthewpalmer.net/" >Vanilla<i class="fas fa-external-link-alt"></i></a> - 隐藏系统菜单栏。 <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="https://github.com/dwarvesf/hidden" >HiddenBar<i class="fas fa-external-link-alt"></i></a> - 一个超轻MacOS实用工具，帮助隐藏菜单栏图标。。 <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                > <a href="https://github.com/dwarvesf/hidden"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                ></a> <a href="https://apps.apple.com/cn/app/hidden-bar/id1452453066?mt=12"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-app-store.svg"
                      alt="App Store" title="苹果应用商店软件"
                ></a></li>
<li><a class="link"   href="https://menubarx.app/" >MenubarX<i class="fas fa-external-link-alt"></i></a> - 一款强大的 Mac 菜单栏浏览器，可以在菜单栏固定任何网页，就像原生 App 一样使用。 <a href="https://apps.apple.com/us/app/menubarx/id1575588022"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-app-store.svg"
                      alt="App Store" title="苹果应用商店软件"
                ></a> <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
</ul>
<h3 id="待办事项工具"><a href="#待办事项工具" class="headerlink" title="待办事项工具"></a>待办事项工具</h3><ul>
<li><a class="link"   href="http://www.2doapp.com/" >2Do<i class="fas fa-external-link-alt"></i></a> - 比较好的 TODO 应用程序。</li>
<li><a class="link"   href="http://www.shauninman.com/archive/2016/10/20/day_o_2_mac_menu_bar_clock" >Day-O 2<i class="fas fa-external-link-alt"></i></a> - 菜单日历更换内置日历。<img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="https://flexibits.com/fantastical" >Fantastical<i class="fas fa-external-link-alt"></i></a> - 日历应用程序，你将管理好生活。</li>
<li><a class="link"   href="https://masterbuilders.io/" >Focus<i class="fas fa-external-link-alt"></i></a> - 一个漂亮的番茄工作法为基础的时间管理工具。 <a href="https://itunes.apple.com/cn/app/focus-productivity-timer/id777233759?mt=12"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-app-store.svg"
                      alt="App Store" title="苹果应用商店软件"
                ></a></li>
<li><a class="link"   href="https://todo.microsoft.com/" >Microsoft To-Do<i class="fas fa-external-link-alt"></i></a> - 任务管理工具微软出品。 <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                > <a href="https://apps.apple.com/cn/app/microsoft-to-do/id1274495053?mt=12"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-app-store.svg"
                      alt="App Store" title="苹果应用商店软件"
                ></a></li>
<li><a class="link"   href="https://nozbe.com/" >Nozbe<i class="fas fa-external-link-alt"></i></a> - 适用于个人和团队的强大GTD应用程序，支持每个Apple设备。<a href="https://itunes.apple.com/cn/app/nozbe-tasks-projects-team/id508957583?mt=12"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-app-store.svg"
                      alt="App Store" title="苹果应用商店软件"
                ></a></li>
<li><a class="link"   href="https://www.omnigroup.com/omnifocus/" >OmniFocus<i class="fas fa-external-link-alt"></i></a> - 由 OmniGroups 制作的 Nice GTD 应用程序。</li>
<li><a class="link"   href="https://super-productivity.com/" >Super Productivity<i class="fas fa-external-link-alt"></i></a> - 集成了Timeboxing和时间跟踪功能的跨平台任务管理应用。 <a href="https://github.com/johannesjo/super-productivity"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                ></a> <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                > <a href="https://apps.apple.com/cn/app/super-productivity/id1482572463?mt=12"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-app-store.svg"
                      alt="App Store" title="苹果应用商店软件"
                ></a></li>
<li><a class="link"   href="https://www.taskade.com/" >Taskade<i class="fas fa-external-link-alt"></i></a> - 实时协作编辑器，协作简历任务管理器，大纲和笔记。</li>
<li><a class="link"   href="https://www.taskpaper.com/" >TaskPaper<i class="fas fa-external-link-alt"></i></a> - 漂亮的纯文本任务列表。</li>
<li><a class="link"   href="https://culturedcode.com/things/" >Things<i class="fas fa-external-link-alt"></i></a> - 令人愉快且易于使用的任务管理器。</li>
<li><a class="link"   href="https://todoist.com/mac" >Todoist<i class="fas fa-external-link-alt"></i></a> - 跨平台的任务管理器与移动应用程序。</li>
<li><a class="link"   href="https://www.wunderlist.com/?ncr=1" >Wunderlist<i class="fas fa-external-link-alt"></i></a> - 奇妙清单跨平台的任务管理器与移动应用程序。<img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="https://www.dida365.com/" >滴答清单<i class="fas fa-external-link-alt"></i></a> - 轻便且强大的跨平台任务管理应用。<img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                > <a href="https://itunes.apple.com/cn/app/id966085870"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-app-store.svg"
                      alt="App Store" title="苹果应用商店软件"
                ></a></li>
</ul>
<h3 id="系统相关工具"><a href="#系统相关工具" class="headerlink" title="系统相关工具"></a>系统相关工具</h3><ul>
<li><a class="link"   href="https://apphousekitchen.com/" >AlDente<i class="fas fa-external-link-alt"></i></a> - 充电保护软件，延长 MacBook 电池寿命。 <a href="https://github.com/davidwernhart/AlDente"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                ></a></li>
<li><a class="link"   href="https://itunes.apple.com/cn/app/amphetamine/id937984704" >Amphetamine<i class="fas fa-external-link-alt"></i></a> - 覆盖您的节能设置并让您的Mac保持唤醒状态。 <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                > <a href="https://itunes.apple.com/cn/app/amphetamine/id937984704"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-app-store.svg"
                      alt="App Store" title="苹果应用商店软件"
                ></a></li>
<li><a class="link"   href="https://cleanerone.trendmicro.com/ad-block-one-for-mac/?utm_source=github&utm_medium=referral&utm_campaign=githubproject" >AdBlock One<i class="fas fa-external-link-alt"></i></a> - 适用于MacOS&#x2F;iOS的免费广告拦截器 停止在Safari中看到烦人的广告。更快地打开网站。更安全地浏览网页。<img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                > <a href="https://apps.apple.com/cn/app/apple-store/id1491889901?pt=444218&ct=GitHub&mt=8"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-app-store.svg"
                      alt="App Store" title="苹果应用商店软件"
                ></a></li>
<li><a class="link"   href="http://freemacsoft.net/appcleaner/" >AppCleaner<i class="fas fa-external-link-alt"></i></a> - 一个小应用程序，让你彻底卸载不需要的应用程序。<img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="http://onnati.net/apptrap/" >AppTrap<i class="fas fa-external-link-alt"></i></a> - 删除APP的同时移除文件。 <a href="https://github.com/kvijayan/AppTrap"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                ></a> <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="https://github.com/toy/blueutil" >blueutil<i class="fas fa-external-link-alt"></i></a> - 命令行蓝牙控制工具，可以配合<a class="link"   href="https://www.bernhard-baehr.de/" >SleepWatcher<i class="fas fa-external-link-alt"></i></a>实现MacBook合盖瞬间关闭蓝牙，开盖自动打开蓝牙。这在使用蓝牙耳机时尤其有用。<a href="https://github.com/toy/blueutil"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                ></a> <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="https://apps.apple.com/cn/app/apple-store/id1133028347?pt=444218&ct=GitHub&mt=8" >Cleaner One<i class="fas fa-external-link-alt"></i></a> - 多合一磁盘清理管理器：清理您的 Mac 并优化其性能，立即运行快速扫描以验证什么占用了您的存储空间。<img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                > <a href="https://apps.apple.com/cn/app/apple-store/id1133028347?pt=444218&ct=GitHub&mt=8"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-app-store.svg"
                      alt="App Store" title="苹果应用商店软件"
                ></a></li>
<li><a class="link"   href="https://github.com/waylybaye/XcodeCleaner" >Cleaner for Xcode<i class="fas fa-external-link-alt"></i></a> - Xcode 的清理工具，清理几十G应该不是问题。<a href="https://github.com/waylybaye/XcodeCleaner"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                ></a> <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="https://coolantformac.com/" >Coolant<i class="fas fa-external-link-alt"></i></a> - 这是能让你知道什么应用程序造成你 CPU100% 让 Mac 电脑过热电池耗尽的菜单应用程序。</li>
<li><a class="link"   href="https://www.coconut-flavour.com/coconutbattery/" >coconutBattery<i class="fas fa-external-link-alt"></i></a> - 显示Mac中有关电池的实时信息。</li>
<li><a class="link"   href="https://daisydiskapp.com/" >DaisyDisk<i class="fas fa-external-link-alt"></i></a> - 磁盘空间使用扫描工具。</li>
<li><a class="link"   href="http://fruitjuiceapp.com/" >FruitJuice<i class="fas fa-external-link-alt"></i></a> - 会让你知道每天保持不插电的时间，以保持你的电池健康。<a href="https://itunes.apple.com/cn/app/fruitjuice/id671736912"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-app-store.svg"
                      alt="App Store" title="苹果应用商店软件"
                ></a></li>
<li><a class="link"   href="https://gfx.io/" >gfxCardStatus<i class="fas fa-external-link-alt"></i></a> - 控制Mac独立显卡与集成显卡之间的切换。<img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="http://www.smartisan.com/apps/handshaker" >HandShaker<i class="fas fa-external-link-alt"></i></a> -  Mac 电脑上也可以方便自如地管理您在 Android 手机中的内容。 <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="http://zythum.sinaapp.com/youkuhtml5playerbookmark/" >HTML5 Player<i class="fas fa-external-link-alt"></i></a> - Chrome 插件解决中国视频网站播放视频电脑发热的情况。</li>
<li><a class="link"   href="https://bjango.com/mac/istatmenus/" >iStat Menus<i class="fas fa-external-link-alt"></i></a> - 菜单栏上的高级 Mac 系统监视器。</li>
<li><a class="link"   href="https://github.com/Chris911/iStats" >iStats<i class="fas fa-external-link-alt"></i></a> - iStats 是一个可以让你快速查看电脑 CPU 温度，磁盘转速和电池等信息的命令行工具。<a href="https://github.com/Chris911/iStats"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                > <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></a></li>
<li><a class="link"   href="https://github.com/brianmichel/Juice" >Juice<i class="fas fa-external-link-alt"></i></a> - 让电池显示更有趣 <a href="https://github.com/brianmichel/Juice"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                ></a> <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="https://github.com/newmarcel/KeepingYouAwake" >KeepingYouAwake<i class="fas fa-external-link-alt"></i></a> - 替代咖啡因，更好地支持Mac中的暗模式。 <a href="https://github.com/newmarcel/KeepingYouAwake"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                ></a></li>
<li><a class="link"   href="http://www.monityapp.com/" >Monity<i class="fas fa-external-link-alt"></i></a> - 帮助用户实时监控系统的一款非常漂亮的软件。</li>
<li><a class="link"   href="http://enjoygineering.com/mounty/" >Mounty<i class="fas fa-external-link-alt"></i></a> - NTFS 分区读写组件。<img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="https://nitroshare.net/" >NitroShare<i class="fas fa-external-link-alt"></i></a> - 跨平台网络文件传输应用程序。 <a href="https://github.com/nitroshare/nitroshare-desktop"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                ></a> <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="http://www.titanium.free.fr/" >OnyX<i class="fas fa-external-link-alt"></i></a> - 多功能实用工具来验证磁盘和文件，运行清洁和系统维护任务，配置隐藏选项等。<img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="https://www.omnigroup.com/more" >OmniDiskSweeper<i class="fas fa-external-link-alt"></i></a> - 磁盘空间使用扫描工具。 <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="https://www.paragon-software.com/home/ntfs-mac/" >Paragon NTFS<i class="fas fa-external-link-alt"></i></a> - 在 Mac OS X 中完全读写、修改、访问 Windows NTFS 硬盘、U 盘等外接设备的文件。</li>
<li><a class="link"   href="https://www.bernhard-baehr.de/" >SleepWatcher<i class="fas fa-external-link-alt"></i></a> - 可以在MacBook合盖和开盖时执行自定义脚本，比如开关蓝牙等。可以通过<code>homebrew</code>安装。<a href="https://www.bernhard-baehr.de/"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                ></a> <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="https://github.com/hholtmann/smcFanControl" >smcFanControl<i class="fas fa-external-link-alt"></i></a> - 短小精悍的风扇转速温控软件，可以预设两档风扇最低转速，方便在不同工作负载间人工强制切换。因为只是限制风扇最低速度，所以系统原生温控调速不会完全失效。<a href="https://github.com/hholtmann/smcFanControl"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                ></a> <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="https://codinn.com/products/ssh-tunnel/" >SSH Tunnel<i class="fas fa-external-link-alt"></i></a> - 管理你的 SSH。</li>
<li><a class="link"   href="https://www.tunabellysoftware.com/tgpro/" >TG Pro<i class="fas fa-external-link-alt"></i></a> - 温度监控，风扇控制和硬件诊断，帮助您保持 Mac的 凉爽和健康。</li>
<li><a class="link"   href="http://www.tuxera.com/products/tuxera-ntfs-for-mac/" >Tuxera NTFS<i class="fas fa-external-link-alt"></i></a> - Mac 上的 NTFS 文件系统驱动。</li>
<li><a class="link"   href="https://lemon.qq.com/" >腾讯柠檬清理<i class="fas fa-external-link-alt"></i></a> - 一款免费的Mac系统清理软件，替代原来的Mac电脑管家，腾讯出品。</li>
</ul>
<h3 id="窗口管理"><a href="#窗口管理" class="headerlink" title="窗口管理"></a>窗口管理</h3><ul>
<li><a class="link"   href="http://ianyh.com/amethyst/" >Amethyst<i class="fas fa-external-link-alt"></i></a> - 窗口管理器（自动保持窗口大小的窗口）。<a href="https://github.com/ianyh/Amethyst"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                ></a> <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="https://folivora.ai/bettersnaptool/" >BetterSnapTool<i class="fas fa-external-link-alt"></i></a> - 窗口管理工具，可通过快捷键或窗口拖动快速实现分屏。  <a href="https://itunes.apple.com/cn/app/dashlane-password-manager/id552383089"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-app-store.svg"
                      alt="App Store" title="苹果应用商店软件"
                ></a></li>
<li><a class="link"   href="https://contexts.co/" >Contexts<i class="fas fa-external-link-alt"></i></a>- 提供比 Mac 原生 Dock 更强大功能尤其在你有多个屏幕的时候,它可以帮助你更快捷切换。</li>
<li><a class="link"   href="http://mizage.com/divvy/" >Divvy<i class="fas fa-external-link-alt"></i></a> - 凭借其惊人的 Divvy Grid 系统，窗口管理处于最佳状态。</li>
<li><a class="link"   href="https://mightymac.app/intellidock/" >IntelliDock<i class="fas fa-external-link-alt"></i></a> - 自动隐藏 Dock。</li>
<li><a class="link"   href="http://manytricks.com/moom/" >Moom<i class="fas fa-external-link-alt"></i></a> - 多任务多窗口的软件。</li>
<li><a class="link"   href="http://magnet.crowdcafe.com/" >Magnet<i class="fas fa-external-link-alt"></i></a> - 一个窗口管理器，可以保持工作空间的组织。 <a href="https://itunes.apple.com/cn/app/id441258766"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-app-store.svg"
                      alt="App Store" title="苹果应用商店软件"
                ></a></li>
<li><a class="link"   href="https://lowtechguys.com/rcmd/" >rcmd<i class="fas fa-external-link-alt"></i></a> - 使用 <kbd>⌘ Right Command</kbd> 键根据名称切换应用程序。 <a href="https://apps.apple.com/cn/app/rcmd-app-switcher/id1596283165"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-app-store.svg"
                      alt="App Store" title="苹果应用商店软件"
                ></a></li>
<li><a class="link"   href="https://github.com/fikovnik/ShiftIt" >ShiftIt<i class="fas fa-external-link-alt"></i></a> - 窗口位置和大小管理软件。 <a href="https://github.com/fikovnik/ShiftIt"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                ></a> <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="https://github.com/jigish/slate" >Slate<i class="fas fa-external-link-alt"></i></a> - 窗口管理器，可用 JavaScript 写配置。<a href="https://github.com/jigish/slate"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                ></a> <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="http://www.irradiatedsoftware.com/sizeup/" >SizeUp<i class="fas fa-external-link-alt"></i></a> - 强大的，以键盘为中心的窗口管理。</li>
<li><a class="link"   href="https://www.spectacleapp.com/" >Spectacle<i class="fas fa-external-link-alt"></i></a> - 简单的移动和调整大小的窗口，和可定制的键盘快捷键。 <a href="https://github.com/eczarny/spectacle"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                ></a> <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="http://totalspaces.binaryage.com/" >Total Spaces<i class="fas fa-external-link-alt"></i></a> - 像 ubuntu 一样提供窗口管理，为工作区创建热键，使您可以轻松移动。</li>
</ul>
<h3 id="密码管理"><a href="#密码管理" class="headerlink" title="密码管理"></a>密码管理</h3><ul>
<li><a class="link"   href="https://1password.com/" >1password<i class="fas fa-external-link-alt"></i></a> - 跨平台帐号密码管理软件。</li>
<li><a class="link"   href="https://authy.com/" >Authy<i class="fas fa-external-link-alt"></i></a> - 双因素身份验证令牌管理器，可在您的设备上进行备份和同步。 <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="https://bitwarden.com/" >Bitwarden<i class="fas fa-external-link-alt"></i></a> - 适用于Mac OS，iOS和浏览器的开源密码管理工具。 <a href="https://github.com/bitwarden"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                ></a> <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="https://buttercup.pw/" >Buttercup<i class="fas fa-external-link-alt"></i></a> - 跨平台密码管理器 <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                > <a href="https://github.com/buttercup/buttercup-desktop"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                ></a></li>
<li><a class="link"   href="https://www.dashlane.com/" >Dashlane<i class="fas fa-external-link-alt"></i></a> - 基于云的密码管理器，拥有屡获殊荣的设计。 <a href="https://itunes.apple.com/cn/app/dashlane-password-manager/id552383089"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-app-store.svg"
                      alt="App Store" title="苹果应用商店软件"
                ></a></li>
<li><a class="link"   href="https://www.enpass.io/" >Enpass<i class="fas fa-external-link-alt"></i></a> - 具有云集成的跨平台密码管理工具。 <a href="https://itunes.apple.com/cn/app/enpass-password-manager/id732710998?mt=12"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-app-store.svg"
                      alt="App Store" title="苹果应用商店软件"
                ></a></li>
<li><a class="link"   href="https://keeweb.info/" >Keeweb<i class="fas fa-external-link-alt"></i></a> - 与 KeePass 兼容的免费跨平台密码管理器。 <a href="https://github.com/keeweb/keeweb"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                ></a> <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="https://www.lastpass.com/" >LastPass<i class="fas fa-external-link-alt"></i></a> - 密码管理器和安全的数字笔记。</li>
<li><a class="link"   href="https://macpass.github.io/" >MacPass<i class="fas fa-external-link-alt"></i></a> - 密码管理器。<a href="https://github.com/mstarke/MacPass"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                ></a> <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="https://www.remembear.com/" >RememBear<i class="fas fa-external-link-alt"></i></a> - 治愈系密码管理工具。 <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
</ul>
<h3 id="Finder"><a href="#Finder" class="headerlink" title="Finder"></a>Finder</h3><ul>
<li><a class="link"   href="https://fman.io/" >fman<i class="fas fa-external-link-alt"></i></a> - 先进的双窗口文件管理器，拥有很多特性。</li>
<li><a class="link"   href="http://binarynights.com/forklift/" >ForkLift<i class="fas fa-external-link-alt"></i></a> - 先进的双窗口文件管理器和文件传输客户端。</li>
<li><a class="link"   href="https://www.noodlesoft.com/" >Hazel<i class="fas fa-external-link-alt"></i></a> - 设计精美的自动文件管理软件。</li>
<li><a class="link"   href="https://github.com/vanshg/MacAssistant/releases" >MacAssistant<i class="fas fa-external-link-alt"></i></a> - Google 助手 <a href="https://github.com/vanshg/MacAssistant"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                ></a> <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="http://www.cocoatech.com/pathfinder/" >Path Finder<i class="fas fa-external-link-alt"></i></a> - 强大的 Finder 替代者，拥有很多特性。</li>
<li><a class="link"   href="https://github.com/sindresorhus/quick-look-plugins" >Quicklook-Plugins<i class="fas fa-external-link-alt"></i></a> - Finder 快速预览文件插件。</li>
<li><a class="link"   href="https://qspace.awehunt.com/" >QSpace<i class="fas fa-external-link-alt"></i></a> - 一款简洁高效的多视图文件管理器。 <a href="https://apps.apple.com/cn/app/id1469774098"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-app-store.svg"
                      alt="App Store" title="苹果应用商店软件"
                ></a></li>
<li><a class="link"   href="http://totalfinder.binaryage.com/" >TotalFinder<i class="fas fa-external-link-alt"></i></a> - 强大的 Finder 替代者，界面风格像 Chrome。</li>
<li><a class="link"   href="https://www.trankynam.com/xtrafinder/" >XtraFinder<i class="fas fa-external-link-alt"></i></a> - 给 Finder 添加有用的新特性。<img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
</ul>
<h2 id="游戏软件"><a href="#游戏软件" class="headerlink" title="游戏软件"></a>游戏软件</h2><ul>
<li><a class="link"   href="http://openemu.org/" >openEmu<i class="fas fa-external-link-alt"></i></a> - 模拟器，可以玩魂斗罗之类，轻松回到小时候。<a href="https://github.com/OpenEmu/OpenEmu"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                ></a> <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="http://portingkit.com/" >Porting Kit<i class="fas fa-external-link-alt"></i></a> - 在Mac中安装Windows®游戏。 <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="https://www.ppsspp.org/" >PPSSPP<i class="fas fa-external-link-alt"></i></a> - 一个很棒的 PSP 模拟器，适用于您梦寐以求的任何操作系统！ <a href="https://github.com/hrydgard/ppsspp"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                > <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></a></li>
<li><a class="link"   href="https://rpcs3.net/" >RPCS3<i class="fas fa-external-link-alt"></i></a> - 开源 PlayStation 3 模拟器 <a href="https://github.com/RPCS3/rpcs3"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                > <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></a></li>
</ul>
<h2 id="远程协助"><a href="#远程协助" class="headerlink" title="远程协助"></a>远程协助</h2><ul>
<li><a class="link"   href="https://rustdesk.com/" >RustDesk<i class="fas fa-external-link-alt"></i></a> - 又一个远程桌面软件。 <a href="https://github.com/rustdesk/rustdesk"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                ></a> <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="https://anydesk.com/" >AnyDesk<i class="fas fa-external-link-alt"></i></a> 是一款远程控制跨多平台的程序。</li>
<li><a class="link"   href="https://apps.apple.com/us/app/microsoft-remote-desktop/id1295203466?mt=12" >Microsoft Remote Desktop<i class="fas fa-external-link-alt"></i></a> - 微软官方的远程桌面连接工具(国区App store没有上架,<a class="link"   href="https://go.microsoft.com/fwlink/?linkid=868963" >下载地址<i class="fas fa-external-link-alt"></i></a>)。<a href="https://apps.apple.com/us/app/microsoft-remote-desktop/id1295203466?mt=12"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-app-store.svg"
                      alt="App Store" title="苹果应用商店软件"
                ></a> <a href="https://go.microsoft.com/fwlink/?linkid=868963"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></a></li>
<li><a class="link"   href="https://www.realvnc.com/" >RealVNC<i class="fas fa-external-link-alt"></i></a> 是一款免费的远程控制跨多平台的程序。 <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="https://www.teamviewer.com/" >TeamViewer<i class="fas fa-external-link-alt"></i></a> - 远程协助及在线协作和会议功能的软件，商业软件个人使用免费。<img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
</ul>
<h2 id="QuickLook插件"><a href="#QuickLook插件" class="headerlink" title="QuickLook插件"></a>QuickLook插件</h2><blockquote>
<p>List of useful <a class="link"   href="http://en.wikipedia.org/wiki/Quick_Look" >Quick Look<i class="fas fa-external-link-alt"></i></a> plugins for developers. <a href="https://github.com/sindresorhus/quick-look-plugins#readme"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-awesome.svg"
                      alt="Awesome List" title="Awesome List"
                ></a></p>
</blockquote>
<p><em>使用 <a class="link"   href="https://github.com/phinze/homebrew-cask" >Homebrew Cask<i class="fas fa-external-link-alt"></i></a> 将通过命令安装即为简单。开发人员使用的<a class="link"   href="http://en.wikipedia.org/wiki/Quick_Look" >Quick Look<i class="fas fa-external-link-alt"></i></a>插件列表。如果手动安装，你可将下载的 <code>.qlgenerator</code> 文件移动到 <code>~/Library/QuickLook</code> 运行 <code>qlmanage -r</code></em></p>
<ul>
<li><a class="link"   href="https://github.com/whomwah/qlstephen" >QuicklookStephen<i class="fas fa-external-link-alt"></i></a> - 可以让您查看没有文件扩展名的纯文本文件，如 README、INSTALL、Capfile、CHANGELOG…<code>brew install --cask install qlstephen</code></li>
</ul>
<h2 id="第三方应用市场APP"><a href="#第三方应用市场APP" class="headerlink" title="第三方应用市场APP"></a>第三方应用市场APP</h2><p><em><a class="link"   href="https://github.com/jaywcjlove/awesome-mac/issues/17" >这里讨论盗版问题或者提供黑名单？<i class="fas fa-external-link-alt"></i></a>，拒绝盗版从我做起，欢迎大家监督。</em></p>
<h3 id="正版"><a href="#正版" class="headerlink" title="正版"></a>正版</h3><p><em>这里只提供正版软件购买下载的应用商店。</em></p>
<ul>
<li><a class="link"   href="http://caskroom.github.io/" >Homebrew Cask<i class="fas fa-external-link-alt"></i></a> - 基于<a class="link"   href="https://brew.sh/" >Homebrew<i class="fas fa-external-link-alt"></i></a>扩展的，通过命令行安装 Mac GUI 软件的工具。<a href="https://github.com/caskroom/homebrew-cask"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                ></a> <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="https://brew.sh/" >Homebrew<i class="fas fa-external-link-alt"></i></a> - 体验通过命令行安装 Mac 软件的工具(大部分是命令行工具)。<a href="https://github.com/Homebrew/brew/"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                ></a> <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li><a class="link"   href="https://www.macupdate.com/" >MacUpdate Desktop<i class="fas fa-external-link-alt"></i></a> - 管理&#x2F;更新&#x2F;下载 App，跟踪优惠信息。</li>
<li><a class="link"   href="https://www.macports.org/" >MacPorts<i class="fas fa-external-link-alt"></i></a> - 一个软件包管理工具，可用于简化 OS X 和 Darwin 操作系统内软件的安装。 <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                > <a href="https://github.com/macports/"><img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-oss.svg"
                      alt="Open-Source Software" title="开源软件"
                ></a></li>
<li><a class="link"   href="https://setapp.com/" >Setapp<i class="fas fa-external-link-alt"></i></a> - MacPaw 推出的订阅制付费 App 平台服务。</li>
</ul>
<h3 id="应用商店黑名单"><a href="#应用商店黑名单" class="headerlink" title="应用商店黑名单"></a>应用商店黑名单</h3><p><em>第三方应用市场APP黑名单，存在盗版软件传播和下载，拒绝盗版从我做起，欢迎大家监督它们。</em></p>
<ul>
<li><del><a class="link"   href="http://mac.xunlei.com/app/" >迅雷Thunder Store<i class="fas fa-external-link-alt"></i></a></del> - 迅雷 Thunder for Mac 带应用市场。</li>
<li><del><a class="link"   href="http://box.macx.cn/" >Mac软件宝箱<i class="fas fa-external-link-alt"></i></a></del> - Macx 推出软件宝箱。</li>
<li><del><a class="link"   href="http://www.machunter.net/" >MacHunter<i class="fas fa-external-link-alt"></i></a></del> - Mac 应用市场。</li>
</ul>
<h2 id="Mac软件下载网站"><a href="#Mac软件下载网站" class="headerlink" title="Mac软件下载网站"></a>Mac软件下载网站</h2><p><em>这里主要是推荐一些软件下载的网站，还有一些Mac OSX软件分享网站</em></p>
<h3 id="正版-x2F-介绍"><a href="#正版-x2F-介绍" class="headerlink" title="正版&#x2F;介绍"></a>正版&#x2F;介绍</h3><ul>
<li>App Shopper：<a class="link"   href="http://appshopper.com/" >http://appshopper.com/<i class="fas fa-external-link-alt"></i></a></li>
<li>MacUpdate：<a class="link"   href="https://www.macupdate.com/" >https://www.macupdate.com/<i class="fas fa-external-link-alt"></i></a></li>
<li>少数派：<a class="link"   href="http://sspai.com/tag/Mac" >http://sspai.com/tag/Mac<i class="fas fa-external-link-alt"></i></a></li>
<li>Mac玩儿法：<a class="link"   href="http://www.waerfa.com/" >http://www.waerfa.com<i class="fas fa-external-link-alt"></i></a> <img  
                     lazyload
                     alt="image"
                     data-src="https://jaywcjlove.github.io/sb/ico/min-free.svg"
                      alt="Freeware" title="免费软件"
                ></li>
<li>腾讯柠檬精选：<a class="link"   href="https://lemon.qq.com/lab/" >https://lemon.qq.com/lab/<i class="fas fa-external-link-alt"></i></a></li>
</ul>
<h3 id="盗版软件下载网站黑名单"><a href="#盗版软件下载网站黑名单" class="headerlink" title="盗版软件下载网站黑名单"></a>盗版软件下载网站黑名单</h3><p><em>上面有大量的开源软件或者免费软件，拒绝盗版从我做起，下面被删除的网站提供大量破解软件下载，欢迎大家监督它们。</em></p>
<ul>
<li>玩转苹果：<del><code>http://www.ifunmac.com</code></del></li>
<li>AppKed：<del><code>http://www.macbed.com</code></del></li>
<li>appaddict：<del><code>https://www.appaddict.org/</code></del></li>
<li>Mac精品软件：<del><code>http://xclient.info/</code></del></li>
<li>MacWk：<del><code>https://macwk.com/</code></del></li>
<li>MacPeers：<del><code>https://www.macpeers.com</code></del></li>
<li>Mac毒：<del><code>https://www.macdo.cn</code></del></li>
<li>Macx：<del><code>https://www.macx.cn/</code></del></li>
<li>Mac软件下载站：<del><code>http://www.pshezi.com</code></del></li>
<li>MacPeers：<del><code>http://www.macpeers.com</code></del></li>
<li>Mac志：<del><code>http://www.isofts.org</code></del></li>
<li>Mac软件分享：<del><code>http://www.waitsun.com</code></del></li>
<li>MacSky苹果软件园：<del><code>http://www.macsky.net/</code></del></li>
<li>Softasm：<del><code>https://softasm.com/</code></del></li>
<li>Mac破解软件：<del><code>https://www.macappstore.net/</code></del></li>
<li>卡卡源：<del><code>http://www.kkroot.com/</code></del></li>
<li>苹果软件园：<del><code>http://www.maczapp.com</code></del></li>
<li>马可菠萝：<del><code>http://www.macbl.com/</code></del></li>
<li>极致分享：<del><code>https://alltoshare.com/</code></del></li>
<li>未来软件园：<del><code>http://www.orsoon.com/</code></del></li>
<li>腾牛网：<del><code>http://www.qqtn.com/mac/r_17_1.html</code></del></li>
<li>未来软件园：<del><code>http://www.orsoon.com/mac/</code></del></li>
<li>威锋网：<del><code>https://bbs.feng.com/forum.php?mod=forumdisplay&amp;fid=19&amp;page=</code></del></li>
<li>MAC萌新网：<del><code>https://www.macxin.com</code></del></li>
</ul>
<!--end-->

<p><strong><a href="#%E7%9B%AE%E5%BD%95">⬆ 返回顶部</a></strong></p>
<h2 id="Contributors"><a href="#Contributors" class="headerlink" title="Contributors"></a>Contributors</h2><p>This project exists thanks to all the people who contribute.</p>
<p><a href="https://github.com/jaywcjlove/awesome-mac/graphs/contributors"><img  
                     lazyload
                     alt="image"
                     data-src="https://opencollective.com/awesome-mac/contributors.svg?width=890"
                      
                ></a></p>
<h2 id="License"><a href="#License" class="headerlink" title="License"></a>License</h2><p><a href="https://creativecommons.org/licenses/by/4.0/"><img  
                     lazyload
                     alt="image"
                     data-src="http://i.creativecommons.org/l/by/4.0/88x31.png"
                      alt="Creative Commons License"
                ></a></p>
<p>This work is licensed under a <a class="link"   href="http://creativecommons.org/licenses/by/4.0/" >Creative Commons Attribution 4.0 International License<i class="fas fa-external-link-alt"></i></a>.Ax</p>
<!--idoc:config:
title: Awesome Mac 应用分享推荐 -
description: 收集分享大量非常好用的Mac应用程序、软件以及工具，主要面向开发者和设计师。 - Awesome Mac
-->]]></content>
  </entry>
  <entry>
    <title>Cloudflare 5XX 错误故障排除</title>
    <url>/2023/02/05/Cloudflare%205XX%20%E9%94%99%E8%AF%AF%E6%95%85%E9%9A%9C%E6%8E%92%E9%99%A4/</url>
    <content><![CDATA[<p><em>诊断并解决 Cloudflare 代理的站点的 5XX 错误。</em></p>
<h3 id="本文内容"><a href="#本文内容" class="headerlink" title="本文内容"></a>本文内容</h3><ul>
<li>[概述]</li>
<li>[错误分析](</li>
<li>[Error 500: internal server error]</li>
<li>[Error 502 bad gateway 或 Error 504 gateway timeout]</li>
<li>[Error 503: service temporarily unavailable]</li>
<li>[Error 520: web server returns an unknown error]</li>
<li>[Error 521: web server is down]</li>
<li>[Error 522: connection timed out]</li>
<li>[Error 523: origin is unreachable]</li>
<li>[Error 524: a timeout occurred]</li>
<li>[错误 525：SSL 握手失败]</li>
<li>[Error 526: invalid SSL certificate]</li>
<li>[527 错误：Railgun Listener 至源站错误]</li>
<li>[Error 530]</li>
</ul>
<hr>
<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>在排查 5XX 错误时，正确的操作步骤是先联系您的主机提供商或站点管理员来排除故障并收集数据。</p>
<p>Cloudflare 支持仅协助域所有者解决问题。如果您是网站访问者，请联系网站所有者。</p>
<h3 id="需要向主机提供商提供的错误详情"><a href="#需要向主机提供商提供的错误详情" class="headerlink" title="需要向主机提供商提供的错误详情"></a>需要向主机提供商提供的错误详情</h3><ol>
<li>具体的 5XX 错误代码和消息</li>
<li>发生 5XX 错误的时间和时区</li>
<li>造成 HTTP 5XX 错误的 URL（例如：<em><a class="link"   href="https://www.example.com/images/icons/image1.png" >https://www.example.com/images/icons/image1.png<i class="fas fa-external-link-alt"></i></a></em>）</li>
</ol>
<p>错误原因未必都能在源站错误日志中找到。请检查 Cloudflare 和源站 Web 服务器之间的所有负载平衡器、缓存、代理或防火墙。</p>
<p>下方的各个错误描述中列出了应向主机提供商或站点管理员提供的其他详情。Cloudflare <a class="link"   href="https://support.cloudflare.com/hc/articles/200172706" >Custom Error Pages<i class="fas fa-external-link-alt"></i></a> 可更改本文探讨的默认错误页面的外观。</p>
<hr>
<h2 id="错误分析"><a href="#错误分析" class="headerlink" title="错误分析"></a>错误分析</h2><p>每个域的错误分析可在您的帐户的支持门户中获得。通过错误分析，您可以按 HTTP 错误代码深入了解总体错误情况，它还提供了诊断和解决问题所需的 URL、响应、源站 IP 地址和 Cloudflare 数据中心。错误分析基于的是 1% 的流量样本。</p>
<p>要查看错误分析：</p>
<ul>
<li>导航到 Cloudflare 支持门户。请参阅关于<a class="link"   href="https://support.cloudflare.com/hc/articles/200172476#h_4b8753c8-f422-4c74-9e8e-07026c4da730" >提交支持票证<i class="fas fa-external-link-alt"></i></a>的说明，了解如何访问支持门户。</li>
<li>往下滚动到<strong>错误分析</strong>部分。</li>
<li>点击<strong>查看错误分析</strong>。</li>
<li>输入要调查的域。</li>
<li>此时将显示<strong>一段时间内的错误</strong>。</li>
<li>点击图表下方表格中的状态代码，展开流量错误详情。</li>
</ul>
<hr>
<h2 id="Error-500-internal-server-error"><a href="#Error-500-internal-server-error" class="headerlink" title="Error 500: internal server error"></a>Error 500: internal server error</h2><p>500 错误通常表示您的源站 Web 服务器存在问题。<em>Error establishing database</em> <em>connection</em> 是源站 Web 服务器生成的常见 HTTP 500 错误消息。<a class="link"   href="https://support.cloudflare.com/hc/zh-cn/articles/115003011431-Troubleshooting-Cloudflare-5XX-errors#h_cf28c038-16c1-4841-a85f-f905240aaebe" >联系您的主机提供商<i class="fas fa-external-link-alt"></i></a>来解决。</p>
<p><strong>解决方案</strong></p>
<p><a class="link"   href="https://support.cloudflare.com/hc/zh-cn/articles/115003011431-Troubleshooting-Cloudflare-5XX-errors#h_cf28c038-16c1-4841-a85f-f905240aaebe" >向主机提供商提供详细信息<i class="fas fa-external-link-alt"></i></a>，协助对问题进行故障排除。</p>
<p>不过，如果 500 错误的 HTML 响应代码中包含“cloudflare”或“cloudflare-nginx”，请将以下信息提供给 <a class="link"   href="https://support.cloudflare.com/hc/articles/200172476" >Cloudflare 支持<i class="fas fa-external-link-alt"></i></a>：</p>
<ol>
<li>您的域名</li>
<li>发生 500 错误的时间和时区</li>
<li>观察到 500 错误的浏览器的 <em><a class="link"   href="http://www.example.com/cdn-cgi/trace" >www.example.com/cdn-cgi/trace<i class="fas fa-external-link-alt"></i></a></em> 输出（将 <em><a class="link"   href="http://www.example.com/" >www.example.com<i class="fas fa-external-link-alt"></i></a></em> 替换为您实际的域名和主机名）。</li>
</ol>
<p>如果发现访问您的网站时显示空白页，请确认问题是否在<a class="link"   href="https://support.cloudflare.com/hc/articles/203118044#h_8654c523-e31e-4f40-a3c7-0674336a2753" >暂停 Cloudflare<i class="fas fa-external-link-alt"></i></a> 时发生，并联系您的主机提供商寻求帮助。</p>
<hr>
<h2 id="Error-502-bad-gateway-或-Error-504-gateway-timeout"><a href="#Error-502-bad-gateway-或-Error-504-gateway-timeout" class="headerlink" title="Error 502 bad gateway 或 Error 504 gateway timeout"></a>Error 502 bad gateway 或 Error 504 gateway timeout</h2><p>当 Cloudflare 无法与您的源站 Web 服务器建立联系时，会发生 HTTP 502 或 504 错误。</p>
<p>可能的原因有两种：</p>
<ul>
<li>（最常见原因）<a class="link"   href="https://support.cloudflare.com/hc/zh-cn/articles/115003011431-Troubleshooting-Cloudflare-5XX-errors#h_85e06a1a-fa89-4685-aa24-2aaf57c0141b" >502&#x2F;504 源自您的源站 Web 服务器<i class="fas fa-external-link-alt"></i></a></li>
<li><a class="link"   href="https://support.cloudflare.com/hc/zh-cn/articles/115003011431-Troubleshooting-Cloudflare-5XX-errors#h_845d633d-0842-4315-9dd2-53185cc4e1de" >502&#x2F;504 源自 Cloudflare<i class="fas fa-external-link-alt"></i></a></li>
</ul>
<h3 id="502-x2F-504-源自您的源站-Web-服务器"><a href="#502-x2F-504-源自您的源站-Web-服务器" class="headerlink" title="502&#x2F;504 源自您的源站 Web 服务器"></a>502&#x2F;504 源自您的源站 Web 服务器</h3><p>当您的源站 Web 服务器标准的 HTTP 502 网关损坏或 504 网关超时错误响应时，Cloudflare 将返回带有 Cloudflare 标志的 HTTTP 502 或 504 错误：</p>
<p><img  
                     lazyload
                     alt="image"
                     data-src="https://images.ctfassets.net/slt3lc6tev37/CTIa7Nqay9uZoBZnh7ao7/e61d8968ea919d75b26e0098437f7174/image1.png"
                      alt="Cloudflare 品牌化错误 502 的示例。"
                ></p>
<p><strong>解决方案</strong></p>
<p>联系您的主机提供商，在您的源站 Web 服务器上排查这些常见的原因：</p>
<ul>
<li>确保在请求生成生成 502 或 504 错误的访问者 URL 中的主机名和域名时，源站服务器能够响应请求。</li>
<li>调查服务器过载、崩溃或网络故障。</li>
<li>识别发生超时或被阻止的应用程序或服务。</li>
</ul>
<h3 id="502-x2F-504-源自-Cloudflare"><a href="#502-x2F-504-源自-Cloudflare" class="headerlink" title="502&#x2F;504 源自 Cloudflare"></a>502&#x2F;504 源自 Cloudflare</h3><p>源自 Cloudflare 的 502 或 504 错误如下方所示：</p>
<p><img  
                     lazyload
                     alt="image"
                     data-src="https://images.ctfassets.net/slt3lc6tev37/2BPhw2fUEiOLLFaHqCIsTP/679902b3c75ec783371cb3fecdc1066f/image5.png"
                      alt="非品牌化错误 502 的示例。"
                ></p>
<p>如果错误未提及“cloudflare”，请联系主机提供商来寻求与<a class="link"   href="https://support.cloudflare.com/hc/zh-cn/articles/115003011431-Troubleshooting-Cloudflare-5XX-errors#h_85e06a1a-fa89-4685-aa24-2aaf57c0141b" >源自源站的 502&#x2F;504 错误<i class="fas fa-external-link-alt"></i></a>相关的帮助。</p>
<p><strong>解决方案</strong></p>
<p>为避免处理您的查询时发生延迟，请向 <a class="link"   href="https://support.cloudflare.com/hc/articles/200172476" >Cloudflare 支持<i class="fas fa-external-link-alt"></i></a>提供以下必要详情：</p>
<ol>
<li>发生问题的时间和时区</li>
<li>造成 HTTP 502 或 504 错误的 URL（例如：<em><a class="link"   href="https://www.example.com/images/icons/image1.png" >https://www.example.com/images/icons/image1.png<i class="fas fa-external-link-alt"></i></a></em>）</li>
<li>浏览 <em><a class="link"   href="http://www.example.com/cdn-cgi/trace" >www.example.com/cdn-cgi/trace<i class="fas fa-external-link-alt"></i></a></em> 时的输出（将 <em><a class="link"   href="http://www.example.com/" >www.example.com<i class="fas fa-external-link-alt"></i></a></em> 替换为导致 HTTP 502 或 504 错误的域名和主机名）</li>
</ol>
<hr>
<h2 id="Error-503-service-temporarily-unavailable"><a href="#Error-503-service-temporarily-unavailable" class="headerlink" title="Error 503: service temporarily unavailable"></a>Error 503: service temporarily unavailable</h2><p>HTTP 错误 503 在源站 Web 服务器过载时发生。 可能的原因有两种，可通过错误消息来辨别：</p>
<ul>
<li>错误的 HTML 响应正文中不包含“cloudflare”或“cloudflare-nginx”。</li>
</ul>
<p><strong>解决方案</strong>：联系您的主机提供商，以核实是否针对您的源站 Web 服务器的请求实施了速率限制。</p>
<ul>
<li>错误的 HTML 响应正文中包含“cloudflare”或“cloudflare-nginx”。</li>
</ul>
<p><strong>解决方案</strong>：Cloudflare 数据中心中发生了连接问题。向 <a class="link"   href="https://support.cloudflare.com/hc/articles/200172476" >Cloudflare 支持<i class="fas fa-external-link-alt"></i></a>提供以下信息：</p>
<ol>
<li>您的域名</li>
<li>发生 503 错误的时间和时区</li>
<li>观察到 503 错误的浏览器的 <em><a class="link"   href="http://www.example.com/cdn-cgi/trace" >www.example.com/cdn-cgi/trace<i class="fas fa-external-link-alt"></i></a></em> 输出（将 <em><a class="link"   href="http://www.example.com/" >www.example.com<i class="fas fa-external-link-alt"></i></a></em> 替换为您实际的域名和主机名）。</li>
</ol>
<hr>
<h2 id="Error-520-web-server-returns-an-unknown-error"><a href="#Error-520-web-server-returns-an-unknown-error" class="headerlink" title="Error 520: web server returns an unknown error"></a>Error 520: web server returns an unknown error</h2><p>当源站服务器向 Cloudflare 返回空白、未知或意外响应时，会发生 520 错误。</p>
<p><strong>解决方案</strong></p>
<p>在进一步调查 520 错误期间采用以下快速解决办法：将 Cloudflare <strong>DNS</strong> 应用中的记录设为<a class="link"   href="https://developers.cloudflare.com/dns/manage-dns-records/reference/proxied-dns-records" >“仅限 DNS”<i class="fas fa-external-link-alt"></i></a>，或<a class="link"   href="https://support.cloudflare.com/hc/articles/203118044#h_8654c523-e31e-4f40-a3c7-0674336a2753" >暂停 Cloudflare<i class="fas fa-external-link-alt"></i></a>。</p>
<p><a class="link"   href="https://support.cloudflare.com/hc/zh-cn/articles/115003011431-Troubleshooting-Cloudflare-5XX-errors#h_cf28c038-16c1-4841-a85f-f905240aaebe" >联系您的主机提供商或站点管理员<i class="fas fa-external-link-alt"></i></a>，请他们核查您的源站 Web 服务器日志中的崩溃并检查以下常见原因：</p>
<ul>
<li><p>源站 Web 服务器应用程序崩溃</p>
</li>
<li><p>您的源站上未允许 <a class="link"   href="https://www.cloudflare.com/ips" >Cloudflare IP<i class="fas fa-external-link-alt"></i></a>。</p>
</li>
<li><p>标头超过 16 KB（通常因为 Cookie 数量过多）</p>
</li>
<li><p>源站 Web 服务器的空响应中缺少 HTTP 状态代码或响应正文</p>
</li>
<li><p>缺少响应标头或源站 Web 服务器未返回</p>
<p>正确的 HTTP 错误响应</p>
<p>。</p>
<ul>
<li><code>在从上游读取响应标头时，上游过早地关闭了连接</code>，这是我们在日志中可能注意到的一个常见错误。这表明源站 Web 服务器有问题，导致Cloudflare 生成 520 错误。</li>
</ul>
</li>
</ul>
<p>520 错误普遍发生于造成源站 Web 服务器崩溃的 PHP 应用程序。</p>
<p>如果在联系主机提供商或站点管理员后仍然出现 520 错误，请向 <a class="link"   href="https://support.cloudflare.com/hc/articles/200172476" >Cloudflare 支持<i class="fas fa-external-link-alt"></i></a>提供以下信息：</p>
<ul>
<li><p>发生错误时所请求资源的完整 URL</p>
</li>
<li><p>520 错误消息中的 Cloudflare <strong>cf-ray</strong></p>
</li>
<li><p>来自 <em><a class="link"   href="http://www.example.com/cdn-cgi/trace" >http://www.example.com/cdn-cgi/trace<i class="fas fa-external-link-alt"></i></a></em> 时的输出（将 <em><a class="link"   href="http://www.example.com/" >www.example.com<i class="fas fa-external-link-alt"></i></a></em> 替换为您发生 520 错误时的您的域名和主机名）</p>
</li>
<li><p>两个</p>
<p>HAR 文件</p>
<p>：</p>
<ul>
<li>一个在您网站上启用了 Cloudflare 时生成</li>
<li>另一个在<a class="link"   href="https://support.cloudflare.com/hc/articles/200169176" >临时禁用 Cloudflare<i class="fas fa-external-link-alt"></i></a> 后生成。</li>
</ul>
</li>
</ul>
<hr>
<h2 id="Error-521-web-server-is-down"><a href="#Error-521-web-server-is-down" class="headerlink" title="Error 521: web server is down"></a>Error 521: web server is down</h2><p>源站 Web 服务器拒绝来自 Cloudflare 的连接时，会发生 521 错误。源站上的安全解决方案可能阻止了来自某些 <a class="link"   href="https://www.cloudflare.com/ips" >Cloudflare IP 地址<i class="fas fa-external-link-alt"></i></a>的合法连接。</p>
<p>521 错误的两个最常见原因：</p>
<ul>
<li>源站 Web 服务器应用程序离线</li>
<li>Cloudflare 请求被阻止</li>
</ul>
<p><strong>解决方案</strong></p>
<p><a class="link"   href="https://support.cloudflare.com/hc/zh-cn/articles/115003011431-Troubleshooting-Cloudflare-5XX-errors#h_cf28c038-16c1-4841-a85f-f905240aaebe" >联系您的站点管理员或主机提供商<i class="fas fa-external-link-alt"></i></a>以排除这些常见原因：</p>
<ul>
<li>确保您的源站 Web 服务器正常响应</li>
<li>查看源站 Web 服务器错误日志，以确定 Web 服务器应用程序崩溃或中断。</li>
<li>确认没有阻止 <a class="link"   href="https://www.cloudflare.com/ips" >Cloudflare IP 地址<i class="fas fa-external-link-alt"></i></a>或对其施加速率限制</li>
<li>在您的源站 Web 服务器的防火墙或其他安全软件中允许所有 <a class="link"   href="https://www.cloudflare.com/ips" >Cloudflare IP 范围<i class="fas fa-external-link-alt"></i></a></li>
<li>确认您是否将 <strong>SSL&#x2F;TLS 模式</strong>设置为 <strong>Full</strong> 或 <strong>Full (Strict</strong>)，以及您是否安装了 <a class="link"   href="https://developers.cloudflare.com/ssl/origin-configuration/origin-ca" >Cloudflare Origin 证书<i class="fas fa-external-link-alt"></i></a></li>
<li>查找 <a class="link"   href="https://community.cloudflare.com/t/community-tip-fixing-error-521-web-server-is-down/42461" >Cloudflare 社区<i class="fas fa-external-link-alt"></i></a>的更多故障排除信息。</li>
</ul>
<hr>
<h2 id="Error-522-connection-timed-out"><a href="#Error-522-connection-timed-out" class="headerlink" title="Error 522: connection timed out"></a>Error 522: connection timed out</h2><p>Cloudflare 联系源站 Web 服务器时超时会发生 522 错误。 有两种不同的错误导致 HTTP 错误 522，具体取决于 Cloudflare 和源站 Web 服务器之间发生超时的时间：</p>
<ol>
<li>在连接建立之前，源站 Web 服务器未在 Cloudflare 发送 SYN 后 15 秒内将 SYN + ACK 返回给 Cloudflare。</li>
<li>在连接建立之后，源站 Web 服务器未在 90 秒内确认（ACK）Cloudflare 的资源请求。</li>
</ol>
<p>如果源站 Web 服务器在连接建立之后确认（<em>ACK</em>）了资源请求，但没有及时发送响应，则发生 <a class="link"   href="https://support.cloudflare.com/hc/zh-cn/articles/115003011431-Cloudflare-5XX-%E9%94%99%E8%AF%AF%E6%95%85%E9%9A%9C%E6%8E%92%E9%99%A4#524error" >HTTP 524 错误<i class="fas fa-external-link-alt"></i></a>。</p>
<p><strong>解决方案</strong></p>
<p><a class="link"   href="https://support.cloudflare.com/hc/zh-cn/articles/115003011431-Troubleshooting-Cloudflare-5XX-errors#h_cf28c038-16c1-4841-a85f-f905240aaebe" >联系您的主机提供商<i class="fas fa-external-link-alt"></i></a>，从源站 Web 服务器上排查下列常见原因：</p>
<ul>
<li>（最常见）.htaccess、iptables 或防火墙中阻止了 <a class="link"   href="https://www.cloudflare.com/ips/" >Cloudflare IP 地址<i class="fas fa-external-link-alt"></i></a>或对其设置了速率限制。确认您的主机提供商允许 Cloudflare IP 地址。</li>
<li>源站 Web 服务器过载或离线，因而丢弃了传入的请求。</li>
<li>源站 Web 服务器上禁用了 <a class="link"   href="http://tldp.org/HOWTO/TCP-Keepalive-HOWTO/overview.html" >Keepalives<i class="fas fa-external-link-alt"></i></a> 功能。</li>
<li>Cloudflare <strong>DNS</strong> 应用中的源站 IP 地址与主机提供商当前为您的源站 Web 服务器置备的 IP 地址不匹配。</li>
<li>您的源站 Web 服务器上丢弃了数据包。</li>
</ul>
<p>如果您使用的是 <a class="link"   href="https://developers.cloudflare.com/pages/" >Cloudflare Pages<i class="fas fa-external-link-alt"></i></a>，请确认您已经设置了自定义域，并且您的 CNAME 记录指向您的自定义 Pages 域。如需了解如何设置自定义 Pages 域，请点击<a class="link"   href="https://developers.cloudflare.com/pages/getting-started#adding-a-custom-domain" >此处<i class="fas fa-external-link-alt"></i></a>。</p>
<p>如果上述原因都未能促成解决方案，请向主机提供商或站点管理员索取以下信息，然后<a class="link"   href="https://support.cloudflare.com/hc/articles/200172476" >联系 Cloudflare 支持<i class="fas fa-external-link-alt"></i></a>：</p>
<ul>
<li>从源站 Web 服务器到发生问题前最常连接您的源站 Web 服务器的 <a class="link"   href="http://www.cloudflare.com/ips" >Cloudflare IP 地址<i class="fas fa-external-link-alt"></i></a>的 <a class="link"   href="https://support.cloudflare.com/hc/articles/203118044#h_b8cebafd-9243-40e9-9c44-d4b94ccd3a87" >MTR 或 traceroute<i class="fas fa-external-link-alt"></i></a> 结果。在源站 Web 服务器日志记录的 IP 中，找到一个可成功连接的 IP。</li>
<li>来自主机提供商调查的详细信息，如相关的日志或与主机提供商的对话。</li>
</ul>
<hr>
<h2 id="Error-523-origin-is-unreachable"><a href="#Error-523-origin-is-unreachable" class="headerlink" title="Error 523: origin is unreachable"></a>Error 523: origin is unreachable</h2><p>当 Cloudflare 无法联系您的源站 Web 服务器时，会发生 523 错误。这通常在 Cloudflare 和源站 Web 服务器之间的网络设备没有通向源站 IP 地址的路由时发生。</p>
<p><strong>解决方案</strong> <a class="link"   href="https://support.cloudflare.com/hc/zh-cn/articles/115003011431-Troubleshooting-Cloudflare-5XX-errors#h_cf28c038-16c1-4841-a85f-f905240aaebe" >联系您的主机提供商<i class="fas fa-external-link-alt"></i></a>，在您的源站 Web 服务器上排查下列常见原因：</p>
<ul>
<li>确认您的 Cloudflare DNS 应用中为 A 或 AAAA 记录列出了正确的源站 IP 地址。</li>
<li>对源站与 Cloudflare 之间的互联网路由问题进行故障排除，或者对源站本身的问题进行故障排除。</li>
</ul>
<p>如果主机提供商经常更改该您的源站 Web 服务器 IP 地址，请参考有关<a class="link"   href="https://developers.cloudflare.com/dns/manage-dns-records/how-to/managing-dynamic-ip-addresses" >动态 DNS 更新<i class="fas fa-external-link-alt"></i></a>的 Cloudflare 文档。</p>
<p>如果上述原因都未能促成解决方案，请向主机提供商或站点管理员索取以下信息：</p>
<ul>
<li>从源站 Web 服务器到发生问题前最常连接您的源站 Web 服务器的 <a class="link"   href="http://www.cloudflare.com/ips" >Cloudflare IP 地址<i class="fas fa-external-link-alt"></i></a>的 <a class="link"   href="https://support.cloudflare.com/hc/articles/203118044#h_b8cebafd-9243-40e9-9c44-d4b94ccd3a87" >MTR 或 traceroute<i class="fas fa-external-link-alt"></i></a> 结果。从源站 Web 服务器日志查找一个可连接的 Cloudflare IP。</li>
<li>如果您通过 Cloudflare 托管服务合作伙伴使用 Railgun，请<a class="link"   href="https://support.cloudflare.com/hc/zh-cn/articles/115003011431-Troubleshooting-Cloudflare-5XX-errors#h_cf28c038-16c1-4841-a85f-f905240aaebe" >联系您的主机提供商<i class="fas fa-external-link-alt"></i></a>来排查 523 错误。</li>
<li>如果您自己管理 Railgun 安装，请提供以下信息：<ul>
<li>从 Railgun 服务器到源站 Web 服务器的 <a class="link"   href="https://support.cloudflare.com/hc/articles/203118044#h_b8cebafd-9243-40e9-9c44-d4b94ccd3a87" >traceroute<i class="fas fa-external-link-alt"></i></a> 结果。</li>
<li>来自 Railgun 服务器的最新系统日志文件。</li>
</ul>
</li>
</ul>
<hr>
<h2 id="Error-524-a-timeout-occurred"><a href="#Error-524-a-timeout-occurred" class="headerlink" title="Error 524: a timeout occurred"></a>Error 524: a timeout occurred</h2><p>524 错误表明 Cloudflare 成功连接了源服务器，但源站 Web 服务器没有在默认的 100 秒连接超时结束前提供 HTTP 响应。如果源站服务器由于要做太多工作而花费太长时间（例如，大数据查询），或者因为服务器在争抢资源而无法及时返回任何数据，那么可能会发生这种情况。</p>
<p><strong>解决方案</strong></p>
<p>以下是我们建议的解决这一问题的方案：</p>
<ul>
<li><p>实施大型 HTTP 进程的状态轮询，以避免遇到该错误。</p>
</li>
<li><p>联系您的主机提供商</p>
<p>，从您的源站 Web 服务器上排查下列常见原因：</p>
<ul>
<li>源站 Web 服务器上长时间运行的进程。</li>
<li>发生过载的源站 Web 服务器。</li>
</ul>
</li>
</ul>
<p>源站 Web 服务器上记录请求响应时间有助于辨别资源速度缓慢的原因。联系您的主机提供商或站点管理员，以协助调整日志格式，或者搜索适用于您的 Web 服务器品牌（如 <a class="link"   href="http://httpd.apache.org/docs/current/mod/mod_log_config.html" >Apache<i class="fas fa-external-link-alt"></i></a> 或 <a class="link"   href="http://nginx.org/en/docs/http/ngx_http_log_module.html#log_format" >Nginx<i class="fas fa-external-link-alt"></i></a>）的日志文档。</p>
<ul>
<li>Enterprise 客户可以使用 <a class="link"   href="https://api.cloudflare.com/#zone-settings-change-proxy-read-timeout-setting" >proxy_read_timeout API 端点<i class="fas fa-external-link-alt"></i></a>将 524 超时延长到最长 600 秒。</li>
<li>如果您经常运行需要超过 100 秒才能完成的 HTTP 请求（例如大量数据导出），请在 Cloudflare <strong>DNS</strong> 应用中将这些进程移动到未由 Cloudflare 代理的子域后面。</li>
<li>如果使用 Cloudflare Railgun 的域发生错误 524，请确保 <em>lan.timeout</em> 设置的值高于默认的 30 秒，再重启 railgun 服务。</li>
</ul>
<hr>
<h2 id="错误-525：SSL-握手失败"><a href="#错误-525：SSL-握手失败" class="headerlink" title="错误 525：SSL 握手失败"></a>错误 525：SSL 握手失败</h2><p>525 错误表示 Cloudflare 与源站 Web 服务器之间的 SSL 握手失败。满足以下两个条件时会发生 525 错误：</p>
<ol>
<li>Cloudflare 与源站 Web 服务器之间的 <a class="link"   href="https://www.cloudflare.com/learning/ssl/what-happens-in-a-tls-handshake/" >SSL 握手<i class="fas fa-external-link-alt"></i></a>失败，以及</li>
<li>Cloudflare <strong>SSL&#x2F;TLS</strong> 应用的<strong>概述</strong>选项卡中设置了 <a href="https://developers.cloudflare.com/ssl/origin-configuration/ssl-modes"><em>Full</em> 或 <em>Full (Strict)</em></a> <strong>SSL</strong>。</li>
</ol>
<p><strong>解决方案</strong></p>
<p><a class="link"   href="https://support.cloudflare.com/hc/zh-cn/articles/115003011431-Troubleshooting-Cloudflare-5XX-errors#h_cf28c038-16c1-4841-a85f-f905240aaebe" >联系您的主机提供商<i class="fas fa-external-link-alt"></i></a>，从您的源站 Web 服务器上排查下列常见原因：</p>
<ul>
<li>未安装有效的 SSL 证书</li>
<li>未开启 443 端口（或其他自定义安全端口）</li>
<li>无 <a class="link"   href="https://support.cloudflare.com/hc/articles/360026016272" >SNI<i class="fas fa-external-link-alt"></i></a> 支持</li>
<li>Cloudflare 接受的加密套件与源站 Web 服务器支持的<a class="link"   href="https://developers.cloudflare.com/ssl/ssl-tls/cipher-suites" >加密套件<i class="fas fa-external-link-alt"></i></a>不匹配。</li>
</ul>
<p>如果间歇性发生 525 错误，请查看源站 Web 服务器错误日志来确定原因。配置 Apache 以<a class="link"   href="https://cwiki.apache.org/confluence/display/HTTPD/DebuggingSSLProblems#Enable_SSL_logging" >记录 mod_ssl 错误<i class="fas fa-external-link-alt"></i></a>。此外，nginx 的标准错误日志中包含 SSL 错误，但可能需要<a class="link"   href="https://docs.nginx.com/nginx/admin-guide/monitoring/logging/" >提高日志级别<i class="fas fa-external-link-alt"></i></a>。</p>
<p><strong>其他检查</strong></p>
<ul>
<li>检查您的源站服务器上是否安装了证书。您可以查看<a class="link"   href="https://support.cloudflare.com/hc/zh-cn/articles/203118044-Gathering-information-for-troubleshooting-sites#h_0c7f48b3-fc29-4266-8c63-477fe61a11c4" >这篇文章<i class="fas fa-external-link-alt"></i></a>，详细了解如何运行一些测试。如果您没有任何证书，你可以创建并安装免费的 <a class="link"   href="https://developers.cloudflare.com/ssl/origin-configuration/origin-ca" >Cloudflare Origin CA 证书<i class="fas fa-external-link-alt"></i></a>。使用 Origin CA 证书，您就加密 Cloudflare 与源站 Web 服务器之间的流量。</li>
<li><a class="link"   href="https://developers.cloudflare.com/ssl/ssl-tls/cipher-suites" >检查服务器使用的密码套件<i class="fas fa-external-link-alt"></i></a>以确保它们与 Cloudflare 支持的密码套件匹配。</li>
<li>根据看到的 525 的时间戳检查服务器的错误日志，以确保有错误可能导致在 SSL 握手期间重置连接。</li>
</ul>
<hr>
<h2 id="Error-526-invalid-SSL-certificate"><a href="#Error-526-invalid-SSL-certificate" class="headerlink" title="Error 526: invalid SSL certificate"></a>Error 526: invalid SSL certificate</h2><p>满足以下两个条件时会发生 526 错误：</p>
<ol>
<li>Cloudflare 无法验证您的源站 Web 服务器上的 SSL 证书；</li>
<li>Cloudflare <strong>SSL&#x2F;TLS</strong> 应用的<strong>概述</strong>选项卡中设置了 <a href="https://developers.cloudflare.com/ssl/origin-configuration/ssl-modes#full-strict"><em>Full SSL (Strict)</em></a> <strong>SSL</strong>。</li>
</ol>
<p><strong>解决方案</strong></p>
<p>在 Cloudflare <strong>SSL&#x2F;TLS</strong> 应用的<strong>概述</strong>选项卡中将域的 <strong>SSL</strong> 设为 <em>Full</em> 而非 *Full (strict)*，这可能是一种快速修复方法。</p>
<p>请您服务器管理员或主机提供商核查源站 Web 服务器的 SSL 证书，并进行以下验证：</p>
<ul>
<li>证书没有到期</li>
<li>证书没有撤销</li>
<li>证书由<a class="link"   href="https://support.cloudflare.com/hc/articles/360026016272" >证书颁发机构<i class="fas fa-external-link-alt"></i></a>签名（而非自签名）</li>
<li>所请求的域名或目标域名和主机名列在证书的 <strong>Common Name</strong> 或 <strong>Subject Alternative Name</strong> 中</li>
<li>您的源站 Web 服务器接受通过 SSL 端口 443 进行连接</li>
<li><a class="link"   href="https://support.cloudflare.com/hc/articles/200169176" >暂停 Cloudflare<i class="fas fa-external-link-alt"></i></a> 并访问 <a class="link"   href="https://www.sslshopper.com/ssl-checker.html#hostname=www.example.com%EF%BC%88%E5%B0%86" >https://www.sslshopper.com/ssl-checker.html#hostname=www.example.com（将<i class="fas fa-external-link-alt"></i></a> <a class="link"   href="http://www.example.com/" >www.example.com<i class="fas fa-external-link-alt"></i></a> 替换为您的主机名和域名），以验源站 SSL 证书并无问题：</li>
</ul>
<p><img  
                     lazyload
                     alt="image"
                     data-src="https://images.ctfassets.net/slt3lc6tev37/5vKfYKeOgh0GAa9vnr0Qwb/1db00bea64cd5fb77a839f41273840b9/hc-import-troubleshooting_5xx_errors_sslshopper_output.png"
                      alt="该屏幕显示了没有错误的 SSL 证书。"
                ></p>
<p>如果源站服务器使用自签名证书，请将域配置为使用 <em>Full</em> <em>SSL</em> 而非 *Full SSL (Strict)*。请参考<a class="link"   href="https://developers.cloudflare.com/ssl/origin-configuration/ssl-modes" >适用于您的源站的 SSL 推荐设置<i class="fas fa-external-link-alt"></i></a>。</p>
<hr>
<h2 id="527-错误：Railgun-Listener-至源站错误"><a href="#527-错误：Railgun-Listener-至源站错误" class="headerlink" title="527 错误：Railgun Listener 至源站错误"></a>527 错误：Railgun Listener 至源站错误</h2><p>527 错误表示 Cloudflare 和源站的 <a class="link"   href="https://support.cloudflare.com/hc/articles/200168406" >Railgun 服务器（rg-listener）<i class="fas fa-external-link-alt"></i></a>之间发生连接中断。常见的原因包括：</p>
<ul>
<li>防火墙干扰</li>
<li>Railgun 服务器和 Cloudflare 之间网络故障或数据包丢失</li>
</ul>
<p>如需其他详细信息来协助故障排除，请<a class="link"   href="https://support.cloudflare.com/hc/articles/218444227" >提高 Railgun 日志级别<i class="fas fa-external-link-alt"></i></a>。</p>
<p>527 错误的最常见原因包括：</p>
<ul>
<li><a class="link"   href="https://support.cloudflare.com/hc/zh-cn/articles/115003011431-Troubleshooting-Cloudflare-5XX-errors#h_c559b9e5-a342-47ed-bfae-66e10e42aade" >连接超时<i class="fas fa-external-link-alt"></i></a></li>
<li><a class="link"   href="https://support.cloudflare.com/hc/zh-cn/articles/115003011431-Troubleshooting-Cloudflare-5XX-errors#h_f8e4890c-9459-4c9a-a4ab-e9b44fa16dbf" >超过 LAN 超时<i class="fas fa-external-link-alt"></i></a></li>
<li><a class="link"   href="https://support.cloudflare.com/hc/zh-cn/articles/115003011431-Troubleshooting-Cloudflare-5XX-errors#h_2e3e4251-3642-4fce-bbcf-1a45bb2b2c11" >连接遭拒<i class="fas fa-external-link-alt"></i></a></li>
<li><a class="link"   href="https://support.cloudflare.com/hc/zh-cn/articles/115003011431-Troubleshooting-Cloudflare-5XX-errors#h_c30fe02c-98f2-4cbf-af8c-bafa9b4f5b8f" >TLS&#x2F;SSL 相关错误<i class="fas fa-external-link-alt"></i></a></li>
</ul>
<p>如果要联系 Cloudflare 支持，请提供以下来自 Railgun Listener 的信息：</p>
<ul>
<li><em>railgun.conf</em> 文件的完整内容</li>
<li><em>railgun-nat.conf</em> 文件的完整内容内容</li>
<li>详述观察到的错误的 Railgun 日志文件</li>
</ul>
<h3 id="连接超时"><a href="#连接超时" class="headerlink" title="连接超时"></a>连接超时</h3><p>下列 Railgun 日志错误表明 Railgun Listener 和源站 Web 服务器之间存在连接故障：</p>
<pre class="line-numbers language-none"><code class="language-none">connection failed 0.0.0.0:443&#x2F;example.com:dial tcp 0.0.0.0:443: i&#x2F;o timeout
no response from origin (timeout) 0.0.0.0:80&#x2F;example.com<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>

<p><strong>解决方案</strong></p>
<p>联系您的主机提供商，以协助测试源站 Web 服务器和 Railgun Listener 之间的连接问题。例如，运行 netcat 命令可以测试从 Railgun Listener 到源站 Web 服务器的 <em>SERVERIP</em> 和 <em>PORT</em>（80 用于 HTTP，或 443 用于 HTTPS）的连接：</p>
<pre class="line-numbers language-none"><code class="language-none">nc -vz SERVERIP PORT<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<h3 id="超过-LAN-超时"><a href="#超过-LAN-超时" class="headerlink" title="超过 LAN 超时"></a>超过 LAN 超时</h3><p>如果源站 Web 服务器未在 30 秒默认超时内向 Railgun Listener 发送 HTTP 响应，则生成以下 Railgun Listener 日志错误：</p>
<pre class="line-numbers language-none"><code class="language-none">connection failed 0.0.0.0:443&#x2F;example.com: dial tcp 0.0.0.0:443: i&#x2F;o timeout<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>可以通过 railgun.conf 文件的 lan.timeout 参数调整这一时间。</p>
<p><strong>解决方案</strong></p>
<p>提高 <em>railgun.conf</em> 中的 <em>lan.timeout</em> 限值，或检查 Web 服务器配置。联系您的主机提供商，以确认源站 Web 服务器是否过载。</p>
<h3 id="连接遭拒"><a href="#连接遭拒" class="headerlink" title="连接遭拒"></a>连接遭拒</h3><p>当来自 Railgun Listener 的请求遭到拒绝时，Railgun 日志中会出现以下错误：</p>
<pre class="line-numbers language-none"><code class="language-none">Error getting page: dial tcp 0.0.0.0:80:connection refused<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p><strong>解决方案</strong></p>
<p>允许 Railgun Listener 的 IP 处于源站 Web 服务器的防火墙中。</p>
<h3 id="TLS-x2F-SSL-相关错误"><a href="#TLS-x2F-SSL-相关错误" class="headerlink" title="TLS&#x2F;SSL 相关错误"></a>TLS&#x2F;SSL 相关错误</h3><p>如果 TLS 连接失败，Railgun 日志中会出现以下错误：</p>
<pre class="line-numbers language-none"><code class="language-none">connection failed 0.0.0.0:443&#x2F;example.com:remote error: handshake failure
connection failed 0.0.0.0:443&#x2F;example.com:dial tcp 0.0.0.0:443:connection refused
connection failed 127.0.0.1:443&#x2F;www.example.com:x509: certificate is valid for
example.com,www.example.com<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>

<p><strong>解决方案</strong></p>
<p>如果发生 TLS&#x2F;SSL 错误，请在源站 Web 服务器上检查并确保：</p>
<ul>
<li>已开启 443 端口</li>
<li>源站 Web 服务器出示了 SSL 证书</li>
<li>源站 Web 服务器的 SSL 证书的 SAN 或 Common Name 中包含请求的主机名或目标主机名</li>
<li>在 Cloudflare <strong>SSL&#x2F;TLS</strong> 应用的<strong>概述</strong>选项卡中将 <strong>SSL</strong> 设为 <a class="link"   href="https://developers.cloudflare.com/ssl/origin-configuration/ssl-modes" >Full 或 Full (Strict)<i class="fas fa-external-link-alt"></i></a></li>
</ul>
<p>如果源站 Web 服务器 SSL 证书采用自签名，请<a href="https://support.cloudflare.com/hc/articles/219336007">在 <em>railgun.conf</em> 中设置 <em>validate.cert&#x3D;0</em></a>。</p>
<hr>
<h2 id="Error-530"><a href="#Error-530" class="headerlink" title="Error 530"></a>Error 530</h2><p>返回 HTTP 错误 530 时会同时显示 1XXX 错误。后续我会总结，以了解故障排除信息。</p>
]]></content>
      <tags>
        <tag>cloudflare</tag>
      </tags>
  </entry>
  <entry>
    <title>DevOps角色：您梦寐以求的工作是什么？</title>
    <url>/2019/11/01/DevOps%E8%A7%92%E8%89%B2%E6%82%A8%E6%A2%A6%E5%AF%90%E4%BB%A5%E6%B1%82%E7%9A%84%E5%B7%A5%E4%BD%9C%E6%98%AF%E4%BB%80%E4%B9%88/</url>
    <content><![CDATA[<h3 id="在DevOps环境中有很多可供选择的选择，每个人都可以找到一份工作。"><a href="#在DevOps环境中有很多可供选择的选择，每个人都可以找到一份工作。" class="headerlink" title="在DevOps环境中有很多可供选择的选择，每个人都可以找到一份工作。"></a>在DevOps环境中有很多可供选择的选择，每个人都可以找到一份工作。</h3><p><img  
                     lazyload
                     alt="image"
                     data-src="https://dzone.com/storage/temp/12646937-blocks.jpg"
                      alt="建筑模块"
                ></p>
<p><em>有这么多DevOps角色可供选择，您将是哪个构建基块？</em></p>
<p>当IT专业人员迫切希望成为DevOps的专家时，对于各种DevOps角色还有很多困惑。因此，本文致力于使实施DevOps的公司的团队结构更加清晰。</p>
<p>您可能一直听说，在DevOps中，每个参与人员都扮演着共同的角色：DevOps，这是两种实践的结合：<em>Development</em>和<em>Operations</em>。但这远非事实。</p>
<h2 id="DevOps实践"><a href="#DevOps实践" class="headerlink" title="DevOps实践"></a><strong>DevOps实践</strong></h2><p>实际上，DevOps实践强调，开发人员应该能够执行由Ops家伙执行的任务，而Ops则应该能够执行由Dev家伙执行的任务。</p>
<p>既然您知道DevOps专业人员是具有多种技能的人员，那么您可能还想知道DevOps专业人员在其组织中负责的各种任务。如果是这样，请继续阅读。</p>
<p>要真正理解这个概念，您需要从另一个角度看待它。如果您置身于实施DevOps的公司中，那么它就更容易理解，因为您必须根据要求分配各种DevOps角色。</p>
<h2 id="DevOps角色"><a href="#DevOps角色" class="headerlink" title="DevOps角色"></a><strong>DevOps角色</strong></h2><p>首先让我列出各种角色及其描述。</p>
<ol>
<li><strong>DevOps传播者</strong> –负责实施DevOps的首席官（领导）</li>
<li><strong>发布管理器</strong> –发布新功能并确保发布后产品稳定性的工具</li>
<li><strong>自动化专家</strong> –负责实现工具自动化和编排的人</li>
<li><strong>软件开发人员&#x2F;测试人员</strong> –实际开发代码并对其进行测试的人</li>
<li><strong>质量保证</strong> –确保产品质量符合其要求的人</li>
<li><strong>安全工程师</strong> –始终监视产品安全性和健康状况的<strong>工程师</strong></li>
</ol>
<p>这里要注意的重要一点是，其中许多角色将涉及一个团队或一组专业人员，例如软件开发人员&#x2F;测试人员，安全工程师和质量保证。因此，您应该以层次结构的形式考虑这些角色及其关系。</p>
<p><img  
                     lazyload
                     alt="image"
                     data-src="https://www.edureka.co/blog/wp-content/uploads/2018/02/DevOps-Roles.png"
                      alt="DevOps角色"
                ></p>
<p>根据公司的要求，甚至自动化专家也可以由多个人担任该角色。因此，让我更多地谈谈这些DevOps角色。</p>
<h3 id="DevOps传播者"><a href="#DevOps传播者" class="headerlink" title="DevOps传播者"></a><strong>DevOps传播者</strong></h3><p>就像我之前提到的那样，这是DevOps中的关键角色。由领导者或负责确保在产品的端到端开发中实施DevOps策略并带来环境积极影响的人员来担任此角色。</p>
<p>DevOps传播者还考虑到可用的各种自动化工具以及Dev和Ops团队具有的技能，还找到了改进产品现有体系结构的方法。他的主要目标是管理其他DevOps角色并从团队中获得全面的效率。</p>
<h3 id="发布经理"><a href="#发布经理" class="headerlink" title="发布经理"></a><strong>发布经理</strong></h3><p>该角色是产品可交付成果的关键角色，因为他需要将新功能&#x2F;更新功能与现有框架集成在一起。该角色可以是担任发布工程师的角色的同一个人，也可以是领导发布工程师团队的发布经理。</p>
<p>该角色的主要重点领域是从开发到部署，以协调和管理产品。由于此角色是以重要方式参与的，因此应由了解该技术的工作原理和各种结构的技术人员（经理）来担任。</p>
<p>根据需求，将有多位经理领导各自的团队来处理多个功能（项目）。</p>
<h3 id="自动化专家"><a href="#自动化专家" class="headerlink" title="自动化专家"></a><strong>自动化专家</strong></h3><p>无需再次强调该角色的重要性，因为DevOps完全是关于自动化的。作为自动化专家，此角色应该能够理解什么可以自动化以及如何将一个产品堆栈与另一个产品堆栈集成。</p>
<p>此人也称为集成专家，负责分析，设计和实施持续部署的策略，同时确保生产和预生产系统的高可用性。</p>
<h3 id="软件开发人员-x2F-测试人员"><a href="#软件开发人员-x2F-测试人员" class="headerlink" title="软件开发人员&#x2F;测试人员"></a><strong>软件开发人员&#x2F;测试人员</strong></h3><p>该角色负责软件的实际根级开发。传统的编码人员和程序员属于这一类。除开发外，专业人员还负责测试代码。</p>
<p>名称可能保持不变，但是软件开发人员&#x2F;测试人员的新角色大大增加了职责范围，因为他们不仅负责将新需求转化为代码，还负责单元测试，部署和持续监控。</p>
<h3 id="质量保证"><a href="#质量保证" class="headerlink" title="质量保证"></a><strong>质量保证</strong></h3><p>这是DevOps中引入的新角色，实际上可以保证产品的质量。通常也称为“体验保证”，此角色是传统测试和质量检查之外的一步。</p>
<p>在此，对产品的功能进行了极限测试，以发现每个缺陷并改善每个独立功能的性能欠佳，因为客户的经验至关重要。这个角色一直在寻找机会，以改善所有功能以提高客户满意度。</p>
<h3 id="安全工程师"><a href="#安全工程师" class="headerlink" title="安全工程师"></a><strong>安全工程师</strong></h3><p>安全工程师与任何其他角色一样重要，因为他们是负责监视产品交付能力的人员。他们与开发人员并肩工作，在过程中更早地嵌入了他们的建议（安全补丁）。</p>
<p>除了外部安全性之外，他们还监视系统以检查其性能，报告系统面临的任何停机时间并深入分析以找出造成该问题的原因。防止再次发生停机或安全风险是安全工程师的一项重要任务。</p>
<p>我希望到目前为止，您对组织中可能存在的各种DevOps角色有了很好的了解。</p>
]]></content>
      <tags>
        <tag>devops</tag>
      </tags>
  </entry>
  <entry>
    <title>HTTP状态码含义</title>
    <url>/2023/02/06/HTTP%E7%8A%B6%E6%80%81%E7%A0%81%E5%90%AB%E4%B9%89/</url>
    <content><![CDATA[<h1 id="HTTP状态码含义"><a href="#HTTP状态码含义" class="headerlink" title="HTTP状态码含义"></a>HTTP状态码含义</h1><h3 id="100"><a href="#100" class="headerlink" title="100"></a>100</h3><p>客户端应当继续发送请求。这个临时响应是用来通知客户端它的部分请求已经被服务器接收，且仍未被拒绝。客户端应当继续发送请求的剩余部分，或者如果请求已经完成，忽略这个响应。服务器必须在请求完成后向客户端发送一个最终响应。</p>
<h3 id="101"><a href="#101" class="headerlink" title="101"></a>101</h3><p>服务器已经理解了客户端的请求，并将通过Upgrade 消息头通知客户端采用不同的协议来完成这个请求。在发送完这个响应最后的空行后，服务器将会切换到在Upgrade 消息头中定义的那些协议。 只有在切换新的协议更有好处的时候才应该采取类似措施。例如，切换到新的HTTP 版本比旧版本更有优势，或者切换到一个实时且同步的协议以传送利用此类特性的资源。</p>
<h3 id="102"><a href="#102" class="headerlink" title="102"></a>102</h3><p>由WebDAV（RFC 2518）扩展的状态码，代表处理将被继续执行。</p>
<h3 id="200"><a href="#200" class="headerlink" title="200"></a>200</h3><p>请求已成功，请求所希望的响应头或数据体将随此响应返回。</p>
<h3 id="201"><a href="#201" class="headerlink" title="201"></a>201</h3><p>请求已经被实现，而且有一个新的资源已经依据请求的需要而建立，且其 URI 已经随Location 头信息返回。假如需要的资源无法及时建立的话，应当返回 ‘202 Accepted’。</p>
<h3 id="202"><a href="#202" class="headerlink" title="202"></a>202</h3><p>服务器已接受请求，但尚未处理。正如它可能被拒绝一样，最终该请求可能会也可能不会被执行。在异步操作的场合下，没有比发送这个状态码更方便的做法了。 返回202状态码的响应的目的是允许服务器接受其他过程的请求（例如某个每天只执行一次的基于批处理的操作），而不必让客户端一直保持与服务器的连接直到批处理操作全部完成。在接受请求处理并返回202状态码的响应应当在返回的实体中包含一些指示处理当前状态的信息，以及指向处理状态监视器或状态预测的指针，以便用户能够估计操作是否已经完成。</p>
<h3 id="203"><a href="#203" class="headerlink" title="203"></a>203</h3><p>服务器已成功处理了请求，但返回的实体头部元信息不是在原始服务器上有效的确定集合，而是来自本地或者第三方的拷贝。当前的信息可能是原始版本的子集或者超集。例如，包含资源的元数据可能导致原始服务器知道元信息的超级。使用此状态码不是必须的，而且只有在响应不使用此状态码便会返回200 OK的情况下才是合适的。</p>
<h3 id="204"><a href="#204" class="headerlink" title="204"></a>204</h3><p>服务器成功处理了请求，但不需要返回任何实体内容，并且希望返回更新了的元信息。响应可能通过实体头部的形式，返回新的或更新后的元信息。如果存在这些头部信息，则应当与所请求的变量相呼应。 如果客户端是浏览器的话，那么用户浏览器应保留发送了该请求的页面，而不产生任何文档视图上的变化，即使按照规范新的或更新后的元信息应当被应用到用户浏览器活动视图中的文档。 由于204响应被禁止包含任何消息体，因此它始终以消息头后的第一个空行结尾。</p>
<h3 id="205"><a href="#205" class="headerlink" title="205"></a>205</h3><p>服务器成功处理了请求，且没有返回任何内容。但是与204响应不同，返回此状态码的响应要求请求者重置文档视图。该响应主要是被用于接受用户输入后，立即重置表单，以便用户能够轻松地开始另一次输入。 与204响应一样，该响应也被禁止包含任何消息体，且以消息头后的第一个空行结束。</p>
<h3 id="206"><a href="#206" class="headerlink" title="206"></a>206</h3><p>服务器已经成功处理了部分 GET 请求。类似于 FlashGet 或者迅雷这类的 HTTP 下载工具都是使用此类响应实现断点续传或者将一个大文档分解为多个下载段同时下载。 该请求必须包含 Range 头信息来指示客户端希望得到的内容范围，并且可能包含 If-Range 来作为请求条件。 响应必须包含如下的头部域： Content-Range 用以指示本次响应中返回的内容的范围；如果是 Content-Type 为 multipart&#x2F;byteranges 的多段下载，则每一 multipart 段中都应包含 Content-Range 域用以指示本段的内容范围。假如响应中包含 Content-Length，那么它的数值必须匹配它返回的内容范围的真实字节数。 Date ETag 和&#x2F;或 Content-Location，假如同样的请求本应该返回200响应。 Expires, Cache-Control，和&#x2F;或 Vary，假如其值可能与之前相同变量的其他响应对应的值不同的话。 假如本响应请求使用了 If-Range 强缓存验证，那么本次响应不应该包含其他实体头；假如本响应的请求使用了 If-Range 弱缓存验证，那么本次响应禁止包含其他实体头；这避免了缓存的实体内容和更新了的实体头信息之间的不一致。否则，本响应就应当包含所有本应该返回200响应中应当返回的所有实体头部域。 假如 ETag 或 Last-Modified 头部不能精确匹配的话，则客户端缓存应禁止将206响应返回的内容与之前任何缓存过的内容组合在一起。 任何不支持 Range 以及 Content-Range 头的缓存都禁止缓存206响应返回的内容。</p>
<h3 id="207"><a href="#207" class="headerlink" title="207"></a>207</h3><p>由WebDAV(RFC 2518)扩展的状态码，代表之后的消息体将是一个XML消息，并且可能依照之前子请求数量的不同，包含一系列独立的响应代码。</p>
<h3 id="300"><a href="#300" class="headerlink" title="300"></a>300</h3><p>被请求的资源有一系列可供选择的回馈信息，每个都有自己特定的地址和浏览器驱动的商议信息。用户或浏览器能够自行选择一个首选的地址进行重定向。 除非这是一个 HEAD 请求，否则该响应应当包括一个资源特性及地址的列表的实体，以便用户或浏览器从中选择最合适的重定向地址。这个实体的格式由 Content-Type 定义的格式所决定。浏览器可能根据响应的格式以及浏览器自身能力，自动作出最合适的选择。当然，RFC 2616规范并没有规定这样的自动选择该如何进行。 如果服务器本身已经有了首选的回馈选择，那么在 Location 中应当指明这个回馈的 URI；浏览器可能会将这个 Location 值作为自动重定向的地址。此外，除非额外指定，否则这个响应也是可缓存的。</p>
<h3 id="301"><a href="#301" class="headerlink" title="301"></a>301</h3><p>被请求的资源已永久移动到新位置，并且将来任何对此资源的引用都应该使用本响应返回的若干个 URI 之一。如果可能，拥有链接编辑功能的客户端应当自动把请求的地址修改为从服务器反馈回来的地址。除非额外指定，否则这个响应也是可缓存的。 新的永久性的 URI 应当在响应的 Location 域中返回。除非这是一个 HEAD 请求，否则响应的实体中应当包含指向新的 URI 的超链接及简短说明。 如果这不是一个 GET 或者 HEAD 请求，因此浏览器禁止自动进行重定向，除非得到用户的确认，因为请求的条件可能因此发生变化。 注意：对于某些使用 HTTP&#x2F;1.0 协议的浏览器，当它们发送的 POST 请求得到了一个301响应的话，接下来的重定向请求将会变成 GET 方式。</p>
<h3 id="302"><a href="#302" class="headerlink" title="302"></a>302</h3><p>请求的资源现在临时从不同的 URI 响应请求。由于这样的重定向是临时的，客户端应当继续向原有地址发送以后的请求。只有在Cache-Control或Expires中进行了指定的情况下，这个响应才是可缓存的。 新的临时性的 URI 应当在响应的 Location 域中返回。除非这是一个 HEAD 请求，否则响应的实体中应当包含指向新的 URI 的超链接及简短说明。 如果这不是一个 GET 或者 HEAD 请求，那么浏览器禁止自动进行重定向，除非得到用户的确认，因为请求的条件可能因此发生变化。 注意：虽然RFC 1945和RFC 2068规范不允许客户端在重定向时改变请求的方法，但是很多现存的浏览器将302响应视作为303响应，并且使用 GET 方式访问在 Location 中规定的 URI，而无视原先请求的方法。状态码303和307被添加了进来，用以明确服务器期待客户端进行何种反应。</p>
<h3 id="303"><a href="#303" class="headerlink" title="303"></a>303</h3><p>对应当前请求的响应可以在另一个 URI 上被找到，而且客户端应当采用 GET 的方式访问那个资源。这个方法的存在主要是为了允许由脚本激活的POST请求输出重定向到一个新的资源。这个新的 URI 不是原始资源的替代引用。同时，303响应禁止被缓存。当然，第二个请求（重定向）可能被缓存。 新的 URI 应当在响应的 Location 域中返回。除非这是一个 HEAD 请求，否则响应的实体中应当包含指向新的 URI 的超链接及简短说明。 注意：许多 HTTP&#x2F;1.1 版以前的 浏览器不能正确理解303状态。如果需要考虑与这些浏览器之间的互动，302状态码应该可以胜任，因为大多数的浏览器处理302响应时的方式恰恰就是上述规范要求客户端处理303响应时应当做的。</p>
<h3 id="304"><a href="#304" class="headerlink" title="304"></a>304</h3><p>如果客户端发送了一个带条件的 GET 请求且该请求已被允许，而文档的内容（自上次访问以来或者根据请求的条件）并没有改变，则服务器应当返回这个状态码。304响应禁止包含消息体，因此始终以消息头后的第一个空行结尾。 该响应必须包含以下的头信息： Date，除非这个服务器没有时钟。假如没有时钟的服务器也遵守这些规则，那么代理服务器以及客户端可以自行将 Date 字段添加到接收到的响应头中去（正如RFC 2068中规定的一样），缓存机制将会正常工作。 ETag 和&#x2F;或 Content-Location，假如同样的请求本应返回200响应。 Expires, Cache-Control，和&#x2F;或Vary，假如其值可能与之前相同变量的其他响应对应的值不同的话。 假如本响应请求使用了强缓存验证，那么本次响应不应该包含其他实体头；否则（例如，某个带条件的 GET 请求使用了弱缓存验证），本次响应禁止包含其他实体头；这避免了缓存了的实体内容和更新了的实体头信息之间的不一致。 假如某个304响应指明了当前某个实体没有缓存，那么缓存系统必须忽视这个响应，并且重复发送不包含限制条件的请求。 假如接收到一个要求更新某个缓存条目的304响应，那么缓存系统必须更新整个条目以反映所有在响应中被更新的字段的值。</p>
<h3 id="305"><a href="#305" class="headerlink" title="305"></a>305</h3><p>被请求的资源必须通过指定的代理才能被访问。Location 域中将给出指定的代理所在的 URI 信息，接收者需要重复发送一个单独的请求，通过这个代理才能访问相应资源。只有原始服务器才能建立305响应。 注意：RFC 2068中没有明确305响应是为了重定向一个单独的请求，而且只能被原始服务器建立。忽视这些限制可能导致严重的安全后果。</p>
<h3 id="306"><a href="#306" class="headerlink" title="306"></a>306</h3><p>在最新版的规范中，306状态码已经不再被使用。</p>
<h3 id="307"><a href="#307" class="headerlink" title="307"></a>307</h3><p>请求的资源现在临时从不同的URI 响应请求。由于这样的重定向是临时的，客户端应当继续向原有地址发送以后的请求。只有在Cache-Control或Expires中进行了指定的情况下，这个响应才是可缓存的。 新的临时性的URI 应当在响应的 Location 域中返回。除非这是一个HEAD 请求，否则响应的实体中应当包含指向新的URI 的超链接及简短说明。因为部分浏览器不能识别307响应，因此需要添加上述必要信息以便用户能够理解并向新的 URI 发出访问请求。 如果这不是一个GET 或者 HEAD 请求，那么浏览器禁止自动进行重定向，除非得到用户的确认，因为请求的条件可能因此发生变化。</p>
<h3 id="400"><a href="#400" class="headerlink" title="400"></a>400</h3><p>1、语义有误，当前请求无法被服务器理解。除非进行修改，否则客户端不应该重复提交这个请求。</p>
<p>2、请求参数有误。</p>
<h3 id="401"><a href="#401" class="headerlink" title="401"></a>401</h3><p>当前请求需要用户验证。该响应必须包含一个适用于被请求资源的 WWW-Authenticate 信息头用以询问用户信息。客户端可以重复提交一个包含恰当的 Authorization 头信息的请求。如果当前请求已经包含了 Authorization 证书，那么401响应代表着服务器验证已经拒绝了那些证书。如果401响应包含了与前一个响应相同的身份验证询问，且浏览器已经至少尝试了一次验证，那么浏览器应当向用户展示响应中包含的实体信息，因为这个实体信息中可能包含了相关诊断信息。参见RFC 2617。</p>
<h3 id="402"><a href="#402" class="headerlink" title="402"></a>402</h3><p>该状态码是为了将来可能的需求而预留的。</p>
<h3 id="403"><a href="#403" class="headerlink" title="403"></a>403</h3><p>服务器已经理解请求，但是拒绝执行它。与401响应不同的是，身份验证并不能提供任何帮助，而且这个请求也不应该被重复提交。如果这不是一个 HEAD 请求，而且服务器希望能够讲清楚为何请求不能被执行，那么就应该在实体内描述拒绝的原因。当然服务器也可以返回一个404响应，假如它不希望让客户端获得任何信息。</p>
<h3 id="404"><a href="#404" class="headerlink" title="404"></a>404</h3><p>请求失败，请求所希望得到的资源未被在服务器上发现。没有信息能够告诉用户这个状况到底是暂时的还是永久的。假如服务器知道情况的话，应当使用410状态码来告知旧资源因为某些内部的配置机制问题，已经永久的不可用，而且没有任何可以跳转的地址。404这个状态码被广泛应用于当服务器不想揭示到底为何请求被拒绝或者没有其他适合的响应可用的情况下。</p>
<h3 id="405"><a href="#405" class="headerlink" title="405"></a>405</h3><p>请求行中指定的请求方法不能被用于请求相应的资源。该响应必须返回一个Allow 头信息用以表示出当前资源能够接受的请求方法的列表。 鉴于 PUT，DELETE 方法会对服务器上的资源进行写操作，因而绝大部分的网页服务器都不支持或者在默认配置下不允许上述请求方法，对于此类请求均会返回405错误。</p>
<h3 id="406"><a href="#406" class="headerlink" title="406"></a>406</h3><p>请求的资源的内容特性无法满足请求头中的条件，因而无法生成响应实体。 除非这是一个 HEAD 请求，否则该响应就应当返回一个包含可以让用户或者浏览器从中选择最合适的实体特性以及地址列表的实体。实体的格式由 Content-Type 头中定义的媒体类型决定。浏览器可以根据格式及自身能力自行作出最佳选择。但是，规范中并没有定义任何作出此类自动选择的标准。 </p>
<h3 id="407"><a href="#407" class="headerlink" title="407"></a>407</h3><p>与401响应类似，只不过客户端必须在代理服务器上进行身份验证。代理服务器必须返回一个 Proxy-Authenticate 用以进行身份询问。客户端可以返回一个 Proxy-Authorization 信息头用以验证。参见RFC 2617。</p>
<h3 id="408"><a href="#408" class="headerlink" title="408"></a>408</h3><p>请求超时。客户端没有在服务器预备等待的时间内完成一个请求的发送。客户端可以随时再次提交这一请求而无需进行任何更改。</p>
<h3 id="409"><a href="#409" class="headerlink" title="409"></a>409</h3><p>由于和被请求的资源的当前状态之间存在冲突，请求无法完成。这个代码只允许用在这样的情况下才能被使用：用户被认为能够解决冲突，并且会重新提交新的请求。该响应应当包含足够的信息以便用户发现冲突的源头。 冲突通常发生于对 PUT 请求的处理中。例如，在采用版本检查的环境下，某次 PUT 提交的对特定资源的修改请求所附带的版本信息与之前的某个（第三方）请求向冲突，那么此时服务器就应该返回一个409错误，告知用户请求无法完成。此时，响应实体中很可能会包含两个冲突版本之间的差异比较，以便用户重新提交归并以后的新版本。</p>
<h3 id="410"><a href="#410" class="headerlink" title="410"></a>410</h3><p>被请求的资源在服务器上已经不再可用，而且没有任何已知的转发地址。这样的状况应当被认为是永久性的。如果可能，拥有链接编辑功能的客户端应当在获得用户许可后删除所有指向这个地址的引用。如果服务器不知道或者无法确定这个状况是否是永久的，那么就应该使用404状态码。除非额外说明，否则这个响应是可缓存的。 410响应的目的主要是帮助网站管理员维护网站，通知用户该资源已经不再可用，并且服务器拥有者希望所有指向这个资源的远端连接也被删除。这类事件在限时、增值服务中很普遍。同样，410响应也被用于通知客户端在当前服务器站点上，原本属于某个个人的资源已经不再可用。当然，是否需要把所有永久不可用的资源标记为’410 Gone’，以及是否需要保持此标记多长时间，完全取决于服务器拥有者。</p>
<h3 id="411"><a href="#411" class="headerlink" title="411"></a>411</h3><p>服务器拒绝在没有定义 Content-Length 头的情况下接受请求。在添加了表明请求消息体长度的有效 Content-Length 头之后，客户端可以再次提交该请求。</p>
<h3 id="412"><a href="#412" class="headerlink" title="412"></a>412</h3><p>服务器在验证在请求的头字段中给出先决条件时，没能满足其中的一个或多个。这个状态码允许客户端在获取资源时在请求的元信息（请求头字段数据）中设置先决条件，以此避免该请求方法被应用到其希望的内容以外的资源上。</p>
<h3 id="413"><a href="#413" class="headerlink" title="413"></a>413</h3><p>服务器拒绝处理当前请求，因为该请求提交的实体数据大小超过了服务器愿意或者能够处理的范围。此种情况下，服务器可以关闭连接以免客户端继续发送此请求。 如果这个状况是临时的，服务器应当返回一个 Retry-After 的响应头，以告知客户端可以在多少时间以后重新尝试。</p>
<h3 id="414"><a href="#414" class="headerlink" title="414"></a>414</h3><p>请求的URI 长度超过了服务器能够解释的长度，因此服务器拒绝对该请求提供服务。这比较少见，通常的情况包括： 本应使用POST方法的表单提交变成了GET方法，导致查询字符串（Query String）过长。 重定向URI “黑洞”，例如每次重定向把旧的 URI 作为新的 URI 的一部分，导致在若干次重定向后 URI 超长。 客户端正在尝试利用某些服务器中存在的安全漏洞攻击服务器。这类服务器使用固定长度的缓冲读取或操作请求的 URI，当 GET 后的参数超过某个数值后，可能会产生缓冲区溢出，导致任意代码被执行[1]。没有此类漏洞的服务器，应当返回414状态码。</p>
<h3 id="415"><a href="#415" class="headerlink" title="415"></a>415</h3><p>对于当前请求的方法和所请求的资源，请求中提交的实体并不是服务器中所支持的格式，因此请求被拒绝。</p>
<h3 id="416"><a href="#416" class="headerlink" title="416"></a>416</h3><p>如果请求中包含了 Range 请求头，并且 Range 中指定的任何数据范围都与当前资源的可用范围不重合，同时请求中又没有定义 If-Range 请求头，那么服务器就应当返回416状态码。 假如 Range 使用的是字节范围，那么这种情况就是指请求指定的所有数据范围的首字节位置都超过了当前资源的长度。服务器也应当在返回416状态码的同时，包含一个 Content-Range 实体头，用以指明当前资源的长度。这个响应也被禁止使用 multipart&#x2F;byteranges 作为其 Content-Type。</p>
<h3 id="417"><a href="#417" class="headerlink" title="417"></a>417</h3><p>在请求头 Expect 中指定的预期内容无法被服务器满足，或者这个服务器是一个代理服务器，它有明显的证据证明在当前路由的下一个节点上，Expect 的内容无法被满足。</p>
<h3 id="421"><a href="#421" class="headerlink" title="421"></a>421</h3><p>从当前客户端所在的IP地址到服务器的连接数超过了服务器许可的最大范围。通常，这里的IP地址指的是从服务器上看到的客户端地址（比如用户的网关或者代理服务器地址）。在这种情况下，连接数的计算可能涉及到不止一个终端用户。</p>
<h3 id="422"><a href="#422" class="headerlink" title="422"></a>422</h3><p>请求格式正确，但是由于含有语义错误，无法响应。（RFC 4918 WebDAV）423 Locked 当前资源被锁定。（RFC 4918 WebDAV）</p>
<h3 id="424"><a href="#424" class="headerlink" title="424"></a>424</h3><p>由于之前的某个请求发生的错误，导致当前请求失败，例如 PROPPATCH。（RFC 4918 WebDAV）</p>
<h3 id="425"><a href="#425" class="headerlink" title="425"></a>425</h3><p>在WebDav Advanced Collections 草案中定义，但是未出现在《WebDAV 顺序集协议》（RFC 3658）中。</p>
<h3 id="426"><a href="#426" class="headerlink" title="426"></a>426</h3><p>客户端应当切换到TLS&#x2F;1.0。（RFC 2817）</p>
<h3 id="449"><a href="#449" class="headerlink" title="449"></a>449</h3><p>由微软扩展，代表请求应当在执行完适当的操作后进行重试。</p>
<h3 id="500"><a href="#500" class="headerlink" title="500"></a>500</h3><p>服务器遇到了一个未曾预料的状况，导致了它无法完成对请求的处理。一般来说，这个问题都会在服务器的程序码出错时出现。</p>
<h3 id="501"><a href="#501" class="headerlink" title="501"></a>501</h3><p>服务器不支持当前请求所需要的某个功能。当服务器无法识别请求的方法，并且无法支持其对任何资源的请求。</p>
<h3 id="502"><a href="#502" class="headerlink" title="502"></a>502</h3><p>作为网关或者代理工作的服务器尝试执行请求时，从上游服务器接收到无效的响应。</p>
<h3 id="503"><a href="#503" class="headerlink" title="503"></a>503</h3><p>由于临时的服务器维护或者过载，服务器当前无法处理请求。这个状况是临时的，并且将在一段时间以后恢复。如果能够预计延迟时间，那么响应中可以包含一个 Retry-After 头用以标明这个延迟时间。如果没有给出这个 Retry-After 信息，那么客户端应当以处理500响应的方式处理它。 注意：503状态码的存在并不意味着服务器在过载的时候必须使用它。某些服务器只不过是希望拒绝客户端的连接。</p>
<h3 id="504"><a href="#504" class="headerlink" title="504"></a>504</h3><p>作为网关或者代理工作的服务器尝试执行请求时，未能及时从上游服务器（URI标识出的服务器，例如HTTP、FTP、LDAP）或者辅助服务器（例如DNS）收到响应。 注意：某些代理服务器在DNS查询超时时会返回400或者500错误</p>
<h3 id="505"><a href="#505" class="headerlink" title="505"></a>505</h3><p>服务器不支持，或者拒绝支持在请求中使用的 HTTP 版本。这暗示着服务器不能或不愿使用与客户端相同的版本。响应中应当包含一个描述了为何版本不被支持以及服务器支持哪些协议的实体。</p>
<h3 id="506"><a href="#506" class="headerlink" title="506"></a>506</h3><p>由《透明内容协商协议》（RFC 2295）扩展，代表服务器存在内部配置错误：被请求的协商变元资源被配置为在透明内容协商中使用自己，因此在一个协商处理中不是一个合适的重点。</p>
<h3 id="507"><a href="#507" class="headerlink" title="507"></a>507</h3><p>服务器无法存储完成请求所必须的内容。这个状况被认为是临时的。WebDAV (RFC 4918)</p>
<h3 id="509"><a href="#509" class="headerlink" title="509"></a>509</h3><p>服务器达到带宽限制。这不是一个官方的状态码，但是仍被广泛使用</p>
<h3 id="510"><a href="#510" class="headerlink" title="510"></a>510</h3><p>获取资源所需要的策略并没有没满足。（RFC 2774）</p>
]]></content>
      <tags>
        <tag>http</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux 目录结构</title>
    <url>/2019/09/19/Linux%20%E7%9B%AE%E5%BD%95%E7%BB%93%E6%9E%84/</url>
    <content><![CDATA[<p>bin<br>bin 是 Binaries (二进制文件) 的缩写, 这个目录存放着最经常使用的命令。</p>
<p>boot<br>这里存放的是启动 Linux 时使用的一些核心文件，包括一些连接文件以及镜像文件。</p>
<p>dev<br>dev 是 Device(设备) 的缩写, 该目录下存放的是 Linux 的外部设备，在 Linux 中访问设备的方式和访问文件的方式是相同的。</p>
<p>etc<br>etc 是 Etcetera(等等) 的缩写,这个目录用来存放所有的系统管理所需要的配置文件和子目录。</p>
<p>home<br>用户的主目录，在 Linux 中，每个用户都有一个自己的目录，一般该目录名是以用户的账号命名的</p>
<p>lib<br>lib 是 Library(库) 的缩写这个目录里存放着系统最基本的动态连接共享库，其作用类似于 Windows 里的 DLL 文件。几乎所有的应用程序都需要用到这些共享库。</p>
<p>通过&#x2F;bin和&#x2F;sbin中的二进制文件。</p>
<p><a class="link"   href="https://qastack.cn/unix/74646/difference-between-lib-lib32-lib64-libx32-and-libexec" >https://qastack.cn/unix/74646/difference-between-lib-lib32-lib64-libx32-and-libexec<i class="fas fa-external-link-alt"></i></a></p>
<p>lib64<br>存放64位lib库</p>
<p>&#x2F;lost+found：<br>这个目录一般情况下是空的，当系统非法关机后，这里就存放了一些文件。</p>
<p>media<br>linux 系统会自动识别一些设备，例如U盘、光驱等等，当识别后，Linux 会把识别的设备挂载到这个目录下。</p>
<p>mnt<br>系统提供该目录是为了让用户临时挂载别的文件系统的，我们可以将光驱挂载在 &#x2F;mnt&#x2F; 上，然后进入该目录就可以查看光驱里的内容了。</p>
<p>opt<br>opt 是 optional(可选) 的缩写，这是给主机额外安装软件所摆放的目录。比如你安装一个ORACLE数据库则就可以放到这个目录下。默认是空的。</p>
<p>proc<br>proc 是 Processes(进程) 的缩写，&#x2F;proc 是一种伪文件系统（也即虚拟文件系统），存储的是当前内核运行状态的一系列特殊文件，这个目录是一个虚拟的目录，它是系统内存的映射，我们可以通过直接访问这个目录来获取系统信息。</p>
<p>这个目录的内容不在硬盘上而是在内存里，我们也可以直接修改里面的某些文件，比如可以通过下面的命令来屏蔽主机的ping命令，使别人无法ping你的机器：<br>echo 1 &gt; &#x2F;proc&#x2F;sys&#x2F;net&#x2F;ipv4&#x2F;icmp_echo_ignore_all</p>
<p>root<br>该目录为系统管理员，也称作超级权限者的用户主目录。</p>
<p>run<br>是一个临时文件系统，存储系统启动以来的信息。当系统重启时，这个目录下的文件应该被删掉或清除。如果你的系统上有 &#x2F;var&#x2F;run 目录，应该让它指向 run。</p>
<p>sbin<br>s 就是 Super User 的意思，是 Superuser Binaries (超级用户的二进制文件)的缩写，这里存放的是系统管理员使用的系统管理程序。</p>
<p>&#x2F;selinux：<br> 这个目录是 Redhat&#x2F;CentOS 所特有的目录，Selinux 是一个安全机制，类似于 windows 的防火墙，但是这套机制比较复杂，这个目录就是存放selinux相关的文件的。</p>
<p>src</p>
<p>srv<br>该目录存放一些服务启动之后需要提取的数据。</p>
<p>sys<br>这是 Linux2.6 内核的一个很大的变化。该目录下安装了<br>2.6 内核中新出现的一个文件系统 sysfs 。</p>
<p>sysfs 文件系统集成了下面3种文件系统的信息：<br>针对进程信息的 proc 文件系统、<br>针对设备的 devfs 文件系统<br>以及针对伪终端的 devpts 文件系统。</p>
<p>该文件系统是内核设备树的一个直观反映。</p>
<p>当一个内核对象被创建的时候，对应的文件和目录也在内核对象子系统中被创建。</p>
<p>tmp<br>tmp 是 temporary(临时) 的缩写这个目录是用来存放一些临时文件的。</p>
<p>usr<br>usr 是 unix shared resources(共享资源) 的缩写，这是一个非常重要的目录，用户的很多应用程序和文件都放在这个目录下，类似于 windows 下的 program files 目录。</p>
<p>var<br>var 是 variable(变量) 的缩写，这个目录中存放着在不断扩充着的东西，我们习惯将那些经常被修改的目录放在这个目录下。包括各种日志文件。</p>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux 系统日常巡检脚本</title>
    <url>/2023/02/04/Linux%20%E7%B3%BB%E7%BB%9F%E6%97%A5%E5%B8%B8%E5%B7%A1%E6%A3%80%E8%84%9A%E6%9C%AC2021/</url>
    <content><![CDATA[<h3 id="主要巡检内容"><a href="#主要巡检内容" class="headerlink" title="主要巡检内容:"></a>主要巡检内容:</h3><p>磁盘、内存、cpu、进程、文件更改、用户登录等一系列的操作，开箱即用。报告以邮件发送到邮箱 在log下生成巡检报告。</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token shebang important">#!/bin/bash</span>
<span class="token comment"># @Author: xiaochong2021</span>
<span class="token comment"># @Date:   2021-11-23 09:56:57</span>
<span class="token comment"># @Last Modified by:   xiaochong2021</span>
<span class="token comment"># @Last Modified time: 2021-11-23 11:56:57</span>
<span class="token comment"># @E-mail: 1530860548@qq.com</span>

<span class="token comment">#!/bin/bash</span>
<span class="token comment">#主机信息每日巡检</span>

<span class="token assign-left variable">IPADDR</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">ifconfig</span> eth0<span class="token operator">|</span><span class="token function">grep</span> <span class="token string">'inet addr'</span><span class="token operator">|</span><span class="token function">awk</span> <span class="token parameter variable">-F</span> <span class="token string">'[ :]'</span> <span class="token string">'&#123;print $13&#125;'</span><span class="token variable">)</span></span>
<span class="token comment">#环境变量PATH没设好，在cron里执行时有很多命令会找不到</span>
<span class="token builtin class-name">export</span> <span class="token assign-left variable"><span class="token environment constant">PATH</span></span><span class="token operator">=</span>/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin:/root/bin
<span class="token builtin class-name">source</span> /etc/profile

<span class="token punctuation">[</span> <span class="token variable"><span class="token variable">$(</span><span class="token function">id</span> <span class="token parameter variable">-u</span><span class="token variable">)</span></span> <span class="token parameter variable">-gt</span> <span class="token number">0</span> <span class="token punctuation">]</span> <span class="token operator">&amp;&amp;</span> <span class="token builtin class-name">echo</span> <span class="token string">"请用root用户执行此脚本！"</span> <span class="token operator">&amp;&amp;</span> <span class="token builtin class-name">exit</span> <span class="token number">1</span>
<span class="token assign-left variable">centosVersion</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">awk</span> <span class="token string">'&#123;print $(NF-1)&#125;'</span> /etc/redhat-release<span class="token variable">)</span></span>
<span class="token assign-left variable">VERSION</span><span class="token operator">=</span><span class="token string">"2021-11-23"</span>

<span class="token comment">#日志相关</span>
<span class="token assign-left variable">PROGPATH</span><span class="token operator">=</span><span class="token variable"><span class="token variable">`</span><span class="token builtin class-name">echo</span> $0 <span class="token operator">|</span> <span class="token function">sed</span> <span class="token parameter variable">-e</span> <span class="token string">'s,[\\/][^\\/][^\\/]*$,,'</span><span class="token variable">`</span></span>
<span class="token punctuation">[</span> <span class="token parameter variable">-f</span> <span class="token variable">$PROGPATH</span> <span class="token punctuation">]</span> <span class="token operator">&amp;&amp;</span> <span class="token assign-left variable">PROGPATH</span><span class="token operator">=</span><span class="token string">"."</span>
<span class="token assign-left variable">LOGPATH</span><span class="token operator">=</span><span class="token string">"<span class="token variable">$PROGPATH</span>/log"</span>
<span class="token punctuation">[</span> <span class="token parameter variable">-e</span> <span class="token variable">$LOGPATH</span> <span class="token punctuation">]</span> <span class="token operator">||</span> <span class="token function">mkdir</span> <span class="token variable">$LOGPATH</span>
<span class="token assign-left variable">RESULTFILE</span><span class="token operator">=</span><span class="token string">"<span class="token variable">$LOGPATH</span>/HostDailyCheck-<span class="token variable">$IPADDR</span>-<span class="token variable"><span class="token variable">`</span><span class="token function">date</span> +%Y%m%d<span class="token variable">`</span></span>.txt"</span>


<span class="token comment">#定义报表的全局变量</span>
<span class="token assign-left variable">report_DateTime</span><span class="token operator">=</span><span class="token string">""</span> <span class="token comment">#日期 ok</span>
<span class="token assign-left variable">report_Hostname</span><span class="token operator">=</span><span class="token string">""</span> <span class="token comment">#主机名 ok</span>
<span class="token assign-left variable">report_OSRelease</span><span class="token operator">=</span><span class="token string">""</span> <span class="token comment">#发行版本 ok</span>
<span class="token assign-left variable">report_Kernel</span><span class="token operator">=</span><span class="token string">""</span> <span class="token comment">#内核 ok</span>
<span class="token assign-left variable">report_Language</span><span class="token operator">=</span><span class="token string">""</span> <span class="token comment">#语言/编码 ok</span>
<span class="token assign-left variable">report_LastReboot</span><span class="token operator">=</span><span class="token string">""</span> <span class="token comment">#最近启动时间 ok</span>
<span class="token assign-left variable">report_Uptime</span><span class="token operator">=</span><span class="token string">""</span> <span class="token comment">#运行时间（天） ok</span>
<span class="token assign-left variable">report_CPUs</span><span class="token operator">=</span><span class="token string">""</span> <span class="token comment">#CPU数量 ok</span>
<span class="token assign-left variable">report_CPUType</span><span class="token operator">=</span><span class="token string">""</span> <span class="token comment">#CPU类型 ok</span>
<span class="token assign-left variable">report_Arch</span><span class="token operator">=</span><span class="token string">""</span> <span class="token comment">#CPU架构 ok</span>
<span class="token assign-left variable">report_MemTotal</span><span class="token operator">=</span><span class="token string">""</span> <span class="token comment">#内存总容量(MB) ok</span>
<span class="token assign-left variable">report_MemFree</span><span class="token operator">=</span><span class="token string">""</span> <span class="token comment">#内存剩余(MB) ok</span>
<span class="token assign-left variable">report_MemUsedPercent</span><span class="token operator">=</span><span class="token string">""</span> <span class="token comment">#内存使用率% ok</span>
<span class="token assign-left variable">report_DiskTotal</span><span class="token operator">=</span><span class="token string">""</span> <span class="token comment">#硬盘总容量(GB) ok</span>
<span class="token assign-left variable">report_DiskFree</span><span class="token operator">=</span><span class="token string">""</span> <span class="token comment">#硬盘剩余(GB) ok</span>
<span class="token assign-left variable">report_DiskUsedPercent</span><span class="token operator">=</span><span class="token string">""</span> <span class="token comment">#硬盘使用率% ok</span>
<span class="token assign-left variable">report_InodeTotal</span><span class="token operator">=</span><span class="token string">""</span> <span class="token comment">#Inode总量 ok</span>
<span class="token assign-left variable">report_InodeFree</span><span class="token operator">=</span><span class="token string">""</span> <span class="token comment">#Inode剩余 ok</span>
<span class="token assign-left variable">report_InodeUsedPercent</span><span class="token operator">=</span><span class="token string">""</span> <span class="token comment">#Inode使用率 ok</span>
<span class="token assign-left variable">report_IP</span><span class="token operator">=</span><span class="token string">""</span> <span class="token comment">#IP地址 ok</span>
<span class="token assign-left variable">report_MAC</span><span class="token operator">=</span><span class="token string">""</span> <span class="token comment">#MAC地址 ok</span>
<span class="token assign-left variable">report_Gateway</span><span class="token operator">=</span><span class="token string">""</span> <span class="token comment">#默认网关 ok</span>
<span class="token assign-left variable">report_DNS</span><span class="token operator">=</span><span class="token string">""</span> <span class="token comment">#DNS ok</span>
<span class="token assign-left variable">report_Listen</span><span class="token operator">=</span><span class="token string">""</span> <span class="token comment">#监听 ok</span>
<span class="token assign-left variable">report_Selinux</span><span class="token operator">=</span><span class="token string">""</span> <span class="token comment">#Selinux ok</span>
<span class="token assign-left variable">report_Firewall</span><span class="token operator">=</span><span class="token string">""</span> <span class="token comment">#防火墙 ok</span>
<span class="token assign-left variable">report_USERs</span><span class="token operator">=</span><span class="token string">""</span> <span class="token comment">#用户 ok</span>
<span class="token assign-left variable">report_USEREmptyPassword</span><span class="token operator">=</span><span class="token string">""</span> <span class="token comment">#空密码用户 ok</span>
<span class="token assign-left variable">report_USERTheSameUID</span><span class="token operator">=</span><span class="token string">""</span> <span class="token comment">#相同ID的用户 ok </span>
<span class="token assign-left variable">report_PasswordExpiry</span><span class="token operator">=</span><span class="token string">""</span> <span class="token comment">#密码过期（天） ok</span>
<span class="token assign-left variable">report_RootUser</span><span class="token operator">=</span><span class="token string">""</span> <span class="token comment">#root用户 ok</span>
<span class="token assign-left variable">report_Sudoers</span><span class="token operator">=</span><span class="token string">""</span> <span class="token comment">#sudo授权 ok</span>
<span class="token assign-left variable">report_SSHAuthorized</span><span class="token operator">=</span><span class="token string">""</span> <span class="token comment">#SSH信任主机 ok</span>
<span class="token assign-left variable">report_SSHDProtocolVersion</span><span class="token operator">=</span><span class="token string">""</span> <span class="token comment">#SSH协议版本 ok</span>
<span class="token assign-left variable">report_SSHDPermitRootLogin</span><span class="token operator">=</span><span class="token string">""</span> <span class="token comment">#允许root远程登录 ok</span>
<span class="token assign-left variable">report_DefunctProsess</span><span class="token operator">=</span><span class="token string">""</span> <span class="token comment">#僵尸进程数量 ok</span>
<span class="token assign-left variable">report_SelfInitiatedService</span><span class="token operator">=</span><span class="token string">""</span> <span class="token comment">#自启动服务数量 ok</span>
<span class="token assign-left variable">report_SelfInitiatedProgram</span><span class="token operator">=</span><span class="token string">""</span> <span class="token comment">#自启动程序数量 ok</span>
<span class="token assign-left variable">report_RuningService</span><span class="token operator">=</span><span class="token string">""</span> <span class="token comment">#运行中服务数 ok</span>
<span class="token assign-left variable">report_Crontab</span><span class="token operator">=</span><span class="token string">""</span> <span class="token comment">#计划任务数 ok</span>
<span class="token assign-left variable">report_Syslog</span><span class="token operator">=</span><span class="token string">""</span> <span class="token comment">#日志服务 ok</span>
<span class="token assign-left variable">report_SNMP</span><span class="token operator">=</span><span class="token string">""</span> <span class="token comment">#SNMP OK</span>
<span class="token assign-left variable">report_NTP</span><span class="token operator">=</span><span class="token string">""</span> <span class="token comment">#NTP ok</span>
<span class="token assign-left variable">report_JDK</span><span class="token operator">=</span><span class="token string">""</span> <span class="token comment">#JDK版本 ok</span>
<span class="token keyword">function</span> <span class="token function-name function">version</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
<span class="token builtin class-name">echo</span> <span class="token string">""</span>
<span class="token builtin class-name">echo</span> <span class="token string">""</span>
<span class="token builtin class-name">echo</span> <span class="token string">"系统巡检脚本：Version <span class="token variable">$VERSION</span>"</span>
<span class="token punctuation">&#125;</span>

<span class="token keyword">function</span> <span class="token function-name function">getCpuStatus</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
<span class="token builtin class-name">echo</span> <span class="token string">""</span>
<span class="token builtin class-name">echo</span> <span class="token string">""</span>
<span class="token builtin class-name">echo</span> <span class="token string">"############################ CPU检查 #############################"</span>
<span class="token assign-left variable">Physical_CPUs</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">grep</span> <span class="token string">"physical id"</span> /proc/cpuinfo<span class="token operator">|</span> <span class="token function">sort</span> <span class="token operator">|</span> <span class="token function">uniq</span> <span class="token operator">|</span> <span class="token function">wc</span> <span class="token parameter variable">-l</span><span class="token variable">)</span></span>
<span class="token assign-left variable">Virt_CPUs</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">grep</span> <span class="token string">"processor"</span> /proc/cpuinfo <span class="token operator">|</span> <span class="token function">wc</span> <span class="token parameter variable">-l</span><span class="token variable">)</span></span>
<span class="token assign-left variable">CPU_Kernels</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">grep</span> <span class="token string">"cores"</span> /proc/cpuinfo<span class="token operator">|</span><span class="token function">uniq</span><span class="token operator">|</span> <span class="token function">awk</span> <span class="token parameter variable">-F</span> <span class="token string">': '</span> <span class="token string">'&#123;print $2&#125;'</span><span class="token variable">)</span></span>
<span class="token assign-left variable">CPU_Type</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">grep</span> <span class="token string">"model name"</span> /proc/cpuinfo <span class="token operator">|</span> <span class="token function">awk</span> <span class="token parameter variable">-F</span> <span class="token string">': '</span> <span class="token string">'&#123;print $2&#125;'</span> <span class="token operator">|</span> <span class="token function">sort</span> <span class="token operator">|</span> <span class="token function">uniq</span><span class="token variable">)</span></span>
<span class="token assign-left variable">CPU_Arch</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">uname</span> <span class="token parameter variable">-m</span><span class="token variable">)</span></span>
<span class="token builtin class-name">echo</span> <span class="token string">"物理CPU个数:<span class="token variable">$Physical_CPUs</span>"</span>
<span class="token builtin class-name">echo</span> <span class="token string">"逻辑CPU个数:<span class="token variable">$Virt_CPUs</span>"</span>
<span class="token builtin class-name">echo</span> <span class="token string">"每CPU核心数:<span class="token variable">$CPU_Kernels</span>"</span>
<span class="token builtin class-name">echo</span> <span class="token string">" CPU型号:<span class="token variable">$CPU_Type</span>"</span>
<span class="token builtin class-name">echo</span> <span class="token string">" CPU架构:<span class="token variable">$CPU_Arch</span>"</span>
<span class="token comment">#报表信息</span>
<span class="token assign-left variable">report_CPUs</span><span class="token operator">=</span><span class="token variable">$Virt_CPUs</span> <span class="token comment">#CPU数量</span>
<span class="token assign-left variable">report_CPUType</span><span class="token operator">=</span><span class="token variable">$CPU_Type</span> <span class="token comment">#CPU类型</span>
<span class="token assign-left variable">report_Arch</span><span class="token operator">=</span><span class="token variable">$CPU_Arch</span> <span class="token comment">#CPU架构</span>
<span class="token punctuation">&#125;</span>

<span class="token keyword">function</span> <span class="token function-name function">getMemStatus</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
<span class="token builtin class-name">echo</span> <span class="token string">""</span>
<span class="token builtin class-name">echo</span> <span class="token string">""</span>
<span class="token builtin class-name">echo</span> <span class="token string">"############################ 内存检查 ############################"</span>
<span class="token keyword">if</span> <span class="token punctuation">[</span><span class="token punctuation">[</span> <span class="token variable">$centosVersion</span> <span class="token operator">&lt;</span> <span class="token number">7</span> <span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">then</span>
<span class="token function">free</span> <span class="token parameter variable">-mo</span>
<span class="token keyword">else</span>
<span class="token function">free</span> <span class="token parameter variable">-h</span>
<span class="token keyword">fi</span>
<span class="token comment">#报表信息</span>
<span class="token assign-left variable">MemTotal</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">grep</span> MemTotal /proc/meminfo<span class="token operator">|</span> <span class="token function">awk</span> <span class="token string">'&#123;print $2&#125;'</span><span class="token variable">)</span></span> <span class="token comment">#KB</span>
<span class="token assign-left variable">MemFree</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">grep</span> MemFree /proc/meminfo<span class="token operator">|</span> <span class="token function">awk</span> <span class="token string">'&#123;print $2&#125;'</span><span class="token variable">)</span></span> <span class="token comment">#KB</span>
<span class="token builtin class-name">let</span> <span class="token assign-left variable">MemUsed</span><span class="token operator">=</span>MemTotal-MemFree
<span class="token assign-left variable">MemPercent</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">awk</span> <span class="token string">"BEGIN &#123;if(<span class="token variable">$MemTotal</span>==0)&#123;printf 100&#125;else&#123;printf <span class="token entity" title="\&quot;">\"</span>%.2f<span class="token entity" title="\&quot;">\"</span>,<span class="token variable">$MemUsed</span>*100/<span class="token variable">$MemTotal</span>&#125;&#125;"</span><span class="token variable">)</span></span>
<span class="token assign-left variable">report_MemTotal</span><span class="token operator">=</span><span class="token string">"<span class="token variable"><span class="token variable">$((</span>MemTotal<span class="token operator">/</span><span class="token number">1024</span><span class="token variable">))</span></span>"</span>"MB<span class="token string">" #内存总容量(MB)
report_MemFree="</span><span class="token variable"><span class="token variable">$((</span>MemFree<span class="token operator">/</span><span class="token number">1024</span><span class="token variable">))</span></span><span class="token string">""</span>MB<span class="token string">" #内存剩余(MB)
report_MemUsedPercent="</span><span class="token variable"><span class="token variable">$(</span><span class="token function">awk</span> <span class="token string">"BEGIN &#123;if(<span class="token variable">$MemTotal</span>==0)&#123;printf 100&#125;else&#123;printf <span class="token entity" title="\&quot;">\"</span>%.2f<span class="token entity" title="\&quot;">\"</span>,<span class="token variable">$MemUsed</span>*100/<span class="token variable">$MemTotal</span>&#125;&#125;"</span><span class="token variable">)</span></span><span class="token string">""</span>%<span class="token string">" #内存使用率%
&#125;
function getDiskStatus()&#123;
echo "</span>"
<span class="token builtin class-name">echo</span> <span class="token string">""</span>
<span class="token builtin class-name">echo</span> <span class="token string">"############################ 磁盘检查 ############################"</span>
<span class="token function">df</span> <span class="token parameter variable">-hiP</span> <span class="token operator">|</span> <span class="token function">sed</span> <span class="token string">'s/Mounted on/Mounted/'</span><span class="token operator">></span> /tmp/inode
<span class="token function">df</span> <span class="token parameter variable">-hTP</span> <span class="token operator">|</span> <span class="token function">sed</span> <span class="token string">'s/Mounted on/Mounted/'</span><span class="token operator">></span> /tmp/disk 
<span class="token function">join</span> /tmp/disk /tmp/inode <span class="token operator">|</span> <span class="token function">awk</span> <span class="token string">'&#123;print $1,$2,"|",$3,$4,$5,$6,"|",$8,$9,$10,$11,"|",$12&#125;'</span><span class="token operator">|</span> <span class="token function">column</span> <span class="token parameter variable">-t</span>
<span class="token comment">#报表信息</span>
<span class="token assign-left variable">diskdata</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">df</span> <span class="token parameter variable">-TP</span> <span class="token operator">|</span> <span class="token function">sed</span> <span class="token string">'1d'</span> <span class="token operator">|</span> <span class="token function">awk</span> <span class="token string">'$2!="tmpfs"&#123;print&#125;'</span><span class="token variable">)</span></span> <span class="token comment">#KB</span>
<span class="token assign-left variable">disktotal</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token builtin class-name">echo</span> <span class="token string">"<span class="token variable">$diskdata</span>"</span> <span class="token operator">|</span> <span class="token function">awk</span> <span class="token string">'&#123;total+=$3&#125;END&#123;print total&#125;'</span><span class="token variable">)</span></span> <span class="token comment">#KB</span>
<span class="token assign-left variable">diskused</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token builtin class-name">echo</span> <span class="token string">"<span class="token variable">$diskdata</span>"</span> <span class="token operator">|</span> <span class="token function">awk</span> <span class="token string">'&#123;total+=$4&#125;END&#123;print total&#125;'</span><span class="token variable">)</span></span> <span class="token comment">#KB</span>
<span class="token assign-left variable">diskfree</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$((</span>disktotal<span class="token operator">-</span>diskused<span class="token variable">))</span></span> <span class="token comment">#KB</span>
<span class="token assign-left variable">diskusedpercent</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token builtin class-name">echo</span> $disktotal $diskused <span class="token operator">|</span> <span class="token function">awk</span> <span class="token string">'&#123;if($1==0)&#123;printf 100&#125;else&#123;printf "%.2f",$2*100/$1&#125;&#125;'</span><span class="token variable">)</span></span> 
<span class="token assign-left variable">inodedata</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">df</span> <span class="token parameter variable">-iTP</span> <span class="token operator">|</span> <span class="token function">sed</span> <span class="token string">'1d'</span> <span class="token operator">|</span> <span class="token function">awk</span> <span class="token string">'$2!="tmpfs"&#123;print&#125;'</span><span class="token variable">)</span></span>
<span class="token assign-left variable">inodetotal</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token builtin class-name">echo</span> <span class="token string">"<span class="token variable">$inodedata</span>"</span> <span class="token operator">|</span> <span class="token function">awk</span> <span class="token string">'&#123;total+=$3&#125;END&#123;print total&#125;'</span><span class="token variable">)</span></span>
<span class="token assign-left variable">inodeused</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token builtin class-name">echo</span> <span class="token string">"<span class="token variable">$inodedata</span>"</span> <span class="token operator">|</span> <span class="token function">awk</span> <span class="token string">'&#123;total+=$4&#125;END&#123;print total&#125;'</span><span class="token variable">)</span></span>
<span class="token assign-left variable">inodefree</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$((</span>inodetotal<span class="token operator">-</span>inodeused<span class="token variable">))</span></span>
<span class="token assign-left variable">inodeusedpercent</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token builtin class-name">echo</span> $inodetotal $inodeused <span class="token operator">|</span> <span class="token function">awk</span> <span class="token string">'&#123;if($1==0)&#123;printf 100&#125;else&#123;printf "%.2f",$2*100/$1&#125;&#125;'</span><span class="token variable">)</span></span>
<span class="token assign-left variable">report_DiskTotal</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$((</span>disktotal<span class="token operator">/</span><span class="token number">1024</span><span class="token operator">/</span><span class="token number">1024</span><span class="token variable">))</span></span><span class="token string">"GB"</span> <span class="token comment">#硬盘总容量(GB)</span>
<span class="token assign-left variable">report_DiskFree</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$((</span>diskfree<span class="token operator">/</span><span class="token number">1024</span><span class="token operator">/</span><span class="token number">1024</span><span class="token variable">))</span></span><span class="token string">"GB"</span> <span class="token comment">#硬盘剩余(GB)</span>
<span class="token assign-left variable">report_DiskUsedPercent</span><span class="token operator">=</span><span class="token string">"<span class="token variable">$diskusedpercent</span>"</span>"%<span class="token string">" #硬盘使用率%
report_InodeTotal=<span class="token variable"><span class="token variable">$((</span>inodetotal<span class="token operator">/</span><span class="token number">1000</span><span class="token variable">))</span></span>"</span>K<span class="token string">" #Inode总量
report_InodeFree=<span class="token variable"><span class="token variable">$((</span>inodefree<span class="token operator">/</span><span class="token number">1000</span><span class="token variable">))</span></span>"</span>K<span class="token string">" #Inode剩余
report_InodeUsedPercent="</span><span class="token variable">$inodeusedpercent</span><span class="token string">""</span>%<span class="token string">" #Inode使用率%

&#125;

function getSystemStatus()&#123;
echo "</span>"
<span class="token builtin class-name">echo</span> <span class="token string">""</span>
<span class="token builtin class-name">echo</span> <span class="token string">"############################ 系统检查 ############################"</span>
<span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token parameter variable">-e</span> /etc/sysconfig/i18n <span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">then</span>
<span class="token assign-left variable">default_LANG</span><span class="token operator">=</span><span class="token string">"<span class="token variable"><span class="token variable">$(</span><span class="token function">grep</span> <span class="token string">"LANG="</span> /etc/sysconfig/i18n <span class="token operator">|</span> <span class="token function">grep</span> <span class="token parameter variable">-v</span> <span class="token string">"^#"</span> <span class="token operator">|</span> <span class="token function">awk</span> <span class="token parameter variable">-F</span> <span class="token string">'"'</span> <span class="token string">'&#123;print $2&#125;'</span><span class="token variable">)</span></span>"</span>
<span class="token keyword">else</span>
<span class="token assign-left variable">default_LANG</span><span class="token operator">=</span><span class="token environment constant">$LANG</span>
<span class="token keyword">fi</span>
<span class="token builtin class-name">export</span> <span class="token assign-left variable"><span class="token environment constant">LANG</span></span><span class="token operator">=</span><span class="token string">"en_US.UTF-8"</span>
<span class="token assign-left variable">Release</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">cat</span> /etc/redhat-release <span class="token operator"><span class="token file-descriptor important">2</span>></span>/dev/null<span class="token variable">)</span></span>
<span class="token assign-left variable">Kernel</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">uname</span> <span class="token parameter variable">-r</span><span class="token variable">)</span></span>
<span class="token assign-left variable">OS</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">uname</span> <span class="token parameter variable">-o</span><span class="token variable">)</span></span>
<span class="token assign-left variable">Hostname</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">uname</span> <span class="token parameter variable">-n</span><span class="token variable">)</span></span>
<span class="token assign-left variable">SELinux</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span>/usr/sbin/sestatus <span class="token operator">|</span> <span class="token function">grep</span> <span class="token string">"SELinux status: "</span> <span class="token operator">|</span> <span class="token function">awk</span> <span class="token string">'&#123;print $3&#125;'</span><span class="token variable">)</span></span>
<span class="token assign-left variable">LastReboot</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">who</span> <span class="token parameter variable">-b</span> <span class="token operator">|</span> <span class="token function">awk</span> <span class="token string">'&#123;print $3,$4&#125;'</span><span class="token variable">)</span></span>
<span class="token assign-left variable">uptime</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">uptime</span> <span class="token operator">|</span> <span class="token function">sed</span> <span class="token string">'s/.*up \([^,]*\), .*/\1/'</span><span class="token variable">)</span></span>
<span class="token builtin class-name">echo</span> <span class="token string">" 系统：<span class="token variable">$OS</span>"</span>
<span class="token builtin class-name">echo</span> <span class="token string">" 发行版本：<span class="token variable">$Release</span>"</span>
<span class="token builtin class-name">echo</span> <span class="token string">" 内核：<span class="token variable">$Kernel</span>"</span>
<span class="token builtin class-name">echo</span> <span class="token string">" 主机名：<span class="token variable">$Hostname</span>"</span>
<span class="token builtin class-name">echo</span> <span class="token string">" SELinux：<span class="token variable">$SELinux</span>"</span>
<span class="token builtin class-name">echo</span> <span class="token string">"语言/编码：<span class="token variable">$default_LANG</span>"</span>
<span class="token builtin class-name">echo</span> <span class="token string">" 当前时间：<span class="token variable"><span class="token variable">$(</span><span class="token function">date</span> +<span class="token string">'%F %T'</span><span class="token variable">)</span></span>"</span>
<span class="token builtin class-name">echo</span> <span class="token string">" 最后启动：<span class="token variable">$LastReboot</span>"</span>
<span class="token builtin class-name">echo</span> <span class="token string">" 运行时间：<span class="token variable">$uptime</span>"</span>
<span class="token comment">#报表信息</span>
<span class="token assign-left variable">report_DateTime</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">date</span> +<span class="token string">"%F %T"</span><span class="token variable">)</span></span> <span class="token comment">#日期</span>
<span class="token assign-left variable">report_Hostname</span><span class="token operator">=</span><span class="token string">"<span class="token variable">$Hostname</span>"</span> <span class="token comment">#主机名</span>
<span class="token assign-left variable">report_OSRelease</span><span class="token operator">=</span><span class="token string">"<span class="token variable">$Release</span>"</span> <span class="token comment">#发行版本</span>
<span class="token assign-left variable">report_Kernel</span><span class="token operator">=</span><span class="token string">"<span class="token variable">$Kernel</span>"</span> <span class="token comment">#内核</span>
<span class="token assign-left variable">report_Language</span><span class="token operator">=</span><span class="token string">"<span class="token variable">$default_LANG</span>"</span> <span class="token comment">#语言/编码</span>
<span class="token assign-left variable">report_LastReboot</span><span class="token operator">=</span><span class="token string">"<span class="token variable">$LastReboot</span>"</span> <span class="token comment">#最近启动时间</span>
<span class="token assign-left variable">report_Uptime</span><span class="token operator">=</span><span class="token string">"<span class="token variable">$uptime</span>"</span> <span class="token comment">#运行时间（天）</span>
<span class="token assign-left variable">report_Selinux</span><span class="token operator">=</span><span class="token string">"<span class="token variable">$SELinux</span>"</span>
<span class="token builtin class-name">export</span> <span class="token assign-left variable"><span class="token environment constant">LANG</span></span><span class="token operator">=</span><span class="token string">"<span class="token variable">$default_LANG</span>"</span>

<span class="token punctuation">&#125;</span>

<span class="token keyword">function</span> <span class="token function-name function">getServiceStatus</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
<span class="token builtin class-name">echo</span> <span class="token string">""</span>
<span class="token builtin class-name">echo</span> <span class="token string">""</span>
<span class="token builtin class-name">echo</span> <span class="token string">"############################ 服务检查 ############################"</span>
<span class="token builtin class-name">echo</span> <span class="token string">""</span>
<span class="token keyword">if</span> <span class="token punctuation">[</span><span class="token punctuation">[</span> <span class="token variable">$centosVersion</span> <span class="token operator">></span> <span class="token number">7</span> <span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">then</span>
<span class="token assign-left variable">conf</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span>systemctl list-unit-files <span class="token parameter variable">--type</span><span class="token operator">=</span>service <span class="token parameter variable">--state</span><span class="token operator">=</span>enabled --no-pager <span class="token operator">|</span> <span class="token function">grep</span> <span class="token string">"enabled"</span><span class="token variable">)</span></span>
<span class="token assign-left variable">process</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span>systemctl list-units <span class="token parameter variable">--type</span><span class="token operator">=</span>service <span class="token parameter variable">--state</span><span class="token operator">=</span>running --no-pager <span class="token operator">|</span> <span class="token function">grep</span> <span class="token string">".service"</span><span class="token variable">)</span></span>
<span class="token comment">#报表信息</span>
<span class="token assign-left variable">report_SelfInitiatedService</span><span class="token operator">=</span><span class="token string">"<span class="token variable"><span class="token variable">$(</span><span class="token builtin class-name">echo</span> <span class="token string">"<span class="token variable">$conf</span>"</span> <span class="token operator">|</span> <span class="token function">wc</span> <span class="token parameter variable">-l</span><span class="token variable">)</span></span>"</span> <span class="token comment">#自启动服务数量</span>
<span class="token assign-left variable">report_RuningService</span><span class="token operator">=</span><span class="token string">"<span class="token variable"><span class="token variable">$(</span><span class="token builtin class-name">echo</span> <span class="token string">"<span class="token variable">$process</span>"</span> <span class="token operator">|</span> <span class="token function">wc</span> <span class="token parameter variable">-l</span><span class="token variable">)</span></span>"</span> <span class="token comment">#运行中服务数量</span>
<span class="token keyword">else</span>
<span class="token assign-left variable">conf</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span>/sbin/chkconfig <span class="token operator">|</span> <span class="token function">grep</span> <span class="token parameter variable">-E</span> <span class="token string">":on|:启用"</span><span class="token variable">)</span></span>
<span class="token assign-left variable">process</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span>/sbin/service --status-all <span class="token operator"><span class="token file-descriptor important">2</span>></span>/dev/null <span class="token operator">|</span> <span class="token function">grep</span> <span class="token parameter variable">-E</span> <span class="token string">"is running|正在运行"</span><span class="token variable">)</span></span>
<span class="token comment">#报表信息</span>
<span class="token assign-left variable">report_SelfInitiatedService</span><span class="token operator">=</span><span class="token string">"<span class="token variable"><span class="token variable">$(</span><span class="token builtin class-name">echo</span> <span class="token string">"<span class="token variable">$conf</span>"</span> <span class="token operator">|</span> <span class="token function">wc</span> <span class="token parameter variable">-l</span><span class="token variable">)</span></span>"</span> <span class="token comment">#自启动服务数量</span>
<span class="token assign-left variable">report_RuningService</span><span class="token operator">=</span><span class="token string">"<span class="token variable"><span class="token variable">$(</span><span class="token builtin class-name">echo</span> <span class="token string">"<span class="token variable">$process</span>"</span> <span class="token operator">|</span> <span class="token function">wc</span> <span class="token parameter variable">-l</span><span class="token variable">)</span></span>"</span> <span class="token comment">#运行中服务数量</span>
<span class="token keyword">fi</span>
<span class="token builtin class-name">echo</span> <span class="token string">"服务配置"</span>
<span class="token builtin class-name">echo</span> <span class="token string">"--------"</span>
<span class="token builtin class-name">echo</span> <span class="token string">"<span class="token variable">$conf</span>"</span> <span class="token operator">|</span> <span class="token function">column</span> <span class="token parameter variable">-t</span>
<span class="token builtin class-name">echo</span> <span class="token string">""</span>
<span class="token builtin class-name">echo</span> <span class="token string">"正在运行的服务"</span>
<span class="token builtin class-name">echo</span> <span class="token string">"--------------"</span>
<span class="token builtin class-name">echo</span> <span class="token string">"<span class="token variable">$process</span>"</span>

<span class="token punctuation">&#125;</span>


<span class="token keyword">function</span> <span class="token function-name function">getAutoStartStatus</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
<span class="token builtin class-name">echo</span> <span class="token string">""</span>
<span class="token builtin class-name">echo</span> <span class="token string">""</span>
<span class="token builtin class-name">echo</span> <span class="token string">"############################ 自启动检查 ##########################"</span>
<span class="token assign-left variable">conf</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">grep</span> <span class="token parameter variable">-v</span> <span class="token string">"^#"</span> /etc/rc.d/rc.local<span class="token operator">|</span> <span class="token function">sed</span> <span class="token string">'/^$/d'</span><span class="token variable">)</span></span>
<span class="token builtin class-name">echo</span> <span class="token string">"<span class="token variable">$conf</span>"</span>
<span class="token comment">#报表信息</span>
<span class="token assign-left variable">report_SelfInitiatedProgram</span><span class="token operator">=</span><span class="token string">"<span class="token variable"><span class="token variable">$(</span><span class="token builtin class-name">echo</span> $conf <span class="token operator">|</span> <span class="token function">wc</span> <span class="token parameter variable">-l</span><span class="token variable">)</span></span>"</span> <span class="token comment">#自启动程序数量</span>
<span class="token punctuation">&#125;</span>

<span class="token keyword">function</span> <span class="token function-name function">getLoginStatus</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
<span class="token builtin class-name">echo</span> <span class="token string">""</span>
<span class="token builtin class-name">echo</span> <span class="token string">""</span>
<span class="token builtin class-name">echo</span> <span class="token string">"############################ 登录检查 ############################"</span>
last <span class="token operator">|</span> <span class="token function">head</span>
<span class="token punctuation">&#125;</span>

<span class="token keyword">function</span> <span class="token function-name function">getNetworkStatus</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
<span class="token builtin class-name">echo</span> <span class="token string">""</span>
<span class="token builtin class-name">echo</span> <span class="token string">""</span>
<span class="token builtin class-name">echo</span> <span class="token string">"############################ 网络检查 ############################"</span>
<span class="token keyword">if</span> <span class="token punctuation">[</span><span class="token punctuation">[</span> <span class="token variable">$centosVersion</span> <span class="token operator">&lt;</span> <span class="token number">7</span> <span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">then</span>
/sbin/ifconfig <span class="token parameter variable">-a</span> <span class="token operator">|</span> <span class="token function">grep</span> <span class="token parameter variable">-v</span> packets <span class="token operator">|</span> <span class="token function">grep</span> <span class="token parameter variable">-v</span> collisions <span class="token operator">|</span> <span class="token function">grep</span> <span class="token parameter variable">-v</span> inet6
<span class="token keyword">else</span>
<span class="token comment">#ip a</span>
<span class="token keyword">for</span> <span class="token for-or-select variable">i</span> <span class="token keyword">in</span> <span class="token variable"><span class="token variable">$(</span><span class="token function">ip</span> <span class="token function">link</span> <span class="token operator">|</span> <span class="token function">grep</span> BROADCAST <span class="token operator">|</span> <span class="token function">awk</span> -F: <span class="token string">'&#123;print $2&#125;'</span><span class="token variable">)</span></span><span class="token punctuation">;</span><span class="token keyword">do</span> <span class="token function">ip</span> <span class="token function">add</span> show <span class="token variable">$i</span> <span class="token operator">|</span> <span class="token function">grep</span> <span class="token parameter variable">-E</span> <span class="token string">"BROADCAST|global"</span><span class="token operator">|</span> <span class="token function">awk</span> <span class="token string">'&#123;print $2&#125;'</span> <span class="token operator">|</span> <span class="token function">tr</span> <span class="token string">'\n'</span> <span class="token string">' '</span> <span class="token punctuation">;</span><span class="token builtin class-name">echo</span> <span class="token string">""</span> <span class="token punctuation">;</span><span class="token keyword">done</span>
<span class="token keyword">fi</span>
<span class="token assign-left variable">GATEWAY</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">ip</span> route <span class="token operator">|</span> <span class="token function">grep</span> default <span class="token operator">|</span> <span class="token function">awk</span> <span class="token string">'&#123;print $3&#125;'</span><span class="token variable">)</span></span>
<span class="token assign-left variable">DNS</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">grep</span> nameserver /etc/resolv.conf<span class="token operator">|</span> <span class="token function">grep</span> <span class="token parameter variable">-v</span> <span class="token string">"#"</span> <span class="token operator">|</span> <span class="token function">awk</span> <span class="token string">'&#123;print $2&#125;'</span> <span class="token operator">|</span> <span class="token function">tr</span> <span class="token string">'\n'</span> <span class="token string">','</span> <span class="token operator">|</span> <span class="token function">sed</span> <span class="token string">'s/,$//'</span><span class="token variable">)</span></span>
<span class="token builtin class-name">echo</span> <span class="token string">""</span>
<span class="token builtin class-name">echo</span> <span class="token string">"网关：<span class="token variable">$GATEWAY</span> "</span>
<span class="token builtin class-name">echo</span> <span class="token string">" DNS：<span class="token variable">$DNS</span>"</span>
<span class="token comment">#报表信息</span>
<span class="token assign-left variable">IP</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">ip</span> <span class="token parameter variable">-f</span> inet addr <span class="token operator">|</span> <span class="token function">grep</span> <span class="token parameter variable">-v</span> <span class="token number">127.0</span>.0.1 <span class="token operator">|</span> <span class="token function">grep</span> inet <span class="token operator">|</span> <span class="token function">awk</span> <span class="token string">'&#123;print $NF,$2&#125;'</span> <span class="token operator">|</span> <span class="token function">tr</span> <span class="token string">'\n'</span> <span class="token string">','</span> <span class="token operator">|</span> <span class="token function">sed</span> <span class="token string">'s/,$//'</span><span class="token variable">)</span></span>
<span class="token assign-left variable">MAC</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">ip</span> <span class="token function">link</span> <span class="token operator">|</span> <span class="token function">grep</span> <span class="token parameter variable">-v</span> <span class="token string">"LOOPBACK\|loopback"</span> <span class="token operator">|</span> <span class="token function">awk</span> <span class="token string">'&#123;print $2&#125;'</span> <span class="token operator">|</span> <span class="token function">sed</span> <span class="token string">'N;s/\n//'</span> <span class="token operator">|</span> <span class="token function">tr</span> <span class="token string">'\n'</span> <span class="token string">','</span> <span class="token operator">|</span> <span class="token function">sed</span> <span class="token string">'s/,$//'</span><span class="token variable">)</span></span>
<span class="token assign-left variable">report_IP</span><span class="token operator">=</span><span class="token string">"<span class="token variable">$IP</span>"</span> <span class="token comment">#IP地址</span>
<span class="token assign-left variable">report_MAC</span><span class="token operator">=</span><span class="token variable">$MAC</span> <span class="token comment">#MAC地址</span>
<span class="token assign-left variable">report_Gateway</span><span class="token operator">=</span><span class="token string">"<span class="token variable">$GATEWAY</span>"</span> <span class="token comment">#默认网关</span>
<span class="token assign-left variable">report_DNS</span><span class="token operator">=</span><span class="token string">"<span class="token variable">$DNS</span>"</span> <span class="token comment">#DNS</span>
<span class="token punctuation">&#125;</span>

<span class="token keyword">function</span> <span class="token function-name function">getListenStatus</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
<span class="token builtin class-name">echo</span> <span class="token string">""</span>
<span class="token builtin class-name">echo</span> <span class="token string">""</span>
<span class="token builtin class-name">echo</span> <span class="token string">"############################ 监听检查 ############################"</span>
<span class="token assign-left variable">TCPListen</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span>ss <span class="token parameter variable">-ntul</span> <span class="token operator">|</span> <span class="token function">column</span> <span class="token parameter variable">-t</span><span class="token variable">)</span></span>
<span class="token builtin class-name">echo</span> <span class="token string">"<span class="token variable">$TCPListen</span>"</span>
<span class="token comment">#报表信息</span>
<span class="token assign-left variable">report_Listen</span><span class="token operator">=</span><span class="token string">"<span class="token variable"><span class="token variable">$(</span><span class="token builtin class-name">echo</span> <span class="token string">"<span class="token variable">$TCPListen</span>"</span><span class="token operator">|</span> <span class="token function">sed</span> <span class="token string">'1d'</span> <span class="token operator">|</span> <span class="token function">awk</span> <span class="token string">'/tcp/ &#123;print $5&#125;'</span> <span class="token operator">|</span> <span class="token function">awk</span> -F: <span class="token string">'&#123;print $NF&#125;'</span> <span class="token operator">|</span> <span class="token function">sort</span> <span class="token operator">|</span> <span class="token function">uniq</span> <span class="token operator">|</span> <span class="token function">wc</span> <span class="token parameter variable">-l</span><span class="token variable">)</span></span>"</span>
<span class="token punctuation">&#125;</span>

<span class="token keyword">function</span> <span class="token function-name function">getCronStatus</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
<span class="token builtin class-name">echo</span> <span class="token string">""</span>
<span class="token builtin class-name">echo</span> <span class="token string">""</span>
<span class="token builtin class-name">echo</span> <span class="token string">"############################ 计划任务检查 ########################"</span>
<span class="token assign-left variable">Crontab</span><span class="token operator">=</span><span class="token number">0</span>
<span class="token keyword">for</span> <span class="token for-or-select variable">shell</span> <span class="token keyword">in</span> <span class="token variable"><span class="token variable">$(</span><span class="token function">grep</span> <span class="token parameter variable">-v</span> <span class="token string">"/sbin/nologin"</span> /etc/shells<span class="token variable">)</span></span><span class="token punctuation">;</span><span class="token keyword">do</span>
<span class="token keyword">for</span> <span class="token for-or-select variable">user</span> <span class="token keyword">in</span> <span class="token variable"><span class="token variable">$(</span><span class="token function">grep</span> <span class="token string">"<span class="token variable">$shell</span>"</span> /etc/passwd<span class="token operator">|</span> <span class="token function">awk</span> -F: <span class="token string">'&#123;print $1&#125;'</span><span class="token variable">)</span></span><span class="token punctuation">;</span><span class="token keyword">do</span>
<span class="token function">crontab</span> <span class="token parameter variable">-l</span> <span class="token parameter variable">-u</span> <span class="token variable">$user</span> <span class="token operator">></span>/dev/null <span class="token operator"><span class="token file-descriptor important">2</span>></span><span class="token file-descriptor important">&amp;1</span>
<span class="token assign-left variable">status</span><span class="token operator">=</span><span class="token variable">$?</span>
<span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token variable">$status</span> <span class="token parameter variable">-eq</span> <span class="token number">0</span> <span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">then</span>
<span class="token builtin class-name">echo</span> <span class="token string">"<span class="token variable">$user</span>"</span>
<span class="token builtin class-name">echo</span> <span class="token string">"--------"</span>
<span class="token function">crontab</span> <span class="token parameter variable">-l</span> <span class="token parameter variable">-u</span> <span class="token variable">$user</span>
<span class="token builtin class-name">let</span> <span class="token assign-left variable">Crontab</span><span class="token operator">=</span>Crontab+<span class="token variable"><span class="token variable">$(</span><span class="token function">crontab</span> <span class="token parameter variable">-l</span> <span class="token parameter variable">-u</span> $user <span class="token operator">|</span> <span class="token function">wc</span> <span class="token parameter variable">-l</span><span class="token variable">)</span></span>
<span class="token builtin class-name">echo</span> <span class="token string">""</span>
<span class="token keyword">fi</span>
<span class="token keyword">done</span>
<span class="token keyword">done</span>
<span class="token comment">#计划任务</span>
<span class="token function">find</span> /etc/cron* <span class="token parameter variable">-type</span> f <span class="token operator">|</span> <span class="token function">xargs</span> <span class="token parameter variable">-i</span> <span class="token function">ls</span> <span class="token parameter variable">-l</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span> <span class="token operator">|</span> <span class="token function">column</span> <span class="token parameter variable">-t</span>
<span class="token builtin class-name">let</span> <span class="token assign-left variable">Crontab</span><span class="token operator">=</span>Crontab+<span class="token variable"><span class="token variable">$(</span><span class="token function">find</span> /etc/cron* <span class="token parameter variable">-type</span> f <span class="token operator">|</span> <span class="token function">wc</span> <span class="token parameter variable">-l</span><span class="token variable">)</span></span>
<span class="token comment">#报表信息</span>
<span class="token assign-left variable">report_Crontab</span><span class="token operator">=</span><span class="token string">"<span class="token variable">$Crontab</span>"</span> <span class="token comment">#计划任务数</span>
<span class="token punctuation">&#125;</span>
<span class="token keyword">function</span> <span class="token function-name function">getHowLongAgo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
<span class="token comment"># 计算一个时间戳离现在有多久了</span>
<span class="token assign-left variable">datetime</span><span class="token operator">=</span><span class="token string">"<span class="token variable">$*</span>"</span>
<span class="token punctuation">[</span> <span class="token parameter variable">-z</span> <span class="token string">"<span class="token variable">$datetime</span>"</span> <span class="token punctuation">]</span> <span class="token operator">&amp;&amp;</span> <span class="token builtin class-name">echo</span> <span class="token string">"错误的参数：getHowLongAgo() <span class="token variable">$*</span>"</span>
<span class="token assign-left variable">Timestamp</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">date</span> +%s <span class="token parameter variable">-d</span> <span class="token string">"<span class="token variable">$datetime</span>"</span><span class="token variable">)</span></span> <span class="token comment">#转化为时间戳</span>
<span class="token assign-left variable">Now_Timestamp</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">date</span> +%s<span class="token variable">)</span></span>
<span class="token assign-left variable">Difference_Timestamp</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$((</span>$Now_Timestamp<span class="token operator">-</span>$Timestamp<span class="token variable">))</span></span>
<span class="token assign-left variable">days</span><span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span><span class="token assign-left variable">hours</span><span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span><span class="token assign-left variable">minutes</span><span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>
<span class="token assign-left variable">sec_in_day</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$((</span><span class="token number">60</span><span class="token operator">*</span><span class="token number">60</span><span class="token operator">*</span><span class="token number">24</span><span class="token variable">))</span></span><span class="token punctuation">;</span>
<span class="token assign-left variable">sec_in_hour</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$((</span><span class="token number">60</span><span class="token operator">*</span><span class="token number">60</span><span class="token variable">))</span></span><span class="token punctuation">;</span>
<span class="token assign-left variable">sec_in_minute</span><span class="token operator">=</span><span class="token number">60</span>
<span class="token keyword">while</span> <span class="token variable"><span class="token punctuation">((</span> $<span class="token punctuation">((</span>$Difference_Timestamp<span class="token operator">-</span>$sec_in_day<span class="token punctuation">))</span></span> <span class="token operator">></span> <span class="token number">1</span> <span class="token punctuation">))</span>
<span class="token keyword">do</span>
<span class="token builtin class-name">let</span> <span class="token assign-left variable">Difference_Timestamp</span><span class="token operator">=</span>Difference_Timestamp-sec_in_day
<span class="token builtin class-name">let</span> days++
<span class="token keyword">done</span>
<span class="token keyword">while</span> <span class="token variable"><span class="token punctuation">((</span> $<span class="token punctuation">((</span>$Difference_Timestamp<span class="token operator">-</span>$sec_in_hour<span class="token punctuation">))</span></span> <span class="token operator">></span> <span class="token number">1</span> <span class="token punctuation">))</span>
<span class="token keyword">do</span>
<span class="token builtin class-name">let</span> <span class="token assign-left variable">Difference_Timestamp</span><span class="token operator">=</span>Difference_Timestamp-sec_in_hour
<span class="token builtin class-name">let</span> hours++
<span class="token keyword">done</span>
<span class="token builtin class-name">echo</span> <span class="token string">"<span class="token variable">$days</span> 天 <span class="token variable">$hours</span> 小时前"</span>
<span class="token punctuation">&#125;</span>

<span class="token keyword">function</span> <span class="token function-name function">getUserLastLogin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
<span class="token comment"># 获取用户最近一次登录的时间，含年份</span>
<span class="token comment"># 很遗憾last命令不支持显示年份，只有"last -t YYYYMMDDHHMMSS"表示某个时间之间的登录，我</span>
<span class="token comment"># 们只能用最笨的方法了，对比今天之前和今年元旦之前（或者去年之前和前年之前……）某个用户</span>
<span class="token comment"># 登录次数，如果登录统计次数有变化，则说明最近一次登录是今年。</span>
<span class="token assign-left variable">username</span><span class="token operator">=</span><span class="token variable">$1</span>
<span class="token builtin class-name">:</span> <span class="token variable">$&#123;username<span class="token operator">:=</span>"`whoami`"&#125;</span>
<span class="token assign-left variable">thisYear</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">date</span> +%Y<span class="token variable">)</span></span>
<span class="token assign-left variable">oldesYear</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span>last <span class="token operator">|</span> <span class="token function">tail</span> <span class="token parameter variable">-n1</span> <span class="token operator">|</span> <span class="token function">awk</span> <span class="token string">'&#123;print $NF&#125;'</span><span class="token variable">)</span></span>
<span class="token keyword">while</span><span class="token variable"><span class="token punctuation">((</span> $thisYear <span class="token operator">>=</span> $oldesYear<span class="token punctuation">))</span></span><span class="token punctuation">;</span><span class="token keyword">do</span>
<span class="token assign-left variable">loginBeforeToday</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span>last $username <span class="token operator">|</span> <span class="token function">grep</span> $username <span class="token operator">|</span> <span class="token function">wc</span> <span class="token parameter variable">-l</span><span class="token variable">)</span></span>
<span class="token assign-left variable">loginBeforeNewYearsDayOfThisYear</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span>last $username <span class="token parameter variable">-t</span> $thisYear<span class="token string">"0101000000"</span> <span class="token operator">|</span> <span class="token function">grep</span> $username <span class="token operator">|</span> <span class="token function">wc</span> <span class="token parameter variable">-l</span><span class="token variable">)</span></span>
<span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token variable">$loginBeforeToday</span> <span class="token parameter variable">-eq</span> <span class="token number">0</span> <span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">then</span>
<span class="token builtin class-name">echo</span> <span class="token string">"从未登录过"</span>
<span class="token builtin class-name">break</span>
<span class="token keyword">elif</span> <span class="token punctuation">[</span> <span class="token variable">$loginBeforeToday</span> <span class="token parameter variable">-gt</span> <span class="token variable">$loginBeforeNewYearsDayOfThisYear</span> <span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">then</span>
<span class="token assign-left variable">lastDateTime</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span>last <span class="token parameter variable">-i</span> $username <span class="token operator">|</span> <span class="token function">head</span> <span class="token parameter variable">-n1</span> <span class="token operator">|</span> <span class="token function">awk</span> '<span class="token punctuation">&#123;</span>for<span class="token punctuation">(</span>i<span class="token operator">=</span><span class="token number">4</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span><span class="token punctuation">(</span>NF-2<span class="token punctuation">)</span><span class="token punctuation">;</span>i++<span class="token variable">)</span></span><span class="token builtin class-name">printf</span><span class="token string">"%s "</span>,<span class="token variable">$i</span><span class="token punctuation">&#125;</span><span class="token string">')" $thisYear" #格式如: Sat Nov 2 20:33 2015
lastDateTime=$(date "+%Y-%m-%d %H:%M:%S" -d "$lastDateTime")
echo "$lastDateTime"
break
else
thisYear=$((thisYear-1))
fi
done

&#125;

function getUserStatus()&#123;
echo ""
echo ""
echo "############################ 用户检查 ############################"
#/etc/passwd 最后修改时间
pwdfile="$(cat /etc/passwd)"
Modify=$(stat /etc/passwd | grep Modify | tr '</span><span class="token builtin class-name">.</span><span class="token string">' '</span> <span class="token string">' | awk '</span><span class="token punctuation">&#123;</span>print <span class="token variable">$2</span>,<span class="token variable">$3</span><span class="token punctuation">&#125;</span><span class="token string">')

echo "/etc/passwd 最后修改时间：$Modify ($(getHowLongAgo $Modify))"
echo ""
echo "特权用户"
echo "--------"
RootUser=""
for user in $(echo "$pwdfile" | awk -F: '</span><span class="token punctuation">&#123;</span>print <span class="token variable">$1</span><span class="token punctuation">&#125;</span><span class="token string">');do
if [ $(id -u $user) -eq 0 ];then
echo "$user"
RootUser="$RootUser,$user"
fi
done
echo ""
echo "用户列表"
echo "--------"
USERs=0
echo "$(
echo "用户名 UID GID HOME SHELL 最后一次登录"
for shell in $(grep -v "/sbin/nologin" /etc/shells);do
for username in $(grep "$shell" /etc/passwd| awk -F: '</span><span class="token punctuation">&#123;</span>print <span class="token variable">$1</span><span class="token punctuation">&#125;</span><span class="token string">');do
userLastLogin="$(getUserLastLogin $username)"
echo "$pwdfile" | grep -w "$username" |grep -w "$shell"| awk -F: -v lastlogin="$(echo "$userLastLogin" | tr '</span> <span class="token string">' '</span>_<span class="token string">')" '</span><span class="token punctuation">&#123;</span>print <span class="token variable">$1</span>,<span class="token variable">$3</span>,<span class="token variable">$4</span>,<span class="token variable">$6</span>,<span class="token variable">$7</span>,lastlogin<span class="token punctuation">&#125;</span><span class="token string">'
done
let USERs=USERs+$(echo "$pwdfile" | grep "$shell"| wc -l)
done
)" | column -t
echo ""
echo "空密码用户"
echo "----------"
USEREmptyPassword=""
for shell in $(grep -v "/sbin/nologin" /etc/shells);do
for user in $(echo "$pwdfile" | grep "$shell" | cut -d: -f1);do
r=$(awk -F: '</span><span class="token variable">$2</span><span class="token operator">==</span><span class="token string">"!!"</span><span class="token punctuation">&#123;</span>print <span class="token variable">$1</span><span class="token punctuation">&#125;</span><span class="token string">' /etc/shadow | grep -w $user)
if [ ! -z $r ];then
echo $r
USEREmptyPassword="$USEREmptyPassword,"$r
fi
done 
done
echo ""
echo "相同ID的用户"
echo "------------"
USERTheSameUID=""
UIDs=$(cut -d: -f3 /etc/passwd | sort | uniq -c | awk '</span><span class="token variable">$1</span><span class="token operator">></span><span class="token number">1</span><span class="token punctuation">&#123;</span>print <span class="token variable">$2</span><span class="token punctuation">&#125;</span><span class="token string">')
for uid in $UIDs;do
echo -n "$uid";
USERTheSameUID="$uid"
r=$(awk -F: '</span><span class="token assign-left variable">ORS</span><span class="token operator">=</span><span class="token string">""</span><span class="token punctuation">;</span><span class="token variable">$3</span><span class="token operator">==</span><span class="token string">'"$uid"'</span><span class="token punctuation">&#123;</span>print <span class="token string">":"</span>,<span class="token variable">$1</span><span class="token punctuation">&#125;</span><span class="token string">' /etc/passwd)
echo "$r"
echo ""
USERTheSameUID="$USERTheSameUID $r,"
done
#报表信息
report_USERs="$USERs" #用户
report_USEREmptyPassword=$(echo $USEREmptyPassword | sed '</span>s/^,//<span class="token string">') 
report_USERTheSameUID=$(echo $USERTheSameUID | sed '</span>s/,$//<span class="token string">') 
report_RootUser=$(echo $RootUser | sed '</span>s/^,//<span class="token string">') #特权用户
&#125;


function getPasswordStatus &#123;
echo ""
echo ""
echo "############################ 密码检查 ############################"
pwdfile="$(cat /etc/passwd)"
echo ""
echo "密码过期检查"
echo "------------"
result=""
for shell in $(grep -v "/sbin/nologin" /etc/shells);do
for user in $(echo "$pwdfile" | grep "$shell" | cut -d: -f1);do
get_expiry_date=$(/usr/bin/chage -l $user | grep '</span>Password expires<span class="token string">' | cut -d: -f2)
if [[ $get_expiry_date = '</span> never<span class="token string">' || $get_expiry_date = '</span>never<span class="token string">' ]];then
printf "%-15s 永不过期\n" $user
result="$result,$user:never"
else
password_expiry_date=$(date -d "$get_expiry_date" "+%s")
current_date=$(date "+%s")
diff=$(($password_expiry_date-$current_date))
let DAYS=$(($diff/(60*60*24)))
printf "%-15s %s天后过期\n" $user $DAYS
result="$result,$user:$DAYS days"
fi
done
done
report_PasswordExpiry=$(echo $result | sed '</span>s/^,//<span class="token string">')

echo ""
echo "密码策略检查"
echo "------------"
grep -v "#" /etc/login.defs | grep -E "PASS_MAX_DAYS|PASS_MIN_DAYS|PASS_MIN_LEN|PASS_WARN_AGE"


&#125;

function getSudoersStatus()&#123;
echo ""
echo ""
echo "############################ Sudoers检查 #########################"
conf=$(grep -v "^#" /etc/sudoers| grep -v "^Defaults" | sed '</span>/^$/d<span class="token string">')
echo "$conf"
echo ""
#报表信息
report_Sudoers="$(echo $conf | wc -l)"
&#125;

function getInstalledStatus()&#123;
echo ""
echo ""
echo "############################ 软件检查 ############################"
rpm -qa --last | head | column -t 
&#125;

function getProcessStatus()&#123;
echo ""
echo ""
echo "############################ 进程检查 ############################"
if [ $(ps -ef | grep defunct | grep -v grep | wc -l) -ge 1 ];then
echo ""
echo "僵尸进程";
echo "--------"
ps -ef | head -n1
ps -ef | grep defunct | grep -v grep
fi
echo ""
echo "内存占用TOP10"
echo "-------------"
echo -e "PID %MEM RSS COMMAND
$(ps aux | awk '</span><span class="token punctuation">&#123;</span>print <span class="token variable">$2</span>, <span class="token variable">$4</span>, <span class="token variable">$6</span>, <span class="token variable">$11</span><span class="token punctuation">&#125;</span><span class="token string">' | sort -k3rn | head -n 10 )"| column -t 
echo ""
echo "CPU占用TOP10"
echo "------------"
top b -n1 | head -17 | tail -11
#报表信息
report_DefunctProsess="$(ps -ef | grep defunct | grep -v grep|wc -l)"
&#125;

function getJDKStatus()&#123;
echo ""
echo ""
echo "############################ JDK检查 #############################"
java -version 2>/dev/null
if [ $? -eq 0 ];then
java -version 2>&amp;1
fi
echo "JAVA_HOME=\"$JAVA_HOME\""
#报表信息
report_JDK="$(java -version 2>&amp;1 | grep version | awk '</span><span class="token punctuation">&#123;</span>print <span class="token variable">$1</span>,<span class="token variable">$3</span><span class="token punctuation">&#125;</span><span class="token string">' | tr -d '</span><span class="token string">"')"</span>
<span class="token punctuation">&#125;</span>
<span class="token keyword">function</span> <span class="token function-name function">getSyslogStatus</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
<span class="token builtin class-name">echo</span> <span class="token string">""</span>
<span class="token builtin class-name">echo</span> <span class="token string">""</span>
<span class="token builtin class-name">echo</span> <span class="token string">"############################ syslog检查 ##########################"</span>
<span class="token builtin class-name">echo</span> <span class="token string">"服务状态：<span class="token variable"><span class="token variable">$(</span>getState rsyslog<span class="token variable">)</span></span>"</span>
<span class="token builtin class-name">echo</span> <span class="token string">""</span>
<span class="token builtin class-name">echo</span> <span class="token string">"/etc/rsyslog.conf"</span>
<span class="token builtin class-name">echo</span> <span class="token string">"-----------------"</span>
<span class="token function">cat</span> /etc/rsyslog.conf <span class="token operator"><span class="token file-descriptor important">2</span>></span>/dev/null <span class="token operator">|</span> <span class="token function">grep</span> <span class="token parameter variable">-v</span> <span class="token string">"^#"</span> <span class="token operator">|</span> <span class="token function">grep</span> <span class="token parameter variable">-v</span> <span class="token string">"^<span class="token entity" title="\\">\\</span>$"</span> <span class="token operator">|</span> <span class="token function">sed</span> <span class="token string">'/^$/d'</span> <span class="token operator">|</span> <span class="token function">column</span> <span class="token parameter variable">-t</span>
<span class="token comment">#报表信息</span>
<span class="token assign-left variable">report_Syslog</span><span class="token operator">=</span><span class="token string">"<span class="token variable"><span class="token variable">$(</span>getState rsyslog<span class="token variable">)</span></span>"</span>
<span class="token punctuation">&#125;</span>
<span class="token keyword">function</span> <span class="token function-name function">getFirewallStatus</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
<span class="token builtin class-name">echo</span> <span class="token string">""</span>
<span class="token builtin class-name">echo</span> <span class="token string">""</span>
<span class="token builtin class-name">echo</span> <span class="token string">"############################ 防火墙检查 ##########################"</span>
<span class="token comment">#防火墙状态，策略等</span>
<span class="token keyword">if</span> <span class="token punctuation">[</span><span class="token punctuation">[</span> <span class="token variable">$centosVersion</span> <span class="token operator">&lt;</span> <span class="token number">7</span> <span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">then</span>
/etc/init.d/iptables status <span class="token operator">></span>/dev/null <span class="token operator"><span class="token file-descriptor important">2</span>></span><span class="token file-descriptor important">&amp;1</span>
<span class="token assign-left variable">status</span><span class="token operator">=</span><span class="token variable">$?</span>
<span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token variable">$status</span> <span class="token parameter variable">-eq</span> <span class="token number">0</span> <span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">then</span>
<span class="token assign-left variable">s</span><span class="token operator">=</span><span class="token string">"active"</span>
<span class="token keyword">elif</span> <span class="token punctuation">[</span> <span class="token variable">$status</span> <span class="token parameter variable">-eq</span> <span class="token number">3</span> <span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">then</span>
<span class="token assign-left variable">s</span><span class="token operator">=</span><span class="token string">"inactive"</span>
<span class="token keyword">elif</span> <span class="token punctuation">[</span> <span class="token variable">$status</span> <span class="token parameter variable">-eq</span> <span class="token number">4</span> <span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">then</span>
<span class="token assign-left variable">s</span><span class="token operator">=</span><span class="token string">"permission denied"</span>
<span class="token keyword">else</span>
<span class="token assign-left variable">s</span><span class="token operator">=</span><span class="token string">"unknown"</span>
<span class="token keyword">fi</span>
<span class="token keyword">else</span>
<span class="token assign-left variable">s</span><span class="token operator">=</span><span class="token string">"<span class="token variable"><span class="token variable">$(</span>getState iptables<span class="token variable">)</span></span>"</span>
<span class="token keyword">fi</span>
<span class="token builtin class-name">echo</span> <span class="token string">"iptables: <span class="token variable">$s</span>"</span>
<span class="token builtin class-name">echo</span> <span class="token string">""</span>
<span class="token builtin class-name">echo</span> <span class="token string">"/etc/sysconfig/iptables"</span>
<span class="token builtin class-name">echo</span> <span class="token string">"-----------------------"</span>
<span class="token function">cat</span> /etc/sysconfig/iptables <span class="token operator"><span class="token file-descriptor important">2</span>></span>/dev/null
<span class="token comment">#报表信息</span>
<span class="token assign-left variable">report_Firewall</span><span class="token operator">=</span><span class="token string">"<span class="token variable">$s</span>"</span>
<span class="token punctuation">&#125;</span>

<span class="token keyword">function</span> <span class="token function-name function">getSNMPStatus</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
<span class="token comment">#SNMP服务状态，配置等</span>
<span class="token builtin class-name">echo</span> <span class="token string">""</span>
<span class="token builtin class-name">echo</span> <span class="token string">""</span>
<span class="token builtin class-name">echo</span> <span class="token string">"############################ SNMP检查 ############################"</span>
<span class="token assign-left variable">status</span><span class="token operator">=</span><span class="token string">"<span class="token variable"><span class="token variable">$(</span>getState snmpd<span class="token variable">)</span></span>"</span>
<span class="token builtin class-name">echo</span> <span class="token string">"服务状态：<span class="token variable">$status</span>"</span>
<span class="token builtin class-name">echo</span> <span class="token string">""</span>
<span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token parameter variable">-e</span> /etc/snmp/snmpd.conf <span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">then</span>
<span class="token builtin class-name">echo</span> <span class="token string">"/etc/snmp/snmpd.conf"</span>
<span class="token builtin class-name">echo</span> <span class="token string">"--------------------"</span>
<span class="token function">cat</span> /etc/snmp/snmpd.conf <span class="token operator"><span class="token file-descriptor important">2</span>></span>/dev/null <span class="token operator">|</span> <span class="token function">grep</span> <span class="token parameter variable">-v</span> <span class="token string">"^#"</span> <span class="token operator">|</span> <span class="token function">sed</span> <span class="token string">'/^$/d'</span>
<span class="token keyword">fi</span>
<span class="token comment">#报表信息</span>
<span class="token assign-left variable">report_SNMP</span><span class="token operator">=</span><span class="token string">"<span class="token variable"><span class="token variable">$(</span>getState snmpd<span class="token variable">)</span></span>"</span>
<span class="token punctuation">&#125;</span>



<span class="token keyword">function</span> <span class="token function-name function">getState</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
<span class="token keyword">if</span> <span class="token punctuation">[</span><span class="token punctuation">[</span> <span class="token variable">$centosVersion</span> <span class="token operator">&lt;</span> <span class="token number">7</span> <span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">then</span>
<span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token parameter variable">-e</span> <span class="token string">"/etc/init.d/<span class="token variable">$1</span>"</span> <span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">then</span>
<span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token variable"><span class="token variable">`</span>/etc/init.d/$1 status <span class="token operator"><span class="token file-descriptor important">2</span>></span>/dev/null <span class="token operator">|</span> <span class="token function">grep</span> <span class="token parameter variable">-E</span> <span class="token string">"is running|正在运行"</span> <span class="token operator">|</span> <span class="token function">wc</span> <span class="token parameter variable">-l</span><span class="token variable">`</span></span> <span class="token parameter variable">-ge</span> <span class="token number">1</span> <span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">then</span>
<span class="token assign-left variable">r</span><span class="token operator">=</span><span class="token string">"active"</span>
<span class="token keyword">else</span>
<span class="token assign-left variable">r</span><span class="token operator">=</span><span class="token string">"inactive"</span>
<span class="token keyword">fi</span>
<span class="token keyword">else</span>
<span class="token assign-left variable">r</span><span class="token operator">=</span><span class="token string">"unknown"</span>
<span class="token keyword">fi</span>
<span class="token keyword">else</span>
<span class="token comment">#CentOS 7+</span>
<span class="token assign-left variable">r</span><span class="token operator">=</span><span class="token string">"<span class="token variable"><span class="token variable">$(</span>systemctl is-active $1 <span class="token operator"><span class="token file-descriptor important">2</span>></span><span class="token file-descriptor important">&amp;1</span><span class="token variable">)</span></span>"</span>
<span class="token keyword">fi</span>
<span class="token builtin class-name">echo</span> <span class="token string">"<span class="token variable">$r</span>"</span>
<span class="token punctuation">&#125;</span>

<span class="token keyword">function</span> <span class="token function-name function">getSSHStatus</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
<span class="token comment">#SSHD服务状态，配置,受信任主机等</span>
<span class="token builtin class-name">echo</span> <span class="token string">""</span>
<span class="token builtin class-name">echo</span> <span class="token string">""</span>
<span class="token builtin class-name">echo</span> <span class="token string">"############################ SSH检查 #############################"</span>
<span class="token comment">#检查受信任主机</span>
<span class="token assign-left variable">pwdfile</span><span class="token operator">=</span><span class="token string">"<span class="token variable"><span class="token variable">$(</span><span class="token function">cat</span> /etc/passwd<span class="token variable">)</span></span>"</span>
<span class="token builtin class-name">echo</span> <span class="token string">"服务状态：<span class="token variable"><span class="token variable">$(</span>getState sshd<span class="token variable">)</span></span>"</span>
<span class="token assign-left variable">Protocol_Version</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">cat</span> /etc/ssh/sshd_config <span class="token operator">|</span> <span class="token function">grep</span> Protocol <span class="token operator">|</span> <span class="token function">awk</span> <span class="token string">'&#123;print $2&#125;'</span><span class="token variable">)</span></span>
<span class="token builtin class-name">echo</span> <span class="token string">"SSH协议版本：<span class="token variable">$Protocol_Version</span>"</span>
<span class="token builtin class-name">echo</span> <span class="token string">""</span>
<span class="token builtin class-name">echo</span> <span class="token string">"信任主机"</span>
<span class="token builtin class-name">echo</span> <span class="token string">"--------"</span>
<span class="token assign-left variable">authorized</span><span class="token operator">=</span><span class="token number">0</span>
<span class="token keyword">for</span> <span class="token for-or-select variable">user</span> <span class="token keyword">in</span> <span class="token variable"><span class="token variable">$(</span><span class="token builtin class-name">echo</span> <span class="token string">"<span class="token variable">$pwdfile</span>"</span> <span class="token operator">|</span> <span class="token function">grep</span> /bin/bash <span class="token operator">|</span> <span class="token function">awk</span> -F: <span class="token string">'&#123;print $1&#125;'</span><span class="token variable">)</span></span><span class="token punctuation">;</span><span class="token keyword">do</span>
<span class="token assign-left variable">authorize_file</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token builtin class-name">echo</span> <span class="token string">"<span class="token variable">$pwdfile</span>"</span> <span class="token operator">|</span> <span class="token function">grep</span> <span class="token parameter variable">-w</span> $user <span class="token operator">|</span> <span class="token function">awk</span> -F: <span class="token string">'&#123;printf $6"/.ssh/authorized_keys"&#125;'</span><span class="token variable">)</span></span>
<span class="token assign-left variable">authorized_host</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">cat</span> $authorize_file <span class="token operator"><span class="token file-descriptor important">2</span>></span>/dev/null <span class="token operator">|</span> <span class="token function">awk</span> <span class="token string">'&#123;print $3&#125;'</span> <span class="token operator">|</span> <span class="token function">tr</span> <span class="token string">'\n'</span> <span class="token string">','</span> <span class="token operator">|</span> <span class="token function">sed</span> <span class="token string">'s/,$//'</span><span class="token variable">)</span></span>
<span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token operator">!</span> <span class="token parameter variable">-z</span> <span class="token variable">$authorized_host</span> <span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">then</span>
<span class="token builtin class-name">echo</span> <span class="token string">"<span class="token variable">$user</span> 授权 <span class="token entity" title="\&quot;">\"</span><span class="token variable">$authorized_host</span><span class="token entity" title="\&quot;">\"</span> 无密码访问"</span>
<span class="token keyword">fi</span>
<span class="token builtin class-name">let</span> <span class="token assign-left variable">authorized</span><span class="token operator">=</span>authorized+<span class="token variable"><span class="token variable">$(</span><span class="token function">cat</span> $authorize_file <span class="token operator"><span class="token file-descriptor important">2</span>></span>/dev/null <span class="token operator">|</span> <span class="token function">awk</span> <span class="token string">'&#123;print $3&#125;'</span><span class="token operator">|</span><span class="token function">wc</span> <span class="token parameter variable">-l</span><span class="token variable">)</span></span>
<span class="token keyword">done</span>

<span class="token builtin class-name">echo</span> <span class="token string">""</span>
<span class="token builtin class-name">echo</span> <span class="token string">"是否允许ROOT远程登录"</span>
<span class="token builtin class-name">echo</span> <span class="token string">"--------------------"</span>
<span class="token assign-left variable">config</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">cat</span> /etc/ssh/sshd_config <span class="token operator">|</span> <span class="token function">grep</span> PermitRootLogin<span class="token variable">)</span></span>
<span class="token assign-left variable">firstChar</span><span class="token operator">=</span><span class="token variable">$&#123;config<span class="token operator">:</span>0<span class="token operator">:</span>1&#125;</span>
<span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token variable">$firstChar</span> <span class="token operator">==</span> <span class="token string">"#"</span> <span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">then</span>
<span class="token assign-left variable">PermitRootLogin</span><span class="token operator">=</span><span class="token string">"yes"</span> <span class="token comment">#默认是允许ROOT远程登录的</span>
<span class="token keyword">else</span>
<span class="token assign-left variable">PermitRootLogin</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token builtin class-name">echo</span> $config <span class="token operator">|</span> <span class="token function">awk</span> <span class="token string">'&#123;print $2&#125;'</span><span class="token variable">)</span></span>
<span class="token keyword">fi</span>
<span class="token builtin class-name">echo</span> <span class="token string">"PermitRootLogin <span class="token variable">$PermitRootLogin</span>"</span>

<span class="token builtin class-name">echo</span> <span class="token string">""</span>
<span class="token builtin class-name">echo</span> <span class="token string">"/etc/ssh/sshd_config"</span>
<span class="token builtin class-name">echo</span> <span class="token string">"--------------------"</span>
<span class="token function">cat</span> /etc/ssh/sshd_config <span class="token operator">|</span> <span class="token function">grep</span> <span class="token parameter variable">-v</span> <span class="token string">"^#"</span> <span class="token operator">|</span> <span class="token function">sed</span> <span class="token string">'/^$/d'</span>

<span class="token comment">#报表信息</span>
<span class="token assign-left variable">report_SSHAuthorized</span><span class="token operator">=</span><span class="token string">"<span class="token variable">$authorized</span>"</span> <span class="token comment">#SSH信任主机</span>
<span class="token assign-left variable">report_SSHDProtocolVersion</span><span class="token operator">=</span><span class="token string">"<span class="token variable">$Protocol_Version</span>"</span> <span class="token comment">#SSH协议版本</span>
<span class="token assign-left variable">report_SSHDPermitRootLogin</span><span class="token operator">=</span><span class="token string">"<span class="token variable">$PermitRootLogin</span>"</span> <span class="token comment">#允许root远程登录</span>
<span class="token punctuation">&#125;</span>
<span class="token keyword">function</span> <span class="token function-name function">getNTPStatus</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
<span class="token comment">#NTP服务状态，当前时间，配置等</span>
<span class="token builtin class-name">echo</span> <span class="token string">""</span>
<span class="token builtin class-name">echo</span> <span class="token string">""</span>
<span class="token builtin class-name">echo</span> <span class="token string">"############################ NTP检查 #############################"</span>
<span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token parameter variable">-e</span> /etc/ntp.conf <span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">then</span>
<span class="token builtin class-name">echo</span> <span class="token string">"服务状态：<span class="token variable"><span class="token variable">$(</span>getState ntpd<span class="token variable">)</span></span>"</span>
<span class="token builtin class-name">echo</span> <span class="token string">""</span>
<span class="token builtin class-name">echo</span> <span class="token string">"/etc/ntp.conf"</span>
<span class="token builtin class-name">echo</span> <span class="token string">"-------------"</span>
<span class="token function">cat</span> /etc/ntp.conf <span class="token operator"><span class="token file-descriptor important">2</span>></span>/dev/null <span class="token operator">|</span> <span class="token function">grep</span> <span class="token parameter variable">-v</span> <span class="token string">"^#"</span> <span class="token operator">|</span> <span class="token function">sed</span> <span class="token string">'/^$/d'</span>
<span class="token keyword">fi</span>
<span class="token comment">#报表信息</span>
<span class="token assign-left variable">report_NTP</span><span class="token operator">=</span><span class="token string">"<span class="token variable"><span class="token variable">$(</span>getState ntpd<span class="token variable">)</span></span>"</span>
<span class="token punctuation">&#125;</span>


<span class="token keyword">function</span> <span class="token function-name function">uploadHostDailyCheckReport</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
<span class="token assign-left variable">json</span><span class="token operator">=</span><span class="token string">"&#123;
<span class="token entity" title="\&quot;">\"</span>DateTime<span class="token entity" title="\&quot;">\"</span>:<span class="token entity" title="\&quot;">\"</span><span class="token variable">$report_DateTime</span><span class="token entity" title="\&quot;">\"</span>,
<span class="token entity" title="\&quot;">\"</span>Hostname<span class="token entity" title="\&quot;">\"</span>:<span class="token entity" title="\&quot;">\"</span><span class="token variable">$report_Hostname</span><span class="token entity" title="\&quot;">\"</span>,
<span class="token entity" title="\&quot;">\"</span>OSRelease<span class="token entity" title="\&quot;">\"</span>:<span class="token entity" title="\&quot;">\"</span><span class="token variable">$report_OSRelease</span><span class="token entity" title="\&quot;">\"</span>,
<span class="token entity" title="\&quot;">\"</span>Kernel<span class="token entity" title="\&quot;">\"</span>:<span class="token entity" title="\&quot;">\"</span><span class="token variable">$report_Kernel</span><span class="token entity" title="\&quot;">\"</span>,
<span class="token entity" title="\&quot;">\"</span>Language<span class="token entity" title="\&quot;">\"</span>:<span class="token entity" title="\&quot;">\"</span><span class="token variable">$report_Language</span><span class="token entity" title="\&quot;">\"</span>,
<span class="token entity" title="\&quot;">\"</span>LastReboot<span class="token entity" title="\&quot;">\"</span>:<span class="token entity" title="\&quot;">\"</span><span class="token variable">$report_LastReboot</span><span class="token entity" title="\&quot;">\"</span>,
<span class="token entity" title="\&quot;">\"</span>Uptime<span class="token entity" title="\&quot;">\"</span>:<span class="token entity" title="\&quot;">\"</span><span class="token variable">$report_Uptime</span><span class="token entity" title="\&quot;">\"</span>,
<span class="token entity" title="\&quot;">\"</span>CPUs<span class="token entity" title="\&quot;">\"</span>:<span class="token entity" title="\&quot;">\"</span><span class="token variable">$report_CPUs</span><span class="token entity" title="\&quot;">\"</span>,
<span class="token entity" title="\&quot;">\"</span>CPUType<span class="token entity" title="\&quot;">\"</span>:<span class="token entity" title="\&quot;">\"</span><span class="token variable">$report_CPUType</span><span class="token entity" title="\&quot;">\"</span>,
<span class="token entity" title="\&quot;">\"</span>Arch<span class="token entity" title="\&quot;">\"</span>:<span class="token entity" title="\&quot;">\"</span><span class="token variable">$report_Arch</span><span class="token entity" title="\&quot;">\"</span>,
<span class="token entity" title="\&quot;">\"</span>MemTotal<span class="token entity" title="\&quot;">\"</span>:<span class="token entity" title="\&quot;">\"</span><span class="token variable">$report_MemTotal</span><span class="token entity" title="\&quot;">\"</span>,
<span class="token entity" title="\&quot;">\"</span>MemFree<span class="token entity" title="\&quot;">\"</span>:<span class="token entity" title="\&quot;">\"</span><span class="token variable">$report_MemFree</span><span class="token entity" title="\&quot;">\"</span>,
<span class="token entity" title="\&quot;">\"</span>MemUsedPercent<span class="token entity" title="\&quot;">\"</span>:<span class="token entity" title="\&quot;">\"</span><span class="token variable">$report_MemUsedPercent</span><span class="token entity" title="\&quot;">\"</span>,
<span class="token entity" title="\&quot;">\"</span>DiskTotal<span class="token entity" title="\&quot;">\"</span>:<span class="token entity" title="\&quot;">\"</span><span class="token variable">$report_DiskTotal</span><span class="token entity" title="\&quot;">\"</span>,
<span class="token entity" title="\&quot;">\"</span>DiskFree<span class="token entity" title="\&quot;">\"</span>:<span class="token entity" title="\&quot;">\"</span><span class="token variable">$report_DiskFree</span><span class="token entity" title="\&quot;">\"</span>,
<span class="token entity" title="\&quot;">\"</span>DiskUsedPercent<span class="token entity" title="\&quot;">\"</span>:<span class="token entity" title="\&quot;">\"</span><span class="token variable">$report_DiskUsedPercent</span><span class="token entity" title="\&quot;">\"</span>,
<span class="token entity" title="\&quot;">\"</span>InodeTotal<span class="token entity" title="\&quot;">\"</span>:<span class="token entity" title="\&quot;">\"</span><span class="token variable">$report_InodeTotal</span><span class="token entity" title="\&quot;">\"</span>,
<span class="token entity" title="\&quot;">\"</span>InodeFree<span class="token entity" title="\&quot;">\"</span>:<span class="token entity" title="\&quot;">\"</span><span class="token variable">$report_InodeFree</span><span class="token entity" title="\&quot;">\"</span>,
<span class="token entity" title="\&quot;">\"</span>InodeUsedPercent<span class="token entity" title="\&quot;">\"</span>:<span class="token entity" title="\&quot;">\"</span><span class="token variable">$report_InodeUsedPercent</span><span class="token entity" title="\&quot;">\"</span>,
<span class="token entity" title="\&quot;">\"</span>IP<span class="token entity" title="\&quot;">\"</span>:<span class="token entity" title="\&quot;">\"</span><span class="token variable">$report_IP</span><span class="token entity" title="\&quot;">\"</span>,
<span class="token entity" title="\&quot;">\"</span>MAC<span class="token entity" title="\&quot;">\"</span>:<span class="token entity" title="\&quot;">\"</span><span class="token variable">$report_MAC</span><span class="token entity" title="\&quot;">\"</span>,
<span class="token entity" title="\&quot;">\"</span>Gateway<span class="token entity" title="\&quot;">\"</span>:<span class="token entity" title="\&quot;">\"</span><span class="token variable">$report_Gateway</span><span class="token entity" title="\&quot;">\"</span>,
<span class="token entity" title="\&quot;">\"</span>DNS<span class="token entity" title="\&quot;">\"</span>:<span class="token entity" title="\&quot;">\"</span><span class="token variable">$report_DNS</span><span class="token entity" title="\&quot;">\"</span>,
<span class="token entity" title="\&quot;">\"</span>Listen<span class="token entity" title="\&quot;">\"</span>:<span class="token entity" title="\&quot;">\"</span><span class="token variable">$report_Listen</span><span class="token entity" title="\&quot;">\"</span>,
<span class="token entity" title="\&quot;">\"</span>Selinux<span class="token entity" title="\&quot;">\"</span>:<span class="token entity" title="\&quot;">\"</span><span class="token variable">$report_Selinux</span><span class="token entity" title="\&quot;">\"</span>,
<span class="token entity" title="\&quot;">\"</span>Firewall<span class="token entity" title="\&quot;">\"</span>:<span class="token entity" title="\&quot;">\"</span><span class="token variable">$report_Firewall</span><span class="token entity" title="\&quot;">\"</span>,
<span class="token entity" title="\&quot;">\"</span>USERs<span class="token entity" title="\&quot;">\"</span>:<span class="token entity" title="\&quot;">\"</span><span class="token variable">$report_USERs</span><span class="token entity" title="\&quot;">\"</span>,
<span class="token entity" title="\&quot;">\"</span>USEREmptyPassword<span class="token entity" title="\&quot;">\"</span>:<span class="token entity" title="\&quot;">\"</span><span class="token variable">$report_USEREmptyPassword</span><span class="token entity" title="\&quot;">\"</span>,
<span class="token entity" title="\&quot;">\"</span>USERTheSameUID<span class="token entity" title="\&quot;">\"</span>:<span class="token entity" title="\&quot;">\"</span><span class="token variable">$report_USERTheSameUID</span><span class="token entity" title="\&quot;">\"</span>,
<span class="token entity" title="\&quot;">\"</span>PasswordExpiry<span class="token entity" title="\&quot;">\"</span>:<span class="token entity" title="\&quot;">\"</span><span class="token variable">$report_PasswordExpiry</span><span class="token entity" title="\&quot;">\"</span>,
<span class="token entity" title="\&quot;">\"</span>RootUser<span class="token entity" title="\&quot;">\"</span>:<span class="token entity" title="\&quot;">\"</span><span class="token variable">$report_RootUser</span><span class="token entity" title="\&quot;">\"</span>,
<span class="token entity" title="\&quot;">\"</span>Sudoers<span class="token entity" title="\&quot;">\"</span>:<span class="token entity" title="\&quot;">\"</span><span class="token variable">$report_Sudoers</span><span class="token entity" title="\&quot;">\"</span>,
<span class="token entity" title="\&quot;">\"</span>SSHAuthorized<span class="token entity" title="\&quot;">\"</span>:<span class="token entity" title="\&quot;">\"</span><span class="token variable">$report_SSHAuthorized</span><span class="token entity" title="\&quot;">\"</span>,
<span class="token entity" title="\&quot;">\"</span>SSHDProtocolVersion<span class="token entity" title="\&quot;">\"</span>:<span class="token entity" title="\&quot;">\"</span><span class="token variable">$report_SSHDProtocolVersion</span><span class="token entity" title="\&quot;">\"</span>,
<span class="token entity" title="\&quot;">\"</span>SSHDPermitRootLogin<span class="token entity" title="\&quot;">\"</span>:<span class="token entity" title="\&quot;">\"</span><span class="token variable">$report_SSHDPermitRootLogin</span><span class="token entity" title="\&quot;">\"</span>,
<span class="token entity" title="\&quot;">\"</span>DefunctProsess<span class="token entity" title="\&quot;">\"</span>:<span class="token entity" title="\&quot;">\"</span><span class="token variable">$report_DefunctProsess</span><span class="token entity" title="\&quot;">\"</span>,
<span class="token entity" title="\&quot;">\"</span>SelfInitiatedService<span class="token entity" title="\&quot;">\"</span>:<span class="token entity" title="\&quot;">\"</span><span class="token variable">$report_SelfInitiatedService</span><span class="token entity" title="\&quot;">\"</span>,
<span class="token entity" title="\&quot;">\"</span>SelfInitiatedProgram<span class="token entity" title="\&quot;">\"</span>:<span class="token entity" title="\&quot;">\"</span><span class="token variable">$report_SelfInitiatedProgram</span><span class="token entity" title="\&quot;">\"</span>,
<span class="token entity" title="\&quot;">\"</span>RuningService<span class="token entity" title="\&quot;">\"</span>:<span class="token entity" title="\&quot;">\"</span><span class="token variable">$report_RuningService</span><span class="token entity" title="\&quot;">\"</span>,
<span class="token entity" title="\&quot;">\"</span>Crontab<span class="token entity" title="\&quot;">\"</span>:<span class="token entity" title="\&quot;">\"</span><span class="token variable">$report_Crontab</span><span class="token entity" title="\&quot;">\"</span>,
<span class="token entity" title="\&quot;">\"</span>Syslog<span class="token entity" title="\&quot;">\"</span>:<span class="token entity" title="\&quot;">\"</span><span class="token variable">$report_Syslog</span><span class="token entity" title="\&quot;">\"</span>,
<span class="token entity" title="\&quot;">\"</span>SNMP<span class="token entity" title="\&quot;">\"</span>:<span class="token entity" title="\&quot;">\"</span><span class="token variable">$report_SNMP</span><span class="token entity" title="\&quot;">\"</span>,
<span class="token entity" title="\&quot;">\"</span>NTP<span class="token entity" title="\&quot;">\"</span>:<span class="token entity" title="\&quot;">\"</span><span class="token variable">$report_NTP</span><span class="token entity" title="\&quot;">\"</span>,
<span class="token entity" title="\&quot;">\"</span>JDK<span class="token entity" title="\&quot;">\"</span>:<span class="token entity" title="\&quot;">\"</span><span class="token variable">$report_JDK</span><span class="token entity" title="\&quot;">\"</span>
&#125;"</span>
<span class="token comment">#echo "$json" </span>
<span class="token function">curl</span> <span class="token parameter variable">-l</span> <span class="token parameter variable">-H</span> <span class="token string">"Content-type: application/json"</span> <span class="token parameter variable">-X</span> POST <span class="token parameter variable">-d</span> <span class="token string">"<span class="token variable">$json</span>"</span> <span class="token string">"<span class="token variable">$uploadHostDailyCheckReportApi</span>"</span> <span class="token operator"><span class="token file-descriptor important">2</span>></span>/dev/null
<span class="token punctuation">&#125;</span>

<span class="token keyword">function</span> <span class="token function-name function">getchage_file_24h</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">&#123;</span>
<span class="token builtin class-name">echo</span> <span class="token string">"############################ 文件检查 #############################"</span>
    <span class="token assign-left variable">check2</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">find</span> / <span class="token parameter variable">-name</span> <span class="token string">'*.sh'</span> <span class="token parameter variable">-mtime</span> <span class="token parameter variable">-1</span><span class="token variable">)</span></span>
<span class="token assign-left variable">check21</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">find</span> / <span class="token parameter variable">-name</span> <span class="token string">'*.asp'</span> <span class="token parameter variable">-mtime</span> <span class="token parameter variable">-1</span><span class="token variable">)</span></span>
<span class="token assign-left variable">check22</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">find</span> / <span class="token parameter variable">-name</span> <span class="token string">'*.php'</span> <span class="token parameter variable">-mtime</span> <span class="token parameter variable">-1</span><span class="token variable">)</span></span>
<span class="token assign-left variable">check23</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">find</span> / <span class="token parameter variable">-name</span> <span class="token string">'*.aspx'</span> <span class="token parameter variable">-mtime</span> <span class="token parameter variable">-1</span><span class="token variable">)</span></span>
<span class="token assign-left variable">check24</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">find</span> / <span class="token parameter variable">-name</span> <span class="token string">'*.jsp'</span> <span class="token parameter variable">-mtime</span> <span class="token parameter variable">-1</span><span class="token variable">)</span></span>
<span class="token assign-left variable">check25</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">find</span> / <span class="token parameter variable">-name</span> <span class="token string">'*.html'</span> <span class="token parameter variable">-mtime</span> <span class="token parameter variable">-1</span><span class="token variable">)</span></span>
<span class="token assign-left variable">check26</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">find</span> / <span class="token parameter variable">-name</span> <span class="token string">'*.htm'</span> <span class="token parameter variable">-mtime</span> <span class="token parameter variable">-1</span><span class="token variable">)</span></span>
<span class="token assign-left variable">check9</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">find</span> / <span class="token parameter variable">-name</span> core <span class="token parameter variable">-exec</span> <span class="token function">ls</span> <span class="token parameter variable">-l</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span> <span class="token punctuation">\</span><span class="token punctuation">;</span><span class="token variable">)</span></span>
<span class="token assign-left variable">check10</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">cat</span> /etc/crontab<span class="token variable">)</span></span>
<span class="token assign-left variable">check12</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">ls</span> <span class="token parameter variable">-alt</span> /usr/bin <span class="token operator">|</span> <span class="token function">head</span> <span class="token parameter variable">-10</span><span class="token variable">)</span></span>
<span class="token function">cat</span> <span class="token operator">&lt;&lt;</span><span class="token string">EOF

############################查看所有被修改过的文件返回最近24小时内的############################
<span class="token variable">$&#123;check2&#125;</span>
<span class="token variable">$&#123;check21&#125;</span>
<span class="token variable">$&#123;check22&#125;</span>
<span class="token variable">$&#123;check23&#125;</span>
<span class="token variable">$&#123;check24&#125;</span>
<span class="token variable">$&#123;check25&#125;</span>
<span class="token variable">$&#123;check26&#125;</span>
<span class="token variable">$&#123;line&#125;</span>

############################检查定时文件的完整性############################
<span class="token variable">$&#123;check10&#125;</span>
<span class="token variable">$&#123;line&#125;</span>

############################查看系统命令是否被替换############################
<span class="token variable">$&#123;check12&#125;</span>
<span class="token variable">$&#123;line&#125;</span>
EOF</span>
<span class="token punctuation">&#125;</span>

<span class="token keyword">function</span> <span class="token function-name function">check</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
version
getSystemStatus
getCpuStatus
getMemStatus
getDiskStatus
getNetworkStatus
getListenStatus
getProcessStatus
getServiceStatus
getAutoStartStatus
getLoginStatus
getCronStatus
getUserStatus
getPasswordStatus
getSudoersStatus
getJDKStatus
getFirewallStatus
getSSHStatus
getSyslogStatus
getSNMPStatus
getNTPStatus
getInstalledStatus
getchage_file_24h
<span class="token punctuation">&#125;</span>


<span class="token comment">#执行检查并保存检查结果</span>
check <span class="token operator">></span> <span class="token variable">$RESULTFILE</span>

<span class="token builtin class-name">echo</span> <span class="token string">"检查结果：<span class="token variable">$RESULTFILE</span>"</span>
<span class="token builtin class-name">echo</span> <span class="token parameter variable">-e</span> <span class="token string">"<span class="token variable"><span class="token variable">`</span><span class="token function">date</span> <span class="token string">"+%Y-%m-%d %H:%M:%S"</span><span class="token variable">`</span></span> 阿里云PHP企业平台巡检报告"</span>  <span class="token operator">|</span> mail <span class="token parameter variable">-a</span> <span class="token variable">$RESULTFILE</span> <span class="token parameter variable">-s</span> <span class="token string">"阿里云PHP企业平台巡检报告"</span> h@163.com<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>END</p>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux日常巡检shell</title>
    <url>/2019/09/19/Linux%E6%97%A5%E5%B8%B8%E5%B7%A1%E6%A3%80shell/</url>
    <content><![CDATA[<pre class="line-numbers language-none"><code class="language-none">#!&#x2F;bin&#x2F;bash
###################################################################
# Functions: this script from polling system status
# Info: be suitable for CentOS&#x2F;RHEL 6&#x2F;7 
# Changelog:
#      2019-01-30    haodexuan     initial commit
###################################################################
#set path env,if not set will some command not found in crontab

export PATH&#x3D;&#x2F;usr&#x2F;local&#x2F;sbin:&#x2F;usr&#x2F;local&#x2F;bin:&#x2F;sbin:&#x2F;bin:&#x2F;usr&#x2F;sbin:&#x2F;usr&#x2F;bin:&#x2F;root&#x2F;bin
source &#x2F;etc&#x2F;profile


# run this script use root
[ $(id -u) -gt 0 ] &amp;&amp; echo &quot;please use root run the script! &quot; &amp;&amp; exit 1

# check system  version
OS_Version&#x3D;$(awk &#39;&#123;print $(NF-1)&#125;&#39; &#x2F;etc&#x2F;redhat-release)

# declare script version date
Script_Version&#x3D;&quot;2019.01.30&quot;


# define polling log path
LOGPATH&#x3D;&#x2F;home&#x2F;logs&#x2F;polling
[ -d $LOGPATH ] || mkdir -p $LOGPATH
RESULTFILE&#x3D;&quot;$LOGPATH&#x2F;HostDailyCheck-&#96;hostname&#96;-&#96;date +%Y%m%d&#96;.txt&quot;


# define globle variable
report_DateTime&#x3D;&quot;&quot;    #日期 ok
report_Hostname&#x3D;&quot;&quot;    #主机名 ok
report_OSRelease&#x3D;&quot;&quot;    #发行版本 ok
report_Kernel&#x3D;&quot;&quot;    #内核 ok
report_Language&#x3D;&quot;&quot;    #语言&#x2F;编码 ok
report_LastReboot&#x3D;&quot;&quot;    #最近启动时间 ok
report_Uptime&#x3D;&quot;&quot;    #运行时间（天） ok
report_CPUs&#x3D;&quot;&quot;    #CPU数量 ok
report_CPUType&#x3D;&quot;&quot;    #CPU类型 ok
report_Arch&#x3D;&quot;&quot;    #CPU架构 ok
report_MemTotal&#x3D;&quot;&quot;    #内存总容量(MB) ok
report_MemFree&#x3D;&quot;&quot;    #内存剩余(MB) ok
report_MemUsedPercent&#x3D;&quot;&quot;    #内存使用率% ok
report_DiskTotal&#x3D;&quot;&quot;    #硬盘总容量(GB) ok
report_DiskFree&#x3D;&quot;&quot;    #硬盘剩余(GB) ok
report_DiskUsedPercent&#x3D;&quot;&quot;    #硬盘使用率% ok
report_InodeTotal&#x3D;&quot;&quot;    #Inode总量 ok
report_InodeFree&#x3D;&quot;&quot;    #Inode剩余 ok
report_InodeUsedPercent&#x3D;&quot;&quot;    #Inode使用率 ok
report_IP&#x3D;&quot;&quot;    #IP地址 ok
report_MAC&#x3D;&quot;&quot;    #MAC地址 ok
report_Gateway&#x3D;&quot;&quot;    #默认网关 ok
report_DNS&#x3D;&quot;&quot;    #DNS ok
report_Listen&#x3D;&quot;&quot;    #监听 ok
report_Selinux&#x3D;&quot;&quot;    #Selinux ok
report_Firewall&#x3D;&quot;&quot;    #防火墙 ok
report_USERs&#x3D;&quot;&quot;    #用户 ok
report_USEREmptyPassword&#x3D;&quot;&quot;   #空密码用户 ok
report_USERTheSameUID&#x3D;&quot;&quot;      #相同ID的用户 ok 
report_PasswordExpiry&#x3D;&quot;&quot;    #密码过期（天） ok
report_RootUser&#x3D;&quot;&quot;    #root用户 ok
report_Sudoers&#x3D;&quot;&quot;    #sudo授权  ok
report_SSHAuthorized&#x3D;&quot;&quot;    #SSH信任主机 ok
report_SSHDProtocolVersion&#x3D;&quot;&quot;    #SSH协议版本 ok
report_SSHDPermitRootLogin&#x3D;&quot;&quot;    #允许root远程登录 ok
report_DefunctProsess&#x3D;&quot;&quot;    #僵尸进程数量 ok
report_SelfInitiatedService&#x3D;&quot;&quot;    #自启动服务数量 ok
report_SelfInitiatedProgram&#x3D;&quot;&quot;    #自启动程序数量 ok
report_RuningService&#x3D;&quot;&quot;           #运行中服务数  ok
report_Crontab&#x3D;&quot;&quot;    #计划任务数 ok
report_Syslog&#x3D;&quot;&quot;    #日志服务 ok
report_SNMP&#x3D;&quot;&quot;    #SNMP  OK
report_NTP&#x3D;&quot;&quot;    #NTP ok
report_JDK&#x3D;&quot;&quot;    #JDK版本 ok


function version()&#123;
    echo &quot;&quot;
    echo &quot;System Polling：Version $Script_Version &quot;
    echo &quot;&quot;
&#125;


function getCpuStatus()&#123;
    echo &quot;&quot;
    echo &quot;############################ Check CPU Status#############################&quot;
    Physical_CPUs&#x3D;$(grep &quot;physical id&quot; &#x2F;proc&#x2F;cpuinfo| sort | uniq | wc -l)
    Virt_CPUs&#x3D;$(grep &quot;processor&quot; &#x2F;proc&#x2F;cpuinfo | wc -l)
    CPU_Kernels&#x3D;$(grep &quot;cores&quot; &#x2F;proc&#x2F;cpuinfo|uniq| awk -F &#39;: &#39; &#39;&#123;print $2&#125;&#39;)
    CPU_Type&#x3D;$(grep &quot;model name&quot; &#x2F;proc&#x2F;cpuinfo | awk -F &#39;: &#39; &#39;&#123;print $2&#125;&#39; | sort | uniq)
    CPU_Arch&#x3D;$(uname -m)
    echo &quot;物理CPU个数:$Physical_CPUs&quot;
    echo &quot;逻辑CPU个数:$Virt_CPUs&quot;
    echo &quot;每CPU核心数:$CPU_Kernels&quot;
    echo &quot;    CPU型号:$CPU_Type&quot;
    echo &quot;    CPU架构:$CPU_Arch&quot;
    # report information
    report_CPUs&#x3D;$Virt_CPUs    #CPU数量
    report_CPUType&#x3D;$CPU_Type  #CPU类型
    report_Arch&#x3D;$CPU_Arch     #CPU架构
&#125;


function getMemStatus()&#123;
    echo &quot;&quot;
    echo &quot;############################ Check Memmory Usage ###########################&quot;
    if [[ $OS_Version &lt; 7 ]];then
        free -mo
    else
        free -h
    fi
    # report information
    MemTotal&#x3D;$(grep MemTotal &#x2F;proc&#x2F;meminfo| awk &#39;&#123;print $2&#125;&#39;)  #KB
    MemFree&#x3D;$(grep MemFree &#x2F;proc&#x2F;meminfo| awk &#39;&#123;print $2&#125;&#39;)    #KB
    let MemUsed&#x3D;MemTotal-MemFree
    MemPercent&#x3D;$(awk &quot;BEGIN &#123;if($MemTotal&#x3D;&#x3D;0)&#123;printf 100&#125;else&#123;printf \&quot;%.2f\&quot;,$MemUsed*100&#x2F;$MemTotal&#125;&#125;&quot;)
    report_MemTotal&#x3D;&quot;$((MemTotal&#x2F;1024))&quot;&quot;MB&quot;        #内存总容量(MB)
    report_MemFree&#x3D;&quot;$((MemFree&#x2F;1024))&quot;&quot;MB&quot;          #内存剩余(MB)
    report_MemUsedPercent&#x3D;&quot;$(awk &quot;BEGIN &#123;if($MemTotal&#x3D;&#x3D;0)&#123;printf 100&#125;else&#123;printf \&quot;%.2f\&quot;,$MemUsed*100&#x2F;$MemTotal&#125;&#125;&quot;)&quot;&quot;%&quot;   #内存使用率%
&#125;


function getDiskStatus()&#123;
    echo &quot;&quot;
    echo &quot;############################ Check Disk Status ############################&quot;
    df -hiP | sed &#39;s&#x2F;Mounted on&#x2F;Mounted&#x2F;&#39; &gt; &#x2F;tmp&#x2F;inode
    df -hTP | sed &#39;s&#x2F;Mounted on&#x2F;Mounted&#x2F;&#39; &gt; &#x2F;tmp&#x2F;disk 
    join &#x2F;tmp&#x2F;disk &#x2F;tmp&#x2F;inode | awk &#39;&#123;print $1,$2,&quot;|&quot;,$3,$4,$5,$6,&quot;|&quot;,$8,$9,$10,$11,&quot;|&quot;,$12&#125;&#39;| column -t
    # report information
    diskdata&#x3D;$(df -TP | sed &#39;1d&#39; | awk &#39;$2!&#x3D;&quot;tmpfs&quot;&#123;print&#125;&#39;) #KB
    disktotal&#x3D;$(echo &quot;$diskdata&quot; | awk &#39;&#123;total+&#x3D;$3&#125;END&#123;print total&#125;&#39;) #KB
    diskused&#x3D;$(echo &quot;$diskdata&quot; | awk &#39;&#123;total+&#x3D;$4&#125;END&#123;print total&#125;&#39;)  #KB
    diskfree&#x3D;$((disktotal-diskused)) #KB
    diskusedpercent&#x3D;$(echo $disktotal $diskused | awk &#39;&#123;if($1&#x3D;&#x3D;0)&#123;printf 100&#125;else&#123;printf &quot;%.2f&quot;,$2*100&#x2F;$1&#125;&#125;&#39;) 
    inodedata&#x3D;$(df -iTP | sed &#39;1d&#39; | awk &#39;$2!&#x3D;&quot;tmpfs&quot;&#123;print&#125;&#39;)
    inodetotal&#x3D;$(echo &quot;$inodedata&quot; | awk &#39;&#123;total+&#x3D;$3&#125;END&#123;print total&#125;&#39;)
    inodeused&#x3D;$(echo &quot;$inodedata&quot; | awk &#39;&#123;total+&#x3D;$4&#125;END&#123;print total&#125;&#39;)
    inodefree&#x3D;$((inodetotal-inodeused))
    inodeusedpercent&#x3D;$(echo $inodetotal $inodeused | awk &#39;&#123;if($1&#x3D;&#x3D;0)&#123;printf 100&#125;else&#123;printf &quot;%.2f&quot;,$2*100&#x2F;$1&#125;&#125;&#39;)
    report_DiskTotal&#x3D;$((disktotal&#x2F;1024&#x2F;1024))&quot;GB&quot;   #硬盘总容量(GB)
    report_DiskFree&#x3D;$((diskfree&#x2F;1024&#x2F;1024))&quot;GB&quot;     #硬盘剩余(GB)
    report_DiskUsedPercent&#x3D;&quot;$diskusedpercent&quot;&quot;%&quot;    #硬盘使用率%
    report_InodeTotal&#x3D;$((inodetotal&#x2F;1000))&quot;K&quot;       #Inode总量
    report_InodeFree&#x3D;$((inodefree&#x2F;1000))&quot;K&quot;         #Inode剩余
    report_InodeUsedPercent&#x3D;&quot;$inodeusedpercent&quot;&quot;%&quot;  #Inode使用率%
    echo &quot;&quot;
&#125;


function getSystemStatus()&#123;
    echo &quot;&quot;
    echo &quot;############################ Check System Status ############################&quot;
    if [ -e &#x2F;etc&#x2F;sysconfig&#x2F;i18n ];then
        default_LANG&#x3D;&quot;$(grep &quot;LANG&#x3D;&quot; &#x2F;etc&#x2F;sysconfig&#x2F;i18n | grep -v &quot;^#&quot; | awk -F &#39;&quot;&#39; &#39;&#123;print $2&#125;&#39;)&quot;
    else
        default_LANG&#x3D;$LANG
    fi
    export LANG&#x3D;&quot;en_US.UTF-8&quot;
    Release&#x3D;$(cat &#x2F;etc&#x2F;redhat-release 2&gt;&#x2F;dev&#x2F;null)
    Kernel&#x3D;$(uname -r)
    OS&#x3D;$(uname -o)
    Hostname&#x3D;$(uname -n)
    SELinux&#x3D;$(&#x2F;usr&#x2F;sbin&#x2F;sestatus | grep &quot;SELinux status: &quot; | awk &#39;&#123;print $3&#125;&#39;)
    LastReboot&#x3D;$(who -b | awk &#39;&#123;print $3,$4&#125;&#39;)
    uptime&#x3D;$(uptime | sed &#39;s&#x2F;.*up [,]∗, .*&#x2F;\1&#x2F;&#39;)
    echo &quot;     系统：$OS&quot;
    echo &quot; 发行版本：$Release&quot;
    echo &quot;     内核：$Kernel&quot;
    echo &quot;   主机名：$Hostname&quot;
    echo &quot;  SELinux：$SELinux&quot;
    echo &quot;语言&#x2F;编码：$default_LANG&quot;
    echo &quot; 当前时间：$(date +&#39;%F %T&#39;)&quot;
    echo &quot; 最后启动：$LastReboot&quot;
    echo &quot; 运行时间：$uptime&quot;
    # report information
    report_DateTime&#x3D;$(date +&quot;%F %T&quot;)  #日期
    report_Hostname&#x3D;&quot;$Hostname&quot;       #主机名
    report_OSRelease&#x3D;&quot;$Release&quot;       #发行版本
    report_Kernel&#x3D;&quot;$Kernel&quot;           #内核
    report_Language&#x3D;&quot;$default_LANG&quot;   #语言&#x2F;编码
    report_LastReboot&#x3D;&quot;$LastReboot&quot;   #最近启动时间
    report_Uptime&#x3D;&quot;$uptime&quot;           #运行时间（天）
    report_Selinux&#x3D;&quot;$SELinux&quot;
    export LANG&#x3D;&quot;$default_LANG&quot;
    echo &quot;&quot;
&#125;

function getServiceStatus()&#123;
    echo &quot;&quot;
    echo &quot;############################ Check Service Status ############################&quot;
    if [[ $OS_Version &gt; 7 ]];then
        conf&#x3D;$(systemctl list-unit-files --type&#x3D;service --state&#x3D;enabled --no-pager | grep &quot;enabled&quot;)
        process&#x3D;$(systemctl list-units --type&#x3D;service --state&#x3D;running --no-pager | grep &quot;.service&quot;)
        # report information
        report_SelfInitiatedService&#x3D;&quot;$(echo &quot;$conf&quot; | wc -l)&quot;       #自启动服务数量
        report_RuningService&#x3D;&quot;$(echo &quot;$process&quot; | wc -l)&quot;           #运行中服务数量
    else
        conf&#x3D;$(&#x2F;sbin&#x2F;chkconfig | grep -E &quot;:on|:启用&quot;)
        process&#x3D;$(&#x2F;sbin&#x2F;service --status-all 2&gt;&#x2F;dev&#x2F;null | grep -E &quot;is running|正在运行&quot;)
        # report information
        report_SelfInitiatedService&#x3D;&quot;$(echo &quot;$conf&quot; | wc -l)&quot;       #自启动服务数量
        report_RuningService&#x3D;&quot;$(echo &quot;$process&quot; | wc -l)&quot;           #运行中服务数量
    fi
    echo &quot;Service Configure&quot;
    echo &quot;--------------------------------&quot;
    echo &quot;$conf&quot; | column -t
    echo &quot;&quot;
    echo &quot;The Running Services&quot;
    echo &quot;--------------------------------&quot;
    echo &quot;$process&quot;
&#125;

function getAutoStartStatus()&#123;
    echo &quot;&quot;
    echo &quot;############################ Check Self-starting Services ##########################&quot;
    conf&#x3D;$(grep -v &quot;^#&quot; &#x2F;etc&#x2F;rc.d&#x2F;rc.local| sed &#39;&#x2F;^$&#x2F;d&#39;)
    echo &quot;$conf&quot;
    # report information
    report_SelfInitiatedProgram&#x3D;&quot;$(echo $conf | wc -l)&quot;    #自启动程序数量
&#125;


function getLoginStatus()&#123;
    echo &quot;&quot;
    echo &quot;############################ Check Login In ############################&quot;
    last | head
&#125;

function getNetworkStatus()&#123;
    echo &quot;&quot;
    echo &quot;############################ Check Network ############################&quot;
    if [[ $OS_Version &lt; 7 ]];then
        &#x2F;sbin&#x2F;ifconfig -a | grep -v packets | grep -v collisions | grep -v inet6
    else
        #ip address
        for i in $(ip link | grep BROADCAST | awk -F: &#39;&#123;print $2&#125;&#39;);do ip add show $i | grep -E &quot;BROADCAST|global&quot;| awk &#39;&#123;print $2&#125;&#39; | tr &#39;\n&#39; &#39; &#39; ;echo &quot;&quot; ;done
    fi
    GATEWAY&#x3D;$(ip route | grep default | awk &#39;&#123;print $3&#125;&#39;)
    DNS&#x3D;$(grep nameserver &#x2F;etc&#x2F;resolv.conf| grep -v &quot;#&quot; | awk &#39;&#123;print $2&#125;&#39; | tr &#39;\n&#39; &#39;,&#39; | sed &#39;s&#x2F;,$&#x2F;&#x2F;&#39;)
    echo &quot;&quot;
    echo &quot;Gateway: $GATEWAY &quot;
    echo &quot; DNS: $DNS&quot;
    # report information
    IP&#x3D;$(ip -f inet addr | grep -v 127.0.0.1 |  grep inet | awk &#39;&#123;print $NF,$2&#125;&#39; | tr &#39;\n&#39; &#39;,&#39; | sed &#39;s&#x2F;,$&#x2F;&#x2F;&#39;)
    MAC&#x3D;$(ip link | grep -v &quot;LOOPBACK\|loopback&quot; | awk &#39;&#123;print $2&#125;&#39; | sed &#39;N;s&#x2F;\n&#x2F;&#x2F;&#39; | tr &#39;\n&#39; &#39;,&#39; | sed &#39;s&#x2F;,$&#x2F;&#x2F;&#39;)
    report_IP&#x3D;&quot;$IP&quot;            #IP地址
    report_MAC&#x3D;$MAC            #MAC地址
    report_Gateway&#x3D;&quot;$GATEWAY&quot;  #默认网关
    report_DNS&#x3D;&quot;$DNS&quot;          #DNS
&#125;


function getListenStatus()&#123;
    echo &quot;&quot;
    echo &quot;############################ Check Connect Status ############################&quot;
#    TCPListen&#x3D;$(ss -ntul | column -t)
    TCPListen&#x3D;$(netstat -ntulp | column -t)
    AllConnect&#x3D;$(ss -an | awk &#39;NR&gt;1 &#123;++s[$1]&#125; END &#123;for(k in s) print k,s[k]&#125;&#39; | column -t)
    echo &quot;$TCPListen&quot;
    echo &quot;$AllConnect&quot;
    # report information
    report_Listen&#x3D;&quot;$(echo &quot;$TCPListen&quot;| sed &#39;1d&#39; | awk &#39;&#x2F;tcp&#x2F; &#123;print $5&#125;&#39; | awk -F: &#39;&#123;print $NF&#125;&#39; | sort | uniq | wc -l)&quot;
&#125;

function getCronStatus()&#123;
    echo &quot;&quot;
    echo &quot;############################ Check Crontab ########################&quot;
    Crontab&#x3D;0
    for shell in $(grep -v &quot;&#x2F;sbin&#x2F;nologin&quot; &#x2F;etc&#x2F;shells);do
        for user in $(grep &quot;$shell&quot; &#x2F;etc&#x2F;passwd | awk -F: &#39;&#123;print $1&#125;&#39;);do
            crontab -l -u $user &gt;&#x2F;dev&#x2F;null 2&gt;&amp;1
            status&#x3D;$?
            if [ $status -eq 0 ];then
                echo &quot;$user&quot;
                echo &quot;-------------&quot;
                crontab -l -u $user
                let Crontab&#x3D;Crontab+$(crontab -l -u $user | wc -l)
                echo &quot;&quot;
            fi
        done
    done
    # scheduled task
    find &#x2F;etc&#x2F;cron* -type f | xargs -i ls -l &#123;&#125; | column  -t
    let Crontab&#x3D;Crontab+$(find &#x2F;etc&#x2F;cron* -type f | wc -l)
    # report information
    report_Crontab&#x3D;&quot;$Crontab&quot;    #计划任务数
&#125;

function getHowLongAgo()&#123;
    # 计算一个时间戳离现在有多久了
    datetime&#x3D;&quot;$*&quot;
    [ -z &quot;$datetime&quot; ] &amp;&amp; echo &quot;错误的参数：getHowLongAgo() $*&quot;
    Timestamp&#x3D;$(date +%s -d &quot;$datetime&quot;)    #转化为时间戳
    Now_Timestamp&#x3D;$(date +%s)
    Difference_Timestamp&#x3D;$(($Now_Timestamp-$Timestamp))
    days&#x3D;0;hours&#x3D;0;minutes&#x3D;0;
    sec_in_day&#x3D;$((60*60*24));
    sec_in_hour&#x3D;$((60*60));
    sec_in_minute&#x3D;60
    while (( $(($Difference_Timestamp-$sec_in_day)) &gt; 1 ))
    do
        let Difference_Timestamp&#x3D;Difference_Timestamp-sec_in_day
        let days++
    done
    while (( $(($Difference_Timestamp-$sec_in_hour)) &gt; 1 ))
    do
        let Difference_Timestamp&#x3D;Difference_Timestamp-sec_in_hour
        let hours++
    done
    echo &quot;$days 天 $hours 小时前&quot;
&#125;


function getUserLastLogin()&#123;
    # 获取用户最近一次登录的时间，含年份
    # 很遗憾last命令不支持显示年份，只有&quot;last -t YYYYMMDDHHMMSS&quot;表示某个时间之间的登录，我
    # 们只能用最笨的方法了，对比今天之前和今年元旦之前（或者去年之前和前年之前……）某个用户
    # 登录次数，如果登录统计次数有变化，则说明最近一次登录是今年。
    username&#x3D;$1
    : $&#123;username:&#x3D;&quot;&#96;whoami&#96;&quot;&#125;
    thisYear&#x3D;$(date +%Y)
    oldesYear&#x3D;$(last | tail -n1 | awk &#39;&#123;print $NF&#125;&#39;)
    while(( $thisYear &gt;&#x3D; $oldesYear));do
        loginBeforeToday&#x3D;$(last $username | grep $username | wc -l)
        loginBeforeNewYearsDayOfThisYear&#x3D;$(last $username -t $thisYear&quot;0101000000&quot; | grep $username | wc -l)
        if [ $loginBeforeToday -eq 0 ];then
            echo &quot;Never Login&quot;
            break
        elif [ $loginBeforeToday -gt $loginBeforeNewYearsDayOfThisYear ];then
            lastDateTime&#x3D;$(last -i $username | head -n1 | awk &#39;&#123;for(i&#x3D;4;i&lt;(NF-2);i++)printf&quot;%s &quot;,$i&#125;&#39;)&quot; $thisYear&quot; #格式如: Sat Nov 2 20:33 2015
            lastDateTime&#x3D;$(date &quot;+%Y-%m-%d %H:%M:%S&quot; -d &quot;$lastDateTime&quot;)
            echo &quot;$lastDateTime&quot;
            break
        else
            thisYear&#x3D;$((thisYear-1))
        fi
    done
&#125;

function getUserStatus()&#123;
    echo &quot;&quot;
    echo &quot;############################ Check User ############################&quot;
    # &#x2F;etc&#x2F;passwd the last modification time
    pwdfile&#x3D;&quot;$(cat &#x2F;etc&#x2F;passwd)&quot;
    Modify&#x3D;$(stat &#x2F;etc&#x2F;passwd | grep Modify | tr &#39;.&#39; &#39; &#39; | awk &#39;&#123;print $2,$3&#125;&#39;)
    echo &quot;&#x2F;etc&#x2F;passwd The last modification time：$Modify ($(getHowLongAgo $Modify))&quot;
    echo &quot;&quot;
    echo &quot;A privileged user&quot;
    echo &quot;-----------------&quot;
    RootUser&#x3D;&quot;&quot;
    for user in $(echo &quot;$pwdfile&quot; | awk -F: &#39;&#123;print $1&#125;&#39;);do
        if [ $(id -u $user) -eq 0 ];then
            echo &quot;$user&quot;
            RootUser&#x3D;&quot;$RootUser,$user&quot;
        fi
    done
    echo &quot;&quot;
    echo &quot;User List&quot;
    echo &quot;--------&quot;
    USERs&#x3D;0
    echo &quot;$(
    echo &quot;UserName UID GID HOME SHELL LasttimeLogin&quot;
    for shell in $(grep -v &quot;&#x2F;sbin&#x2F;nologin&quot; &#x2F;etc&#x2F;shells);do
        for username in $(grep &quot;$shell&quot; &#x2F;etc&#x2F;passwd| awk -F: &#39;&#123;print $1&#125;&#39;);do
            userLastLogin&#x3D;&quot;$(getUserLastLogin $username)&quot;
            echo &quot;$pwdfile&quot; | grep -w &quot;$username&quot; |grep -w &quot;$shell&quot;| awk -F: -v lastlogin&#x3D;&quot;$(echo &quot;$userLastLogin&quot; | tr &#39; &#39; &#39;_&#39;)&quot; &#39;&#123;print $1,$3,$4,$6,$7,lastlogin&#125;&#39;
        done
        let USERs&#x3D;USERs+$(echo &quot;$pwdfile&quot; | grep &quot;$shell&quot;| wc -l)
    done
    )&quot; | column -t
    echo &quot;&quot;
    echo &quot;Null Password User&quot;
    echo &quot;------------------&quot;
    USEREmptyPassword&#x3D;&quot;&quot;
    for shell in $(grep -v &quot;&#x2F;sbin&#x2F;nologin&quot; &#x2F;etc&#x2F;shells);do
            for user in $(echo &quot;$pwdfile&quot; | grep &quot;$shell&quot; | cut -d: -f1);do
            r&#x3D;$(awk -F: &#39;$2&#x3D;&#x3D;&quot;!!&quot;&#123;print $1&#125;&#39; &#x2F;etc&#x2F;shadow | grep -w $user)
            if [ ! -z $r ];then
                echo $r
                USEREmptyPassword&#x3D;&quot;$USEREmptyPassword,&quot;$r
            fi
        done    
    done
    echo &quot;&quot;
    echo &quot;The Same UID User&quot;
    echo &quot;----------------&quot;
    USERTheSameUID&#x3D;&quot;&quot;
    UIDs&#x3D;$(cut -d: -f3 &#x2F;etc&#x2F;passwd | sort | uniq -c | awk &#39;$1&gt;1&#123;print $2&#125;&#39;)
    for uid in $UIDs;do
        echo -n &quot;$uid&quot;;
        USERTheSameUID&#x3D;&quot;$uid&quot;
        r&#x3D;$(awk -F: &#39;ORS&#x3D;&quot;&quot;;$3&#x3D;&#x3D;&#39;&quot;$uid&quot;&#39;&#123;print &quot;:&quot;,$1&#125;&#39; &#x2F;etc&#x2F;passwd)
        echo &quot;$r&quot;
        echo &quot;&quot;
        USERTheSameUID&#x3D;&quot;$USERTheSameUID $r,&quot;
    done
    # report information
    report_USERs&#x3D;&quot;$USERs&quot;    #用户
    report_USEREmptyPassword&#x3D;$(echo $USEREmptyPassword | sed &#39;s&#x2F;^,&#x2F;&#x2F;&#39;) 
    report_USERTheSameUID&#x3D;$(echo $USERTheSameUID | sed &#39;s&#x2F;,$&#x2F;&#x2F;&#39;) 
    report_RootUser&#x3D;$(echo $RootUser | sed &#39;s&#x2F;^,&#x2F;&#x2F;&#39;)    #特权用户
&#125;


function getPasswordStatus &#123;
    echo &quot;&quot;
    echo &quot;############################ Check Password Status ############################&quot;
    pwdfile&#x3D;&quot;$(cat &#x2F;etc&#x2F;passwd)&quot;
    echo &quot;&quot;
    echo &quot;Password Expiration Check&quot;
    echo &quot;-------------------------&quot;
    result&#x3D;&quot;&quot;
    for shell in $(grep -v &quot;&#x2F;sbin&#x2F;nologin&quot; &#x2F;etc&#x2F;shells);do
        for user in $(echo &quot;$pwdfile&quot; | grep &quot;$shell&quot; | cut -d: -f1);do
            get_expiry_date&#x3D;$(&#x2F;usr&#x2F;bin&#x2F;chage -l $user | grep &#39;Password expires&#39; | cut -d: -f2)
            if [[ $get_expiry_date &#x3D; &#39; never&#39; || $get_expiry_date &#x3D; &#39;never&#39; ]];then
                printf &quot;%-15s never expiration\n&quot; $user
                result&#x3D;&quot;$result,$user:never&quot;
            else
                password_expiry_date&#x3D;$(date -d &quot;$get_expiry_date&quot; &quot;+%s&quot;)
                current_date&#x3D;$(date &quot;+%s&quot;)
                diff&#x3D;$(($password_expiry_date-$current_date))
                let DAYS&#x3D;$(($diff&#x2F;(60*60*24)))
                printf &quot;%-15s %s expiration after days\n&quot; $user $DAYS
                result&#x3D;&quot;$result,$user:$DAYS days&quot;
            fi
        done
    done
    report_PasswordExpiry&#x3D;$(echo $result | sed &#39;s&#x2F;^,&#x2F;&#x2F;&#39;)
    echo &quot;&quot;
    echo &quot;Check The Password Policy&quot;
    echo &quot;------------&quot;
    grep -v &quot;#&quot; &#x2F;etc&#x2F;login.defs | grep -E &quot;PASS_MAX_DAYS|PASS_MIN_DAYS|PASS_MIN_LEN|PASS_WARN_AGE&quot;
    echo &quot;&quot;
&#125;

function getSudoersStatus()&#123;
    echo &quot;&quot;
    echo &quot;############################ Sudoers Check #########################&quot;
    conf&#x3D;$(grep -v &quot;^#&quot; &#x2F;etc&#x2F;sudoers| grep -v &quot;^Defaults&quot; | sed &#39;&#x2F;^$&#x2F;d&#39;)
    echo &quot;$conf&quot;
    echo &quot;&quot;
    # report information
    report_Sudoers&#x3D;&quot;$(echo $conf | wc -l)&quot;
&#125;


function getInstalledStatus()&#123;
    echo &quot;&quot;
    echo &quot;############################ Software Check ############################&quot;
    rpm -qa --last | head | column -t 
&#125;

function getProcessStatus()&#123;
    echo &quot;&quot;
    echo &quot;############################ Process Check ############################&quot;
    if [ $(ps -ef | grep defunct | grep -v grep | wc -l) -ge 1 ];then
        echo &quot;&quot;
        echo &quot;zombie process&quot;;
        echo &quot;--------&quot;
        ps -ef | head -n1
        ps -ef | grep defunct | grep -v grep
    fi
    echo &quot;&quot;
    echo &quot;Merory Usage TOP10&quot;
    echo &quot;-------------&quot;
    echo -e &quot;PID %MEM RSS COMMAND
    $(ps aux | awk &#39;&#123;print $2, $4, $6, $11&#125;&#39; | sort -k3rn | head -n 10 )&quot;| column -t 
    echo &quot;&quot;
    echo &quot;CPU Usage TOP10&quot;
    echo &quot;------------&quot;
    top b -n1 | head -17 | tail -11
    # report information
    report_DefunctProsess&#x3D;&quot;$(ps -ef | grep defunct | grep -v grep|wc -l)&quot;
&#125;


function getJDKStatus()&#123;
    echo &quot;&quot;
    echo &quot;############################ JDK Check #############################&quot;
    java -version 2&gt;&#x2F;dev&#x2F;null
    if [ $? -eq 0 ];then
        java -version 2&gt;&amp;1
    fi
    echo &quot;JAVA_HOME&#x3D;\&quot;$JAVA_HOME\&quot;&quot;
    # report information
    report_JDK&#x3D;&quot;$(java -version 2&gt;&amp;1 | grep version | awk &#39;&#123;print $1,$3&#125;&#39; | tr -d &#39;&quot;&#39;)&quot;
&#125;

function getSyslogStatus()&#123;
    echo &quot;&quot;
    echo &quot;############################ Syslog Check ##########################&quot;
    echo &quot;Service Status：$(getState rsyslog)&quot;
    echo &quot;&quot;
    echo &quot;&#x2F;etc&#x2F;rsyslog.conf&quot;
    echo &quot;-----------------&quot;
    cat &#x2F;etc&#x2F;rsyslog.conf 2&gt;&#x2F;dev&#x2F;null | grep -v &quot;^#&quot; | grep -v &quot;^\\$&quot; | sed &#39;&#x2F;^$&#x2F;d&#39;  | column -t
    #report information
    report_Syslog&#x3D;&quot;$(getState rsyslog)&quot;
&#125;


function getFirewallStatus()&#123;
    echo &quot;&quot;
    echo &quot;############################ Firewall Check ##########################&quot;
    # Firewall Status&#x2F;Poilcy
    if [[ $OS_Version &lt; 7 ]];then
        &#x2F;etc&#x2F;init.d&#x2F;iptables status &gt;&#x2F;dev&#x2F;null  2&gt;&amp;1
        status&#x3D;$?
        if [ $status -eq 0 ];then
                s&#x3D;&quot;active&quot;
        elif [ $status -eq 3 ];then
                s&#x3D;&quot;inactive&quot;
        elif [ $status -eq 4 ];then
                s&#x3D;&quot;permission denied&quot;
        else
                s&#x3D;&quot;unknown&quot;
        fi
    else
        s&#x3D;&quot;$(getState iptables)&quot;
    fi
    echo &quot;iptables: $s&quot;
    echo &quot;&quot;
    echo &quot;&#x2F;etc&#x2F;sysconfig&#x2F;iptables&quot;
    echo &quot;-----------------------&quot;
    cat &#x2F;etc&#x2F;sysconfig&#x2F;iptables 2&gt;&#x2F;dev&#x2F;null
    # report information
    report_Firewall&#x3D;&quot;$s&quot;
&#125;


function getSNMPStatus()&#123;
    #SNMP Service Status,Configure
    echo &quot;&quot;
    echo &quot;############################ SNMP Check ############################&quot;
    status&#x3D;&quot;$(getState snmpd)&quot;
    echo &quot;Service Status：$status&quot;
    echo &quot;&quot;
    if [ -e &#x2F;etc&#x2F;snmp&#x2F;snmpd.conf ];then
        echo &quot;&#x2F;etc&#x2F;snmp&#x2F;snmpd.conf&quot;
        echo &quot;--------------------&quot;
        cat &#x2F;etc&#x2F;snmp&#x2F;snmpd.conf 2&gt;&#x2F;dev&#x2F;null | grep -v &quot;^#&quot; | sed &#39;&#x2F;^$&#x2F;d&#39;
    fi
    # report information
    report_SNMP&#x3D;&quot;$(getState snmpd)&quot;
&#125;

function getState()&#123;
    if [[ $OS_Version &lt; 7 ]];then
        if [ -e &quot;&#x2F;etc&#x2F;init.d&#x2F;$1&quot; ];then
            if [ &#96;&#x2F;etc&#x2F;init.d&#x2F;$1 status 2&gt;&#x2F;dev&#x2F;null | grep -E &quot;is running|正在运行&quot; | wc -l&#96; -ge 1 ];then
                r&#x3D;&quot;active&quot;
            else
                r&#x3D;&quot;inactive&quot;
            fi
        else
            r&#x3D;&quot;unknown&quot;
        fi
    else
        #CentOS 7+
        r&#x3D;&quot;$(systemctl is-active $1 2&gt;&amp;1)&quot;
    fi
    echo &quot;$r&quot;
&#125;

function getSSHStatus()&#123;
    #SSHD Service Status,Configure
    echo &quot;&quot;
    echo &quot;############################ SSH Check #############################&quot;
    # Check the trusted host
    pwdfile&#x3D;&quot;$(cat &#x2F;etc&#x2F;passwd)&quot;
    echo &quot;Service Status：$(getState sshd)&quot;
    Protocol_Version&#x3D;$(cat &#x2F;etc&#x2F;ssh&#x2F;sshd_config | grep Protocol | awk &#39;&#123;print $2&#125;&#39;)
    echo &quot;SSH Protocol Version：$Protocol_Version&quot;
    echo &quot;&quot;
    echo &quot;Trusted Host&quot;
    echo &quot;------------&quot;
    authorized&#x3D;0
    for user in $(echo &quot;$pwdfile&quot; | grep &#x2F;bin&#x2F;bash | awk -F: &#39;&#123;print $1&#125;&#39;);do
        authorize_file&#x3D;$(echo &quot;$pwdfile&quot; | grep -w $user | awk -F: &#39;&#123;printf $6&quot;&#x2F;.ssh&#x2F;authorized_keys&quot;&#125;&#39;)
        authorized_host&#x3D;$(cat $authorize_file 2&gt;&#x2F;dev&#x2F;null | awk &#39;&#123;print $3&#125;&#39; | tr &#39;\n&#39; &#39;,&#39; | sed &#39;s&#x2F;,$&#x2F;&#x2F;&#39;)
        if [ ! -z $authorized_host ];then
            echo &quot;$user authorization \&quot;$authorized_host\&quot; Password-less access&quot;
        fi
        let authorized&#x3D;authorized+$(cat $authorize_file 2&gt;&#x2F;dev&#x2F;null | awk &#39;&#123;print $3&#125;&#39;|wc -l)
    done


    echo &quot;&quot;
    echo &quot;Whether to allow ROOT remote login&quot;
    echo &quot;----------------------------------&quot;
    config&#x3D;$(cat &#x2F;etc&#x2F;ssh&#x2F;sshd_config | grep PermitRootLogin)
    firstChar&#x3D;$&#123;config:0:1&#125;
    if [ $firstChar &#x3D;&#x3D; &quot;#&quot; ];then
        PermitRootLogin&#x3D;&quot;yes&quot;  #The default is to allow ROOT remote login
    else
        PermitRootLogin&#x3D;$(echo $config | awk &#39;&#123;print $2&#125;&#39;)
    fi
    echo &quot;PermitRootLogin $PermitRootLogin&quot;


    echo &quot;&quot;
    echo &quot;&#x2F;etc&#x2F;ssh&#x2F;sshd_config&quot;
    echo &quot;--------------------&quot;
    cat &#x2F;etc&#x2F;ssh&#x2F;sshd_config | grep -v &quot;^#&quot; | sed &#39;&#x2F;^$&#x2F;d&#39;
    # report information
    report_SSHAuthorized&#x3D;&quot;$authorized&quot;    #SSH信任主机
    report_SSHDProtocolVersion&#x3D;&quot;$Protocol_Version&quot;    #SSH协议版本
    report_SSHDPermitRootLogin&#x3D;&quot;$PermitRootLogin&quot;    #允许root远程登录
&#125;

function getNTPStatus()&#123;
    # The NTP service status, the current time, configuration, etc
    echo &quot;&quot;
    echo &quot;############################ NTP Check #############################&quot;
    if [ -e &#x2F;etc&#x2F;ntp.conf ];then
        echo &quot;Service Status：$(getState ntpd)&quot;
        echo &quot;&quot;
        echo &quot;&#x2F;etc&#x2F;ntp.conf&quot;
        echo &quot;-------------&quot;
        cat &#x2F;etc&#x2F;ntp.conf 2&gt;&#x2F;dev&#x2F;null | grep -v &quot;^#&quot; | sed &#39;&#x2F;^$&#x2F;d&#39;
    fi
    # report information
    report_NTP&#x3D;&quot;$(getState ntpd)&quot;
&#125;



function getZabbixStatus()&#123;
    # Check Zabbix Serivce Status
    echo &quot;&quot;
    echo &quot;######################### Zabbix Check ##############################&quot;
    netstat -nltp | grep -v grep | grep zabbix &gt; &#x2F;dev&#x2F;null 2&gt;&amp;1
    if [ $? -eq 0 ];then
       echo &quot;Service Status&quot;: Zabbix is running!
    else
       echo &quot;Service Status&quot;: Zabbix not running!
    fi
    # report information
&#125;

function uploadHostDailyCheckReport()&#123;
    json&#x3D;&quot;&#123;
        \&quot;DateTime\&quot;:\&quot;$report_DateTime\&quot;,
        \&quot;Hostname\&quot;:\&quot;$report_Hostname\&quot;,
        \&quot;OSRelease\&quot;:\&quot;$report_OSRelease\&quot;,
        \&quot;Kernel\&quot;:\&quot;$report_Kernel\&quot;,
        \&quot;Language\&quot;:\&quot;$report_Language\&quot;,
        \&quot;LastReboot\&quot;:\&quot;$report_LastReboot\&quot;,
        \&quot;Uptime\&quot;:\&quot;$report_Uptime\&quot;,
        \&quot;CPUs\&quot;:\&quot;$report_CPUs\&quot;,
        \&quot;CPUType\&quot;:\&quot;$report_CPUType\&quot;,
        \&quot;Arch\&quot;:\&quot;$report_Arch\&quot;,
        \&quot;MemTotal\&quot;:\&quot;$report_MemTotal\&quot;,
        \&quot;MemFree\&quot;:\&quot;$report_MemFree\&quot;,
        \&quot;MemUsedPercent\&quot;:\&quot;$report_MemUsedPercent\&quot;,
        \&quot;DiskTotal\&quot;:\&quot;$report_DiskTotal\&quot;,
        \&quot;DiskFree\&quot;:\&quot;$report_DiskFree\&quot;,
        \&quot;DiskUsedPercent\&quot;:\&quot;$report_DiskUsedPercent\&quot;,
        \&quot;InodeTotal\&quot;:\&quot;$report_InodeTotal\&quot;,
        \&quot;InodeFree\&quot;:\&quot;$report_InodeFree\&quot;,
        \&quot;InodeUsedPercent\&quot;:\&quot;$report_InodeUsedPercent\&quot;,
        \&quot;IP\&quot;:\&quot;$report_IP\&quot;,
        \&quot;MAC\&quot;:\&quot;$report_MAC\&quot;,
        \&quot;Gateway\&quot;:\&quot;$report_Gateway\&quot;,
        \&quot;DNS\&quot;:\&quot;$report_DNS\&quot;,
        \&quot;Listen\&quot;:\&quot;$report_Listen\&quot;,
        \&quot;Selinux\&quot;:\&quot;$report_Selinux\&quot;,
        \&quot;Firewall\&quot;:\&quot;$report_Firewall\&quot;,
        \&quot;USERs\&quot;:\&quot;$report_USERs\&quot;,
        \&quot;USEREmptyPassword\&quot;:\&quot;$report_USEREmptyPassword\&quot;,
        \&quot;USERTheSameUID\&quot;:\&quot;$report_USERTheSameUID\&quot;,
        \&quot;PasswordExpiry\&quot;:\&quot;$report_PasswordExpiry\&quot;,
        \&quot;RootUser\&quot;:\&quot;$report_RootUser\&quot;,
        \&quot;Sudoers\&quot;:\&quot;$report_Sudoers\&quot;,
        \&quot;SSHAuthorized\&quot;:\&quot;$report_SSHAuthorized\&quot;,
        \&quot;SSHDProtocolVersion\&quot;:\&quot;$report_SSHDProtocolVersion\&quot;,
        \&quot;SSHDPermitRootLogin\&quot;:\&quot;$report_SSHDPermitRootLogin\&quot;,
        \&quot;DefunctProsess\&quot;:\&quot;$report_DefunctProsess\&quot;,
        \&quot;SelfInitiatedService\&quot;:\&quot;$report_SelfInitiatedService\&quot;,
        \&quot;SelfInitiatedProgram\&quot;:\&quot;$report_SelfInitiatedProgram\&quot;,
        \&quot;RuningService\&quot;:\&quot;$report_RuningService\&quot;,
        \&quot;Crontab\&quot;:\&quot;$report_Crontab\&quot;,
        \&quot;Syslog\&quot;:\&quot;$report_Syslog\&quot;,
        \&quot;SNMP\&quot;:\&quot;$report_SNMP\&quot;,
        \&quot;NTP\&quot;:\&quot;$report_NTP\&quot;,
        \&quot;JDK\&quot;:\&quot;$report_JDK\&quot;
    &#125;&quot;
    #echo &quot;$json&quot; 
    curl -l -H &quot;Content-type: application&#x2F;json&quot; -X POST -d &quot;$json&quot; &quot;$uploadHostDailyCheckReportApi&quot; 2&gt;&#x2F;dev&#x2F;null
&#125;

function check()&#123;
    version
    getSystemStatus
    getCpuStatus
    getMemStatus
    getDiskStatus
    getNetworkStatus
    getListenStatus
    getProcessStatus
    getServiceStatus
    getAutoStartStatus
    getLoginStatus
    getCronStatus
    getUserStatus
    getPasswordStatus
    getSudoersStatus
    getJDKStatus
    getFirewallStatus
    getSSHStatus
    getSyslogStatus
    getSNMPStatus
    getNTPStatus
    getZabbixStatus
    getInstalledStatus
&#125;

# Perform inspections and save the inspection results  #执行检查并保存检查结果
check &gt; $RESULTFILE
echo &quot;Check the result：$RESULTFILE&quot;

# Upload the result file  #上传检查结果的文件
#curl -F &quot;filename&#x3D;@$RESULTFILE&quot; &quot;$uploadHostDailyCheckApi&quot; 2&gt;&#x2F;dev&#x2F;null

#Upload inspection result report  #上传检查结果的报表
#uploadHostDailyCheckReport 1&gt;&#x2F;dev&#x2F;null<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
]]></content>
      <categories>
        <category>shell</category>
      </categories>
      <tags>
        <tag>shell, 巡检</tag>
      </tags>
  </entry>
  <entry>
    <title>docker命令使用</title>
    <url>/2019/09/19/docker%E5%91%BD%E4%BB%A4%E4%BD%BF%E7%94%A8/</url>
    <content><![CDATA[<p>docker01</p>
<h2 id="List-Docker-CLI-commands"><a href="#List-Docker-CLI-commands" class="headerlink" title="List Docker CLI commands"></a>List Docker CLI commands</h2><pre class="line-numbers language-none"><code class="language-none">docker container --help<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<h2 id="Display-Docker-version-and-info"><a href="#Display-Docker-version-and-info" class="headerlink" title="Display Docker version and info"></a>Display Docker version and info</h2><pre class="line-numbers language-none"><code class="language-none">docker --version
docker version
docker info<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>

<h2 id="Execute-Docker-image"><a href="#Execute-Docker-image" class="headerlink" title="Execute Docker image"></a>Execute Docker image</h2><pre class="line-numbers language-none"><code class="language-none">docker run hello-world<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<h2 id="List-Docker-images"><a href="#List-Docker-images" class="headerlink" title="List Docker images"></a>List Docker images</h2><pre class="line-numbers language-none"><code class="language-none">docker image ls<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<h2 id="List-Docker-containers-running-all-all-in-quiet-mode"><a href="#List-Docker-containers-running-all-all-in-quiet-mode" class="headerlink" title="List Docker containers (running, all, all in quiet mode)"></a>List Docker containers (running, all, all in quiet mode)</h2><pre class="line-numbers language-none"><code class="language-none">docker container ls
docker container ls --all
docker container ls -aq<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>

<p>docker02</p>
<h2 id="Create-image-using-this-directory’s-Dockerfile"><a href="#Create-image-using-this-directory’s-Dockerfile" class="headerlink" title="Create image using this directory’s Dockerfile"></a>Create image using this directory’s Dockerfile</h2><pre class="line-numbers language-none"><code class="language-none">docker build -t friendlyhello .  <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h2 id="Run-“friendlyhello”-mapping-port-4000-to-80"><a href="#Run-“friendlyhello”-mapping-port-4000-to-80" class="headerlink" title="Run “friendlyhello” mapping port 4000 to 80"></a>Run “friendlyhello” mapping port 4000 to 80</h2><pre class="line-numbers language-none"><code class="language-none">docker run -p 4000:80 friendlyhello  <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h2 id="Same-thing-but-in-detached-mode"><a href="#Same-thing-but-in-detached-mode" class="headerlink" title="Same thing, but in detached mode"></a>Same thing, but in detached mode</h2><pre class="line-numbers language-none"><code class="language-none">docker run -d -p 4000:80 friendlyhello <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h2 id="List-all-running-containers"><a href="#List-all-running-containers" class="headerlink" title="List all running containers"></a>List all running containers</h2><pre class="line-numbers language-none"><code class="language-none">docker container ls     <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h2 id="List-all-containers-even-those-not-running"><a href="#List-all-containers-even-those-not-running" class="headerlink" title="List all containers, even those not running"></a>List all containers, even those not running</h2><pre class="line-numbers language-none"><code class="language-none">docker container ls -a     <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h2 id="Gracefully-stop-the-specified-container"><a href="#Gracefully-stop-the-specified-container" class="headerlink" title="Gracefully stop the specified container"></a>Gracefully stop the specified container</h2><pre class="line-numbers language-none"><code class="language-none">docker container stop &lt;hash&gt; <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h2 id="Force-shutdown-of-the-specified-container"><a href="#Force-shutdown-of-the-specified-container" class="headerlink" title="Force shutdown of the specified container"></a>Force shutdown of the specified container</h2><pre class="line-numbers language-none"><code class="language-none">docker container kill &lt;hash&gt; <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h2 id="Remove-specified-container-from-this-machine"><a href="#Remove-specified-container-from-this-machine" class="headerlink" title="Remove specified container from this machine"></a>Remove specified container from this machine</h2><pre class="line-numbers language-none"><code class="language-none">docker container rm &lt;hash&gt;     <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h2 id="Remove-all-containers"><a href="#Remove-all-containers" class="headerlink" title="Remove all containers"></a>Remove all containers</h2><pre class="line-numbers language-none"><code class="language-none">docker container rm $(docker container ls -a -q)   <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h2 id="List-all-images-on-this-machine"><a href="#List-all-images-on-this-machine" class="headerlink" title="List all images on this machine"></a>List all images on this machine</h2><pre class="line-numbers language-none"><code class="language-none">docker image ls -a  
&#96;&#96;&#96;                     
## Remove specified image from this machine      <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<p>docker image rm <image id> </p>
<pre class="line-numbers language-none"><code class="language-none">## Remove all images from this machine   <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>docker image rm $(docker image ls -a -q)  </p>
<pre class="line-numbers language-none"><code class="language-none">## Log in this CLI session using your Docker credentials <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>docker login   </p>
<pre class="line-numbers language-none"><code class="language-none">## Tag &lt;image&gt; for upload to registry<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>docker tag <image> username&#x2F;repository:tag  </p>
<pre class="line-numbers language-none"><code class="language-none">## Upload tagged image to registry<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>docker push username&#x2F;repository:tag</p>
<pre class="line-numbers language-none"><code class="language-none">## Run image from a registry <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>docker run username&#x2F;repository:tag<br>&#96;&#96;&#96;  </p>
]]></content>
      <categories>
        <category>docker</category>
      </categories>
      <tags>
        <tag>docker</tag>
      </tags>
  </entry>
  <entry>
    <title>CentOS7的启动过程</title>
    <url>/2020/11/01/centos7%E7%9A%84%E5%90%AF%E5%8A%A8%E8%BF%87%E7%A8%8B/</url>
    <content><![CDATA[<p>centos7的启动过程</p>
<p>一、终端态启动顺序：</p>
<p>开机启过程<br>POST–&gt;BOOT<br>SEQUENCE–&gt;BOOTLOADER–&gt;KERNEL+INITRAMFS(INITRD)–&gt;ROOTFS–&gt;&#x2F;sbin&#x2F;init</p>
<p>POST:加电自检</p>
<p>检查内存，CPU等</p>
<p>Boot sequence：选择引导顺序</p>
<p>光盘启动，硬盘启动，网络启动，还是U盘启动(同windows)</p>
<p>Bootloader：引导加载器</p>
<p>MBR引导记录大小为512字节，其中前446个字节就是Bootloader,主要用来引导用户选择要启动的系统或不同的内核版本，把用户选定的内核装载到RAM中的特定空间中，解压，展开，而后把系统控制权移交给内核。</p>
<p>grub2分两部分：<br>1.在MBR引导记录中，大小为446字节，主要功能是引导启动介质的grub主体文件<br>2.partition,&#x2F;boot&#x2F;grub[2],此为grub的主体。</p>
<p>KERNEL+INITRAMFS(INITRD)–&gt;ROOTFS：加载内核</p>
<p>内核初始化，生成一个ramdisk文件，用来模拟系统环境。退出ramdisk,下一步加载到真正的根文件系统。</p>
<p>ramdisk：内存上临时虚拟的系统<br>ramdisk(虚拟磁盘，双缓冲，双缓存）—-&gt; ramfs（虚拟文件系统）<br>centos5:initrd</p>
<p>工具程序：mkinitrd</p>
<p>centos6,7:initramfs</p>
<p>工具程序：dracut,mkinitrd</p>
<p>&#x2F;sbin&#x2F;init：运行用户空间的第一个应用程序</p>
<p>init:</p>
<p>Centos 5: SysV init    配置文件：&#x2F;etc&#x2F;inittab<br>Centos 6: Upstart      配置文件：&#x2F;etc&#x2F;inittab;&#x2F;etc&#x2F;init&#x2F;*.conf(主要）<br>Centos 7: systemd      配置文件：&#x2F;etc&#x2F;systemd&#x2F;system;&#x2F;usr&#x2F;lib&#x2F;systemd&#x2F;system</p>
<p>至此，内核空间就已经启动完毕，内核启动完成接着开始启动用户态启动过程。<br>systemd是个守护进程，pid号为1,<br>后面所有启动的服务或进程都是systemd的子进程及子进程的子进程。</p>
<p>二、用户态的启动顺序</p>
<p>设置默认允许级别—&gt;初始化脚本，<br>完成系统初始化—&gt;关闭及启动对应级别下的服务—–&gt;设置登录终端—–&gt;[启动图形终端]</p>
<p>参考：<a class="link"   href="https://blog.51cto.com/m51cto/1958856" >https://blog.51cto.com/m51cto/1958856<i class="fas fa-external-link-alt"></i></a></p>
]]></content>
      <tags>
        <tag>centos</tag>
      </tags>
  </entry>
  <entry>
    <title>docker安装与简单使用</title>
    <url>/2019/09/19/docker%E5%AE%89%E8%A3%85%E4%B8%8E%E7%AE%80%E5%8D%95%E4%BD%BF%E7%94%A8/</url>
    <content><![CDATA[<h2 id="docker安装与简单使用-来自docker官方"><a href="#docker安装与简单使用-来自docker官方" class="headerlink" title="docker安装与简单使用(来自docker官方)"></a>docker安装与简单使用(来自docker官方)</h2><h4 id="系统要求："><a href="#系统要求：" class="headerlink" title="系统要求："></a>系统要求：</h4><p>Docker CE 支持 64 位版本 CentOS 7，并且要求<strong>内核版本</strong>不低于 3.10,安装最新版CE，推荐使用CentOS 7.6</p>
<h4 id="卸载旧版本："><a href="#卸载旧版本：" class="headerlink" title="卸载旧版本："></a>卸载旧版本：</h4><pre class="line-numbers language-none"><code class="language-none">sudo yum remove docker \
                  docker-client \
                  docker-client-latest \
                  docker-common \
                  docker-latest \
                  docker-latest-logrotate \
                  docker-logrotate \
                  docker-selinux \
                  docker-engine-selinux \
                  docker-engine<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h4 id="使用-yum-安装：依赖"><a href="#使用-yum-安装：依赖" class="headerlink" title="使用 yum 安装：依赖"></a>使用 yum 安装：依赖</h4><pre class="line-numbers language-none"><code class="language-none">sudo yum install -y yum-utils \
       device-mapper-persistent-data \
       lvm2<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<h4 id="设置稳定存储库："><a href="#设置稳定存储库：" class="headerlink" title="设置稳定存储库："></a>设置稳定存储库：</h4><pre class="line-numbers language-none"><code class="language-none">sudo yum-config-manager --add-repo http:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;docker-ce&#x2F;linux&#x2F;centos&#x2F;docker-ce.repo<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<h4 id="新建docker文件夹"><a href="#新建docker文件夹" class="headerlink" title="新建docker文件夹"></a>新建docker文件夹</h4><pre class="line-numbers language-none"><code class="language-none">mkdir  &#x2F;etc&#x2F;docker <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h4 id="修改docker的配置文件daemon-json-这里只添加了加速器（可以显著提升拉取速度）"><a href="#修改docker的配置文件daemon-json-这里只添加了加速器（可以显著提升拉取速度）" class="headerlink" title="修改docker的配置文件daemon.json,这里只添加了加速器（可以显著提升拉取速度）"></a>修改docker的配置文件daemon.json,这里只添加了加速器（可以显著提升拉取速度）</h4><p>vi &#x2F;etc&#x2F;docker&#x2F;daemon.json </p>
<pre class="line-numbers language-none"><code class="language-none">&#123;
&quot;registry-mirrors&quot;: [&quot;https:&#x2F;&#x2F;registry.docker-cn.com&quot;,
&quot;https:&#x2F;&#x2F;9n9n3nrq.mirror.aliyuncs.com&quot;]
&#125;
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<p>以上准备工作做好之后，下面开始步入正题：</p>
<h4 id="安装-Docker-CE"><a href="#安装-Docker-CE" class="headerlink" title="安装 Docker CE"></a>安装 Docker CE</h4><p>更新 yum 软件源缓存，并安装 docker-ce。</p>
<hr>
<h4 id="1-选择自己需要的版本安装"><a href="#1-选择自己需要的版本安装" class="headerlink" title="1.选择自己需要的版本安装"></a>1.选择自己需要的版本安装</h4><pre class="line-numbers language-none"><code class="language-none">列出并对您的仓库中可用的版本进行排序。此示例按版本号对结果进行排序，从最高到最低，并被截断：

yum list docker-ce --showduplicates | sort -r

选择版本号，对应安装

sudo yum install docker-ce-&lt;VERSION_STRING&gt; docker-ce-cli-&lt;VERSION_STRING&gt; containerd.io<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<hr>
<h4 id="2-选择最新版本安装"><a href="#2-选择最新版本安装" class="headerlink" title="2.选择最新版本安装"></a>2.选择最新版本安装</h4><pre class="line-numbers language-none"><code class="language-none">sudo yum makecache fast
sudo yum install docker-ce<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>


<h4 id="以-busybox-为关键词进行搜索："><a href="#以-busybox-为关键词进行搜索：" class="headerlink" title="以 busybox 为关键词进行搜索："></a>以 busybox 为关键词进行搜索：</h4><pre class="line-numbers language-none"><code class="language-none">docker search busybox<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<h4 id="拉镜像："><a href="#拉镜像：" class="headerlink" title="拉镜像："></a>拉镜像：</h4><pre class="line-numbers language-none"><code class="language-none">docker pull busybox
docker pull ubuntu:16.04<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>

<h4 id="运行"><a href="#运行" class="headerlink" title="运行"></a>运行</h4><pre class="line-numbers language-none"><code class="language-none">docker run -it --rm \
    ubuntu:16.04 \
    &#x2F;bin&#x2F;bash<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<h4 id="列出镜像"><a href="#列出镜像" class="headerlink" title="列出镜像"></a>列出镜像</h4><pre class="line-numbers language-none"><code class="language-none">docker image ls<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h4 id="列表包含了-仓库名、标签、镜像-ID、创建时间-以及所占用的空间。"><a href="#列表包含了-仓库名、标签、镜像-ID、创建时间-以及所占用的空间。" class="headerlink" title="列表包含了 仓库名、标签、镜像 ID、创建时间 以及所占用的空间。"></a>列表包含了 仓库名、标签、镜像 ID、创建时间 以及所占用的空间。</h4><h4 id="镜像体积"><a href="#镜像体积" class="headerlink" title="镜像体积"></a>镜像体积</h4><pre class="line-numbers language-none"><code class="language-none">docker system df<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h4 id="虚悬镜像"><a href="#虚悬镜像" class="headerlink" title="虚悬镜像"></a>虚悬镜像</h4><p>上面的镜像列表中，还可以看到一个特殊的镜像，这个镜像既没有仓库名，也没有标签，均为 <code>&lt;none&gt;</code>。</p>
<pre class="line-numbers language-none"><code class="language-none">docker image ls -f dangling&#x3D;true<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<h4 id="删除此镜像"><a href="#删除此镜像" class="headerlink" title="删除此镜像"></a>删除此镜像</h4><pre class="line-numbers language-none"><code class="language-none">docker image prune<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<h4 id="中间层镜像"><a href="#中间层镜像" class="headerlink" title="中间层镜像"></a>中间层镜像</h4><pre><code>为了加速镜像构建、重复利用资源，Docker 会利用 中间层镜像。所以在使用一段时间后，可能会看到一些依赖的中间层镜像。默认的 docker image ls 列表中只会显示顶层镜像，如果希望显示包括中间层镜像在内的所有镜像的话，需要加 -a 参数。
</code></pre>
<pre class="line-numbers language-none"><code class="language-none">docker image ls -a<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<h4 id="列出部分镜像"><a href="#列出部分镜像" class="headerlink" title="列出部分镜像"></a>列出部分镜像</h4><pre class="line-numbers language-none"><code class="language-none">docker image ls ubuntu
docker image ls ubuntu:16.04<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>

<h4 id="以特定格式显示"><a href="#以特定格式显示" class="headerlink" title="以特定格式显示"></a>以特定格式显示</h4><p>默认情况下，docker image ls 会输出一个完整的表格，<br>但是我们并非所有时候都会需要这些内容。</p>
<p>比如，刚才删除虚悬镜像的时候，<br>我们需要利用 docker image ls 把所有的虚悬镜像的 ID 列出来，<br>然后才可以交给 docker image rm 命令作为参数来删除指定的这些镜像，这个时候就用到了 -q 参数。</p>
<pre class="line-numbers language-none"><code class="language-none">docker image ls -q<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>下面的命令会直接列出镜像结果，并且只包含镜像ID和仓库名（标签）：</p>
<pre class="line-numbers language-none"><code class="language-none">docker image ls --format &quot;&#123;&#123;.ID&#125;&#125;: &#123;&#123;.Repository&#125;&#125;&quot;
docker image ls --format &quot;table &#123;&#123;.ID&#125;&#125;\t&#123;&#123;.Repository&#125;&#125;\t&#123;&#123;.Tag&#125;&#125;&quot;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>

<h4 id="删除本地镜像"><a href="#删除本地镜像" class="headerlink" title="删除本地镜像"></a>删除本地镜像</h4><pre class="line-numbers language-none"><code class="language-none">docker image rm<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>我们可以用镜像的完整 ID，也称为 长 ID，来删除镜像。使用脚本的时候可能会用长 ID，但是人工输入就太累了，所以更多的时候是用 短 ID 来删除镜像。docker image ls 默认列出的就已经是短 ID 了，一般取前3个字符以上，只要足够区分于别的镜像就可以了。</p>
<pre class="line-numbers language-none"><code class="language-none">docker image ls<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<pre class="line-numbers language-none"><code class="language-none">docker image rm centos<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<h4 id="使用镜像摘要删除"><a href="#使用镜像摘要删除" class="headerlink" title="使用镜像摘要删除"></a>使用镜像摘要删除</h4><pre class="line-numbers language-none"><code class="language-none">docker image ls --digests
docker image rm node@sha256:b4f0e0bdeb578043c1ea6862f0d40cc4afe32a4a582f3be235a3b164422be228<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>

<p>对于 CentOS&#x2F;RHEL 的用户来说，在没有办法使用 UnionFS 的情况下，一定要配置 direct-lvm 给 devicemapper，无论是为了性能、稳定性还是空间利用率。</p>
<h4 id="参考文献："><a href="#参考文献：" class="headerlink" title="参考文献："></a>参考文献：</h4><ol>
<li><a class="link"   href="https://blog.lab99.org/post/docker-2016-07-14-faq.html" >https://blog.lab99.org/post/docker-2016-07-14-faq.html<i class="fas fa-external-link-alt"></i></a></li>
<li><a class="link"   href="https://docs.docker.com/install/linux/docker-ce/centos/#install-docker-ce-1" >https://docs.docker.com/install/linux/docker-ce/centos/#install-docker-ce-1<i class="fas fa-external-link-alt"></i></a></li>
<li><a class="link"   href="https://blog.csdn.net/kamputer/article/details/79047765" >https://blog.csdn.net/kamputer/article/details/79047765<i class="fas fa-external-link-alt"></i></a></li>
</ol>
]]></content>
      <categories>
        <category>docker</category>
      </categories>
      <tags>
        <tag>docker</tag>
      </tags>
  </entry>
  <entry>
    <title>k3s详细安装+rancher2.7界面展示</title>
    <url>/2023/02/07/k3s/</url>
    <content><![CDATA[<h1 id="k3s详细安装-rancher2-7界面展示"><a href="#k3s详细安装-rancher2-7界面展示" class="headerlink" title="k3s详细安装+rancher2.7界面展示"></a>k3s详细安装+rancher2.7界面展示</h1><h2 id="实验环境"><a href="#实验环境" class="headerlink" title="实验环境"></a>实验环境</h2><p>注：这里是arm版本，使用的M1安装的ubuntu虚拟机，其他版本需要找对应的版本</p>
<h2 id="选择k3s版本并安装"><a href="#选择k3s版本并安装" class="headerlink" title="选择k3s版本并安装"></a>选择k3s版本并安装</h2><p>使用版本号：v1.23.14+k3s1</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 因为使用1.25不支持helm chart</span>
root@hao:~<span class="token comment"># helm install rancher rancher-latest/rancher \</span>
<span class="token operator">></span>   <span class="token parameter variable">--namespace</span> cattle-system <span class="token punctuation">\</span>
<span class="token operator">></span>   <span class="token parameter variable">--set</span> <span class="token assign-left variable">hostname</span><span class="token operator">=</span><span class="token number">172.16</span>.190.100.sslip.io <span class="token punctuation">\</span>
<span class="token operator">></span>   <span class="token parameter variable">--set</span> <span class="token assign-left variable">replicas</span><span class="token operator">=</span><span class="token number">1</span> <span class="token punctuation">\</span>
<span class="token operator">></span>   <span class="token parameter variable">--set</span> <span class="token assign-left variable">bootstrapPassword</span><span class="token operator">=</span>jshebuebyxg45h3
Error: INSTALLATION FAILED: chart requires kubeVersion: <span class="token operator">&lt;</span> <span class="token number">1.25</span>.0-0 <span class="token function">which</span> is incompatible with Kubernetes v1.25.4+k3s1<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>一行命令即可安装，等待大约一分钟左右</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">curl</span> <span class="token parameter variable">-sfL</span> https://get.k3s.io <span class="token operator">|</span> <span class="token assign-left variable">INSTALL_K3S_VERSION</span><span class="token operator">=</span>v1.23.14+k3s1 <span class="token function">sh</span> - <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>出现下边的提示，表示k3s安装已经八九不离十了</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">root@hao:~<span class="token comment"># curl -sfL https://get.k3s.io | INSTALL_K3S_VERSION=v1.23.14+k3s1 sh -</span>
<span class="token punctuation">[</span>INFO<span class="token punctuation">]</span>  Using v1.23.14+k3s1 as release
<span class="token punctuation">[</span>INFO<span class="token punctuation">]</span>  Downloading <span class="token builtin class-name">hash</span> https://github.com/k3s-io/k3s/releases/download/v1.23.14+k3s1/sha256sum-arm64.txt
<span class="token punctuation">[</span>INFO<span class="token punctuation">]</span>  Downloading binary https://github.com/k3s-io/k3s/releases/download/v1.23.14+k3s1/k3s-arm64
<span class="token punctuation">[</span>INFO<span class="token punctuation">]</span>  Verifying binary download
<span class="token punctuation">[</span>INFO<span class="token punctuation">]</span>  Installing k3s to /usr/local/bin/k3s
<span class="token punctuation">[</span>INFO<span class="token punctuation">]</span>  Skipping installation of SELinux RPM
<span class="token punctuation">[</span>INFO<span class="token punctuation">]</span>  Creating /usr/local/bin/kubectl symlink to k3s
<span class="token punctuation">[</span>INFO<span class="token punctuation">]</span>  Creating /usr/local/bin/crictl symlink to k3s
<span class="token punctuation">[</span>INFO<span class="token punctuation">]</span>  Skipping /usr/local/bin/ctr symlink to k3s, <span class="token builtin class-name">command</span> exists <span class="token keyword">in</span> <span class="token environment constant">PATH</span> at /usr/bin/ctr
<span class="token punctuation">[</span>INFO<span class="token punctuation">]</span>  Creating <span class="token function">killall</span> script /usr/local/bin/k3s-killall.sh
<span class="token punctuation">[</span>INFO<span class="token punctuation">]</span>  Creating uninstall script /usr/local/bin/k3s-uninstall.sh
<span class="token punctuation">[</span>INFO<span class="token punctuation">]</span>  env: Creating environment <span class="token function">file</span> /etc/systemd/system/k3s.service.env
<span class="token punctuation">[</span>INFO<span class="token punctuation">]</span>  systemd: Creating <span class="token function">service</span> <span class="token function">file</span> /etc/systemd/system/k3s.service
<span class="token punctuation">[</span>INFO<span class="token punctuation">]</span>  systemd: Enabling k3s unit
Created symlink /etc/systemd/system/multi-user.target.wants/k3s.service → /etc/systemd/system/k3s.service.
<span class="token punctuation">[</span>INFO<span class="token punctuation">]</span>  systemd: Starting k3s<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>



<p>拷贝配置文件到当前机器：</p>
<pre class="line-numbers language-none"><code class="language-none">scp root@172.16.190.100:&#x2F;etc&#x2F;rancher&#x2F;k3s&#x2F;k3s.yaml ~&#x2F;.kube&#x2F;config<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>本机可以直接cp</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">cp</span> /etc/rancher/k3s/k3s.yaml ~/.kube/config<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>



<p>下载helm</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">wget</span> https://get.helm.sh/helm-v3.10.2-linux-arm64.tar.gz<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>解压并复制到指定路径</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">tar</span> <span class="token parameter variable">-zxvf</span>  helm-v3.10.2-linux-arm64.tar.gz
<span class="token function">cp</span> linux-arm64/helm /usr/bin/<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>

<p>查看helm版本</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">root@hao:~<span class="token comment"># helm version</span>
version.BuildInfo<span class="token punctuation">&#123;</span>Version:<span class="token string">"v3.10.2"</span>, GitCommit:<span class="token string">"50f003e5ee8704ec937a756c646870227d7c8b58"</span>, GitTreeState:<span class="token string">"clean"</span>, GoVersion:<span class="token string">"go1.18.8"</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>

<p>更新helm相关配置</p>
<pre class="line-numbers language-none"><code class="language-none">helm repo add rancher-latest https:&#x2F;&#x2F;releases.rancher.com&#x2F;server-charts&#x2F;latest

kubectl create namespace cattle-system

kubectl apply -f https:&#x2F;&#x2F;github.com&#x2F;cert-manager&#x2F;cert-manager&#x2F;releases&#x2F;download&#x2F;v1.7.1&#x2F;cert-manager.crds.yaml

helm repo add jetstack https:&#x2F;&#x2F;charts.jetstack.io

helm repo update

helm install cert-manager jetstack&#x2F;cert-manager \
  --namespace cert-manager \
  --create-namespace \
  --version v1.7.1

# Windows Powershell
helm install cert-manager jetstack&#x2F;cert-manager &#96;
  --namespace cert-manager &#96;
  --create-namespace &#96;
  --version v1.7.1<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>出现以下界面表示helm更新成功</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">root@hao:~<span class="token comment"># helm repo add rancher-latest https://releases.rancher.com/server-charts/latest</span>
<span class="token string">"rancher-latest"</span> already exists with the same configuration, skipping
root@hao:~<span class="token comment"># kubectl create namespace cattle-system</span>
namespace/cattle-system created
root@hao:~<span class="token comment"># kubectl apply -f https://github.com/cert-manager/cert-manager/releases/download/v1.7.1/cert-manager.crds.yaml</span>
customresourcedefinition.apiextensions.k8s.io/certificaterequests.cert-manager.io created
customresourcedefinition.apiextensions.k8s.io/certificates.cert-manager.io created
customresourcedefinition.apiextensions.k8s.io/challenges.acme.cert-manager.io created
customresourcedefinition.apiextensions.k8s.io/clusterissuers.cert-manager.io created
customresourcedefinition.apiextensions.k8s.io/issuers.cert-manager.io created
customresourcedefinition.apiextensions.k8s.io/orders.acme.cert-manager.io created
root@hao:~<span class="token comment"># helm repo add jetstack https://charts.jetstack.io</span>
<span class="token string">"jetstack"</span> already exists with the same configuration, skipping
root@hao:~<span class="token comment"># helm repo update</span>
Hang tight <span class="token keyword">while</span> we grab the latest from your chart repositories<span class="token punctuation">..</span>.
<span class="token punctuation">..</span>.Successfully got an update from the <span class="token string">"jetstack"</span> chart repository
<span class="token punctuation">..</span>.Successfully got an update from the <span class="token string">"rancher-latest"</span> chart repository
Update Complete. ⎈Happy Helming<span class="token operator">!</span>⎈<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>



<p>使用helm安装rancher2.7</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">helm <span class="token function">install</span> rancher rancher-latest/rancher <span class="token punctuation">\</span>
  <span class="token parameter variable">--namespace</span> cattle-system <span class="token punctuation">\</span>
  <span class="token parameter variable">--set</span> <span class="token assign-left variable">hostname</span><span class="token operator">=</span><span class="token number">172.16</span>.190.100.sslip.io <span class="token punctuation">\</span>
  <span class="token parameter variable">--set</span> <span class="token assign-left variable">replicas</span><span class="token operator">=</span><span class="token number">1</span> <span class="token punctuation">\</span>
  <span class="token parameter variable">--set</span> <span class="token assign-left variable">bootstrapPassword</span><span class="token operator">=</span>jshebuebyxg45h3<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>



<p>出现下面提示就表示安装成功了</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">NAME: rancher
LAST DEPLOYED: Sat Dec  <span class="token number">3</span> 09:12:02 <span class="token number">2022</span>
NAMESPACE: cattle-system
STATUS: deployed
REVISION: <span class="token number">1</span>
TEST SUITE: None
NOTES:
Rancher Server has been installed.

NOTE: Rancher may take several minutes to fully initialize. Please standby <span class="token keyword">while</span> Certificates are being issued, Containers are started and the Ingress rule comes up.

Check out our docs at https://rancher.com/docs/

If you provided your own bootstrap password during installation, browse to https://172.16.190.100.sslip.io to get started.

If this is the first <span class="token function">time</span> you installed Rancher, get started by running this <span class="token builtin class-name">command</span> and clicking the URL it generates:

``<span class="token variable"><span class="token variable">`</span>
<span class="token builtin class-name">echo</span> https://172.16.190.100.sslip.io/dashboard/?setup<span class="token operator">=</span><span class="token punctuation">$(</span>kubectl get secret <span class="token parameter variable">--namespace</span> cattle-system bootstrap-secret <span class="token parameter variable">-o</span> go-template<span class="token operator">=</span><span class="token string">'&#123;&#123;.data.bootstrapPassword|base64decode&#125;&#125;'</span><span class="token punctuation">)</span>
<span class="token variable">`</span></span>`<span class="token variable"><span class="token variable">`</span>

To get just the bootstrap password on its own, run:

<span class="token variable">`</span></span>`<span class="token variable"><span class="token variable">`</span>
kubectl get secret <span class="token parameter variable">--namespace</span> cattle-system bootstrap-secret <span class="token parameter variable">-o</span> go-template<span class="token operator">=</span><span class="token string">'&#123;&#123;.data.bootstrapPassword|base64decode&#125;&#125;&#123;&#123; "\n" &#125;&#125;'</span>
<span class="token variable">`</span></span>``


Happy Containering<span class="token operator">!</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">root@hao:~<span class="token comment"># echo https://172.16.190.100.sslip.io/dashboard/?setup=$(kubectl get secret --namespace cattle-system bootstrap-secret -o go-template='&#123;&#123;.data.bootstrapPassword|base64decode&#125;&#125;')</span>
https://172.16.190.100.sslip.io/dashboard/?setup<span class="token operator">=</span>jshebuebyxg45h3

root@hao:~<span class="token comment"># kubectl get secret --namespace cattle-system bootstrap-secret -o go-template='&#123;&#123;.data.bootstrapPassword|base64decode&#125;&#125;&#123;&#123; "\n" &#125;&#125;'</span>
jshebuebyxg45h3<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>最后一步，因为是在内网，需要添加hosts才能正常访问</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">cat</span> /etc/hosts
<span class="token number">172.16</span>.190.100 <span class="token number">172.16</span>.190.100.sslip.io<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>

<p>熟悉的界面出现了！ok大功告成！</p>
<img  
                     lazyload
                     alt="image"
                     data-src="https://cdn.staticaly.com/gh/trojan20161207/blogpic@master/20230204/image-20221203172300525.1xxjl88mwj8g.webp"
                      style="zoom:100%;" 
                >





]]></content>
      <tags>
        <tag>k3s</tag>
        <tag>rancher</tag>
      </tags>
  </entry>
  <entry>
    <title>linux运维的个人进阶</title>
    <url>/2019/09/19/linux%E8%BF%90%E7%BB%B4%E7%9A%84%E4%B8%AA%E4%BA%BA%E8%BF%9B%E9%98%B6/</url>
    <content><![CDATA[<h2 id="一直以来，个人都是在通过不断探索，以寻找最好的学习Linux的方式。"><a href="#一直以来，个人都是在通过不断探索，以寻找最好的学习Linux的方式。" class="headerlink" title="一直以来，个人都是在通过不断探索，以寻找最好的学习Linux的方式。"></a>一直以来，个人都是在通过不断探索，以寻找最好的学习Linux的方式。</h2><p>本文简单介绍了其中一种linux运维的个人进阶路线，有需要的朋友可以参考下。</p>
<h3 id="第一阶段：企业级Linux运维工程师"><a href="#第一阶段：企业级Linux运维工程师" class="headerlink" title="第一阶段：企业级Linux运维工程师"></a>第一阶段：企业级Linux运维工程师</h3><p>1、Linux运维最佳学习方法”5W1H”六何分析法全面介绍，独家Linux快速入门学习技巧</p>
<p>2、冯诺依曼体系（CPU架构、操作系统概念、发展演变、应用场景、业内形态）</p>
<p>3、Linux运维基础实战入门，用户管理，权限，文件查找，文本编辑及实战讲解</p>
<p>4、Linux运维系统管理和技能进阶，磁盘管理，软件安装，文件系统、内核使用方法和高级技巧</p>
<p>5、Linux系统环境及日常管理，结合日常工作常用20个场景，排错思路、面试和工作中注意事项</p>
<p>6、以实战方式全方位展示Bash八大特性和高级用法介绍以及高级企业级使用技巧实战演练</p>
<p>7、Shell脚本工作原理、学习方法、配罝技巧、企业级书写规范、开发环境定制全面实战介绍</p>
<p>8、职场人价值体系-知识、技能、成长目标和方向定位年薪30W运维人员必备知识体系关键技能点</p>
<h3 id="第二阶段：Linux应用运维工程师-amp-DBA"><a href="#第二阶段：Linux应用运维工程师-amp-DBA" class="headerlink" title="第二阶段：Linux应用运维工程师&amp;DBA"></a>第二阶段：Linux应用运维工程师&amp;DBA</h3><p>1、TCP&#x2F;IP网络通信协议，IP地址含义、TCP有限状态机转换原理，路由协议</p>
<p>2、利用Kickstart文件实现企业级自动化安装环境定制，百台并发安装实战</p>
<p>3、Linux常见系统故障案例分析，企业级Linux运维工程师常犯错误Top5</p>
<p>4、全面讲解CDN核心技术理念，实现智能DNS流量分发和用户策略引导</p>
<p>5、实战讲解LAMP运维架构，Apache+PHP+Mysql架构体系和文件存储</p>
<p>6、介绍企业级安全体系，iptables构建安全架构以及软硬防火墙优劣势</p>
<p>7、深入讲解运维必备Web服务开源解决方案Nginx及LNMP企业高级用法</p>
<p>8、企业级DBA实战课程，Mysql企业级实战应用，调优及redis企业级应用</p>
<h3 id="第三阶段：企业级Linux云计算工程师"><a href="#第三阶段：企业级Linux云计算工程师" class="headerlink" title="第三阶段：企业级Linux云计算工程师"></a>第三阶段：企业级Linux云计算工程师</h3><p>1、全面讲解企业级LNMP架构及12条策略建议，实现互联网电子商务、博客、论坛等实战案例</p>
<p>2、专业压测评估体系，从并发、响应时间、持久连接、pv、峰值、带宽，以及ab等压测方案实施</p>
<p>4、讲解Linux Cluster集群，全面分析集群类别，讲解F5和LVS、haproxy、nginx的4-7层负载均衡</p>
<p>5、实战带领在Centos7上实现LVS集群配罝、服务管理、调度算法修改、后端服务器上下线、服务状态监控，状态监测方实现NAT、DR、TUN等模型演练</p>
<p>6、全面实现基于Nginx负载均衡功能，实现Nginx反代后端、Nginx负载均衡实现网站动静分离详解</p>
<p>7、实战带领实现Keepalived主从架构及双主切换方案、报警定制、日志分析等</p>
<p>8、全面讲解Zabbix3.X监控特性、Web服务监控、Zabbix内部监控、Zabbix特性及功能详解</p>
<p>9、全面讲解Varnish缓存技术，深入Varnish工作机制、核心架构、及主流开源缓存技术解决方案</p>
<p>10、laaS、PaaS和SaaS云平台功能及常见实现方式及OpenStack的功能特性及其实现的增强功能</p>
<p>11、全面讲解KVM虚拟化技术，docker技术实现互联网容器和Docker容器云以及Kubemetes管理</p>
<h3 id="第四阶段：Linux自动化运维工程师-amp-DevOps"><a href="#第四阶段：Linux自动化运维工程师-amp-DevOps" class="headerlink" title="第四阶段：Linux自动化运维工程师&amp;DevOps"></a>第四阶段：Linux自动化运维工程师&amp;DevOps</h3><p>1、以自动化运维框架为主线，讲解Devops运维自动化趋和核心技术</p>
<p>2、自动化运维工具Puppet、Ansible、Cobbler、Saltstack、 Fabric对比</p>
<p>3、Ansible生产环境应用案例和实战操练、批量进行上百台服务器管理</p>
<p>4、企业自动化工具Puppet使用场景，实现搭建企业运维自动化平台架构</p>
<p>5、全面讲解Git版本控制、脚本自动化管理、Git分支合并，Git服务器搭建</p>
<p>6、深入讲解基于Shell脚本企业级高级用法和常见实现Shell自动化管理</p>
<p>7、python基本语法和自动化工具应用，及开源跳板机Jumpserver实现</p>
<p>8、实战：基于生产环境持续集成案例，Jenkins+gitlab+maven+shell实现代码自动化上线部署，可持续集成</p>
<p>9、生产环境基于自动化运维常见场景如自动化发布、灰度发布、批量上线、降级方案、无缝切换等核心技术</p>
<h3 id="第五阶段：Linux系统架构师-amp-运维架构师"><a href="#第五阶段：Linux系统架构师-amp-运维架构师" class="headerlink" title="第五阶段：Linux系统架构师&amp;运维架构师"></a>第五阶段：Linux系统架构师&amp;运维架构师</h3><p>1、全面介绍缓存技术要点，讲解数据流式化、代理式缓存、旁路式缓存、缓存算法、缓存设定策略、一致性哈希算法优劣势等</p>
<p>2、全面讲解正向代理、反向代理机制，实战实现Nginx反向代理负载均衡，跳转规則实现动静分离、IP曰志记录、头部信息改写、缓存模块、缓存策略、请求超时机制、健康状态监测、判定规则、状态码定义、实现后端故障及自动上线等能力</p>
<p>3、实战带领实现千万级大型互联网Web架构核心技术，运用LVS、Haproxy、Vamish、 Nginx、tomcat、MySQL等实现高并发运维体系Web架构，实现分布式集群存储Fastdfs和mogileFS架构</p>
<p>4、全面讲解MySQL—主多从、一从多主企业级用法，深入讲解MySQL读写分离、连接池及sharding技术，以及MMM、MHA、Galera-Cluster核心技术， MySQL读写分离Amoeba实现</p>
<p>5、实战:分布式收集Nginx日志于Elk集群，并通过Kibana展示；实战:分布式收集 JAVA日志于Elk集群，并通过Kibana展示；实战:分布式收集Syslog曰志于Elk集群，并通过Kibana展示</p>
<p>6、结合自动化工具实现企业业务服务管理，持续化集成，实现Devops运维管理模型及架构设计。</p>
<p>7、实现基于k8s的企业级容器云架构管理，以及docker容器的服务应用，实现私有云架构方案</p>
<p>8、全面讲解大众点评、美团、滴滴、饿了么等亿级别PV大型互联网架构方案，以及设计规范，包含负载均衡、缓存、高可用、数据库、分布式存储、消息队列、自动化、运维规范、监控体系等</p>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>Linux运维, 进阶</tag>
      </tags>
  </entry>
  <entry>
    <title>nginx.conf配置文件结构</title>
    <url>/2019/09/23/nginx.conf%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E7%BB%93%E6%9E%84/</url>
    <content><![CDATA[<p>　Nginx的核心模块为<em>Main</em>和<em>Events</em>，此外还包括标准<em>HTTP模块</em>、可选<em>HTTP模块</em>和<em>邮件模块</em>，其还可以支持诸多第三方模块。Main用于配置错误日志、进程及权限等相关的参数，Events用于配置IO模型，如epoll、kqueue、select或poll等，它们是必备模块，HTTP模块用于控制Nginx的HTTP进程。</p>
<p>　　Nginx的主配置文件由几个段组成，这个段通常也被称为nginx的上下文，每个段的定义格式如下所示。需要注意的是，其每一个指令都必须使用分号(<em>;</em>)结束，否则为语法错误。</p>
<pre class="line-numbers language-none"><code class="language-none">&lt;section&gt; &#123;
     &lt;directive&gt; &lt;parameters&gt;
&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>

<p>主要结构（所有配置以分号结尾）如下：</p>
<pre class="line-numbers language-none"><code class="language-none">## Main段，定义全局属性
events &#123;
          ##定义不同IO模型下的工作机制；
&#125;
http &#123; 
    ##定义作为web服务器的相关属性（还可以反向代理mail）
    server &#123; 
        ##定义一个虚拟主机的属性，所有web服务必须定义成一个虚拟主机，与httpd不同
        location [option] uri &#123; 
            ##定义一个URI的特性
            ##location中可以嵌套location的
            location [option] uri &#123; 
                #嵌套location
            &#125;
               if (condition) &#123;
                ##定义URL重写
            &#125;
        &#125;
    &#125;
    upstream  &amp;ltName&amp;gt &#123;
        ##将多个server结合在一起，实现负载均衡
    &#125;
 &#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
]]></content>
      <categories>
        <category>nginx</category>
      </categories>
      <tags>
        <tag>nginx</tag>
      </tags>
  </entry>
  <entry>
    <title>nginx event配置指令</title>
    <url>/2019/09/23/nginxevent%E9%85%8D%E7%BD%AE%E6%8C%87%E4%BB%A4/</url>
    <content><![CDATA[<hr>
<p>　　参考事件模型指令：<em>use [ kqueue | rtsig | epoll | &#x2F;dev&#x2F;poll | select | poll ];</em></p>
<pre class="line-numbers language-none"><code class="language-none">use epoll;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>　　注：epoll模型是Linux 2.6以上版本内核中的高性能网络I&#x2F;O模型，如果跑在FreeBSD上面，就用kqueue模型。</p>
<p>　　设置单个进程最大连接数用指令：_worker<em>connections</em>（最大连接数&#x3D;连接数*进程数）</p>
<pre class="line-numbers language-none"><code class="language-none">worker_connections 65535;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
]]></content>
      <categories>
        <category>nginx</category>
      </categories>
      <tags>
        <tag>nginx</tag>
      </tags>
  </entry>
  <entry>
    <title>go语言参考手册</title>
    <url>/2021/11/05/go%E8%AF%AD%E8%A8%80%E5%8F%82%E8%80%83%E6%89%8B%E5%86%8C/</url>
    <content><![CDATA[<h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><p>这是一个 Go 语言的参考手册，你也可以访问<a class="link"   href="https://golang.org/" >golang.org<i class="fas fa-external-link-alt"></i></a>获取更多信息和其他文档。</p>
<p>Go 是在设计时考虑了系统编程的通用型编程语言。它是强类型，有垃圾回收机制并原生支持并发编程。Go 程序由一个或多个 package 组成，这样可以高效的管理依赖。</p>
<p>Go 的语法简洁且有规则，这让自动化工具可以很容易的分析代码，例如：集成开发环境。</p>
<h2 id="标记"><a href="#标记" class="headerlink" title="标记"></a>标记</h2><p>语法采用扩展巴科斯范式。</p>
<pre class="line-numbers language-go" data-language="go"><code class="language-go">Production  <span class="token operator">=</span> production_name <span class="token string">"="</span> <span class="token punctuation">[</span> Expression <span class="token punctuation">]</span> <span class="token string">"."</span> <span class="token punctuation">.</span>
Expression  <span class="token operator">=</span> Alternative <span class="token punctuation">&#123;</span> <span class="token string">"|"</span> Alternative <span class="token punctuation">&#125;</span> <span class="token punctuation">.</span>
Alternative <span class="token operator">=</span> Term <span class="token punctuation">&#123;</span> Term <span class="token punctuation">&#125;</span> <span class="token punctuation">.</span>
Term        <span class="token operator">=</span> production_name <span class="token operator">|</span> token <span class="token punctuation">[</span> <span class="token string">"…"</span> token <span class="token punctuation">]</span> <span class="token operator">|</span> Group <span class="token operator">|</span> Option <span class="token operator">|</span> Repetition <span class="token punctuation">.</span>
Group       <span class="token operator">=</span> <span class="token string">"("</span> Expression <span class="token string">")"</span> <span class="token punctuation">.</span>
Option      <span class="token operator">=</span> <span class="token string">"["</span> Expression <span class="token string">"]"</span> <span class="token punctuation">.</span>
Repetition  <span class="token operator">=</span> <span class="token string">"&#123;"</span> Expression <span class="token string">"&#125;"</span> <span class="token punctuation">.</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>



<p>产生式是由词法单元和以下操作符构成的表达式（优先级依次递增）：</p>
<pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token operator">|</span>   或
<span class="token punctuation">(</span><span class="token punctuation">)</span>  分组
<span class="token punctuation">[</span><span class="token punctuation">]</span>  可选 <span class="token punctuation">(</span>出现 <span class="token number">0</span> 或 <span class="token number">1</span> 次<span class="token punctuation">)</span>
<span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span>  可重复 <span class="token punctuation">(</span>出现 <span class="token number">0</span> 到 n 次<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>



<p>小写的产生式名称用来与词法单元区分。非终结符采用驼峰式。词法单元由双引号或反引号组成。</p>
<p><code>a...b</code> 表示从 <code>a</code> 到 <code>b</code> 之间的任意字符。省略号 <code>...</code> 也可以在规范中表示对更详细的枚举和代码片段的省略。字符 <code>...</code> 不是 Go 语言的词法单元。</p>
<h2 id="源码表示法"><a href="#源码表示法" class="headerlink" title="源码表示法"></a>源码表示法</h2><p>Go 的源代码使用 UTF-8 编码的 Unicode 文本。不过它并不是完全规范化的，单重音的代码点与由相同字符和音标组成的代码点是不同的；前者我们认为它是两个代码点。简单来讲，文档会在源代码文本中使用非规范的术语字符来表示一个 Unicode 代码点。</p>
<p>每个代码点都是不同的；相同字符的大写和小写形式表示不同的字符。</p>
<p>实现限制：为了兼容其他工具，编译器不允许出现 Utf-8 编码的源文本中的 NUL 字符（U+0000）。</p>
<p>实现限制：为了兼容其他工具，如果源文本中是以Utf-8 编码的字节序标记（U+FEFF）为起始代码点。编译器会忽略它。字节序标记不应出现在源文本的任何位置。</p>
<h4 id="字符"><a href="#字符" class="headerlink" title="字符"></a>字符</h4><p>这些单词表示 Unicode 字符的类别：</p>
<pre class="line-numbers language-go" data-language="go"><code class="language-go">newline        <span class="token operator">=</span> <span class="token comment">/* Unicode 代码点 U+000A */</span> <span class="token punctuation">.</span>
unicode_char   <span class="token operator">=</span> <span class="token comment">/* 排除换行以外的任意 Unicode 代码点 */</span> <span class="token punctuation">.</span>
unicode_letter <span class="token operator">=</span> <span class="token comment">/* 一个字母（"Letter"）类型的 Unicode 代码点  */</span> <span class="token punctuation">.</span>
unicode_digit  <span class="token operator">=</span> <span class="token comment">/* 一个数字（"Number, decimal digit"）类型的 Unicode 代码点  */</span> <span class="token punctuation">.</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>



<p>在 Unicode8.0 标准中，第 4.5 章节 “一般类别” 中定义了字符的类别。Go 能够处理任何字符集，包括 Lu，Li，Lt，Lm 或 Lo 作为 Unicode 字母，还可以把数字字符集 Nd 当作 Unicode 数字处理。</p>
<h4 id="字母和数字"><a href="#字母和数字" class="headerlink" title="字母和数字"></a>字母和数字</h4><p>我们认为下划线 <code>_</code> （U+005F）是一个字母：</p>
<pre class="line-numbers language-go" data-language="go"><code class="language-go">letter        <span class="token operator">=</span> unicode_letter <span class="token operator">|</span> <span class="token string">"_"</span> <span class="token punctuation">.</span>
decimal_digit <span class="token operator">=</span> <span class="token string">"0"</span> … <span class="token string">"9"</span> <span class="token punctuation">.</span>
octal_digit   <span class="token operator">=</span> <span class="token string">"0"</span> … <span class="token string">"7"</span> <span class="token punctuation">.</span>
hex_digit     <span class="token operator">=</span> <span class="token string">"0"</span> … <span class="token string">"9"</span> <span class="token operator">|</span> <span class="token string">"A"</span> … <span class="token string">"F"</span> <span class="token operator">|</span> <span class="token string">"a"</span> … <span class="token string">"f"</span> <span class="token punctuation">.</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>



<h2 id="词汇元素"><a href="#词汇元素" class="headerlink" title="词汇元素"></a>词汇元素</h2><h4 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h4><p>注释是程序的说明文档。在 Go 中有两种形式：</p>
<ul>
<li>单行注释从 <code>//</code> 开始直到行末结束。</li>
<li>通用注释从 <code>/*</code> 开始直到 <code>*/</code> 结束。</li>
</ul>
<p>注释不能嵌套在其他注释、字符串和 rune 的字面值中。不包含换行符的通用注释之间通过空格符连接，其他情况下每段注释都会另起一行。</p>
<h4 id="词汇元素-1"><a href="#词汇元素-1" class="headerlink" title="词汇元素"></a>词汇元素</h4><p>词汇元素构成了 Go 语言的词汇表。它有四种类型：标识符、关键字、操作符&#x2F;标点符号、字面值。空白符可以是空格（U+0020）、水平制表符（U+0009）、换行符（U+000D）或换行符（U+000A）。它本身会被忽略，一般用来区分不同的词汇元素。换行符或文件终止符（EOF）还可能触发编译程序在源代码的行末或文件末尾追加分号。在分解源代码的词汇元素的过程中，会把当前可以形成有效词汇元素的最长字符序列作为下一个词汇元素。</p>
<h4 id="分号"><a href="#分号" class="headerlink" title="分号"></a>分号</h4><p>正规语法在很多产生式中使用分号 “;” 作为终结符。Go 程序中遵循下面两条规则省略了大部分的分号：</p>
<ol>
<li>当某行的最后一个词汇元素是以下元素时自动补全分号：</li>
</ol>
<ul>
<li><p>一个标识符。</p>
</li>
<li><p>一个整数，浮点数，虚数，rune 或字符串字面值。</p>
</li>
<li><p>关键字 <code>break</code>、<code>continue</code>、<code>fallthrough</code> 和 <code>return</code> 其中之一。</p>
</li>
<li><p>操作符&#x2F;标点符号 <code>++</code>，<code>--</code>，<code>)</code>，<code>]</code> 和 <code>&#125;</code> 其中之一。</p>
</li>
</ul>
<ol>
<li>为了支持独占一行的复杂语句，会省略与 “)” 或 “}” 相邻的分号。</li>
</ol>
<p>为了反应惯用用途，本篇文档的所有例子都基于以上规则省略分号。</p>
<h4 id="标识符"><a href="#标识符" class="headerlink" title="标识符"></a>标识符</h4><p>标识符表示程序实体单元，例如：变量、类型。一个标识符由一个或多个字母和数字组成。标识符的首字符必须为字母。</p>
<pre class="line-numbers language-go" data-language="go"><code class="language-go">identifier <span class="token operator">=</span> letter <span class="token punctuation">&#123;</span> letter <span class="token operator">|</span> unicode_digit <span class="token punctuation">&#125;</span> <span class="token punctuation">.</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>



<pre class="line-numbers language-go" data-language="go"><code class="language-go">a
_x9
ThisVariableIsExported
αβ<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>



<p>Go 已经预定义了一些标识符。</p>
<h4 id="关键字"><a href="#关键字" class="headerlink" title="关键字"></a>关键字</h4><p>以下关键字是预留的，它们不能作为标识符：</p>
<pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">break</span>        <span class="token keyword">default</span>      <span class="token keyword">func</span>         <span class="token keyword">interface</span>    <span class="token keyword">select</span>
<span class="token keyword">case</span>         <span class="token keyword">defer</span>        <span class="token keyword">go</span>           <span class="token keyword">map</span>          <span class="token keyword">struct</span>
<span class="token keyword">chan</span>         <span class="token keyword">else</span>         <span class="token keyword">goto</span>         <span class="token keyword">package</span>      <span class="token keyword">switch</span>
<span class="token keyword">const</span>        <span class="token keyword">fallthrough</span>  <span class="token keyword">if</span>           <span class="token keyword">range</span>        <span class="token keyword">type</span>
<span class="token keyword">continue</span>     <span class="token keyword">for</span>          <span class="token keyword">import</span>       <span class="token keyword">return</span>       <span class="token keyword">var</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>



<h4 id="操作符和标点符号"><a href="#操作符和标点符号" class="headerlink" title="操作符和标点符号"></a>操作符和标点符号</h4><p>以下字符序列用于表示操作符（包括赋值运算符）和标点符号：</p>
<pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token operator">+</span>    <span class="token operator">&amp;</span>     <span class="token operator">+=</span>    <span class="token operator">&amp;=</span>     <span class="token operator">&amp;&amp;</span>    <span class="token operator">==</span>    <span class="token operator">!=</span>    <span class="token punctuation">(</span>    <span class="token punctuation">)</span>
<span class="token operator">-</span>    <span class="token operator">|</span>     <span class="token operator">-=</span>    <span class="token operator">|=</span>     <span class="token operator">||</span>    <span class="token operator">&lt;</span>     <span class="token operator">&lt;=</span>    <span class="token punctuation">[</span>    <span class="token punctuation">]</span>
<span class="token operator">*</span>    <span class="token operator">^</span>     <span class="token operator">*=</span>    <span class="token operator">^=</span>     <span class="token operator">&lt;-</span>    <span class="token operator">></span>     <span class="token operator">>=</span>    <span class="token punctuation">&#123;</span>    <span class="token punctuation">&#125;</span>
<span class="token operator">/</span>    <span class="token operator">&lt;&lt;</span>    <span class="token operator">/=</span>    <span class="token operator">&lt;&lt;=</span>    <span class="token operator">++</span>    <span class="token operator">=</span>     <span class="token operator">:=</span>    <span class="token punctuation">,</span>    <span class="token punctuation">;</span>
<span class="token operator">%</span>    <span class="token operator">>></span>    <span class="token operator">%=</span>    <span class="token operator">>>=</span>    <span class="token operator">--</span>    <span class="token operator">!</span>     <span class="token operator">...</span>   <span class="token punctuation">.</span>    <span class="token punctuation">:</span>
     <span class="token operator">&amp;^</span>          <span class="token operator">&amp;^=</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>



<h4 id="整型字面值"><a href="#整型字面值" class="headerlink" title="整型字面值"></a>整型字面值</h4><p>整型字面值是一个数字序列，相当于整型常量。可以使用前缀指定非小数进制：0 表示八进制，0x&#x2F;0X 表示十六进制。在十六进制字面值中，字母 a-f 和 A-F 都表示数字 10-15。</p>
<pre class="line-numbers language-go" data-language="go"><code class="language-go">int_lit     <span class="token operator">=</span> decimal_lit <span class="token operator">|</span> octal_lit <span class="token operator">|</span> hex_lit <span class="token punctuation">.</span>
decimal_lit <span class="token operator">=</span> <span class="token punctuation">(</span> <span class="token string">"1"</span> … <span class="token string">"9"</span> <span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> decimal_digit <span class="token punctuation">&#125;</span> <span class="token punctuation">.</span>
octal_lit   <span class="token operator">=</span> <span class="token string">"0"</span> <span class="token punctuation">&#123;</span> octal_digit <span class="token punctuation">&#125;</span> <span class="token punctuation">.</span>
hex_lit     <span class="token operator">=</span> <span class="token string">"0"</span> <span class="token punctuation">(</span> <span class="token string">"x"</span> <span class="token operator">|</span> <span class="token string">"X"</span> <span class="token punctuation">)</span> hex_digit <span class="token punctuation">&#123;</span> hex_digit <span class="token punctuation">&#125;</span> <span class="token punctuation">.</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>



<pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token number">42</span>
<span class="token number">0600</span>
<span class="token number">0xBadFace</span>
<span class="token number">170141183460469231731687303715884105727</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>



<h4 id="浮点字面值"><a href="#浮点字面值" class="headerlink" title="浮点字面值"></a>浮点字面值</h4><p>浮点字面值是一个小数，相当于浮点数常量。它由整数部分，小数点，小数部分和指数部分构成。整数部分和小数部分用小数点链接；指数部分由  <code>e</code> &#x2F; <code>E</code> 字符后接一个有符号指数构成。整数部分和小数部分可以省略其一；小数点和指数部分可以省略其一。</p>
<pre class="line-numbers language-go" data-language="go"><code class="language-go">float_lit <span class="token operator">=</span> decimals <span class="token string">"."</span> <span class="token punctuation">[</span> decimals <span class="token punctuation">]</span> <span class="token punctuation">[</span> exponent <span class="token punctuation">]</span> <span class="token operator">|</span>
            decimals exponent <span class="token operator">|</span>
            <span class="token string">"."</span> decimals <span class="token punctuation">[</span> exponent <span class="token punctuation">]</span> <span class="token punctuation">.</span>
decimals  <span class="token operator">=</span> decimal_digit <span class="token punctuation">&#123;</span> decimal_digit <span class="token punctuation">&#125;</span> <span class="token punctuation">.</span>
exponent  <span class="token operator">=</span> <span class="token punctuation">(</span> <span class="token string">"e"</span> <span class="token operator">|</span> <span class="token string">"E"</span> <span class="token punctuation">)</span> <span class="token punctuation">[</span> <span class="token string">"+"</span> <span class="token operator">|</span> <span class="token string">"-"</span> <span class="token punctuation">]</span> decimals <span class="token punctuation">.</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>



<pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token number">0.</span>
<span class="token number">72.40</span>
<span class="token number">072.40</span>  <span class="token comment">// == 72.40</span>
<span class="token number">2.71828</span>
<span class="token number">1.e+0</span>
<span class="token number">6.67428e-11</span>
<span class="token number">1E6</span>
<span class="token number">.25</span>
<span class="token number">.12345E+5</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>



<h4 id="虚数字面值"><a href="#虚数字面值" class="headerlink" title="虚数字面值"></a>虚数字面值</h4><p>虚数字面值是一个小数，相当于复数常量中的虚数部分。它由浮点数或者整数后接小写字母 i 构成。</p>
<pre class="line-numbers language-go" data-language="go"><code class="language-go">imaginary_lit <span class="token operator">=</span> <span class="token punctuation">(</span>decimals <span class="token operator">|</span> float_lit<span class="token punctuation">)</span> <span class="token string">"i"</span> <span class="token punctuation">.</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>



<pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token number">0i</span>
<span class="token number">011i</span>  <span class="token comment">// == 11i</span>
<span class="token number">0.i</span>
<span class="token number">2.71828i</span>
<span class="token number">1.e+0i</span>
<span class="token number">6.67428e-11i</span>
<span class="token number">1E6i</span>
<span class="token number">.25i</span>
<span class="token number">.12345E+5i</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>



<h4 id="Rune-字面值"><a href="#Rune-字面值" class="headerlink" title="Rune 字面值"></a>Rune 字面值</h4><p>rune 类型字面值相当于一个 rune 常量。它是一个表示 Unicode 代码点的整数。rune 类型字面值表示为用单引号包裹的一个或多个字符，像 ‘x’ 或 ‘\n’。在单引号中除了换行符和未转义的单引号其他的字符都可以直接显示。单引号包裹的字符的值和字符在 Unicode 编码中的值相等，而以反斜线开头的多字符序列会把值翻译成多种格式。</p>
<p>使用引号表示单字符是最简单的方式；因为 Go 的源文本是 UTF-8 编码，一个整数可能代表多个 UTF-8 字节。例如， ‘a’ 可以使用单字节表示字符 a，Unicode 编码 U+0061，值 0x61，而 ‘ä’ 是两字节表示分音符的 a，Unicode 编码 U+00E4，值 0xe4。</p>
<p>反斜线能将任意值编码成 ASCII 文本。有四种方式将整数值表示为数字常量：<code>\x</code> 后接两个十六进制数；<code>\u</code> 后接四个十六进制数；<code>\U</code> 后接八个十六进制数。 <code>\</code> 后接三个八进制数。每种情况下都使用相应进制来表示字面量的整数值。</p>
<p>虽然这四种方式都以整数表示，但它们的有效区间并不相同。八进制只能表示 0 - 255 以内的整数。十六进制满可以满足需求。<code>\u</code> 和 <code>\U</code>  都可以表示 Unicode 代码点，不过其中的一些值是无效的，特别是 0x10FFFF 以上的值。</p>
<p>反斜线结合以下字符具有特殊含义：</p>
<pre class="line-numbers language-go" data-language="go"><code class="language-go">\a   U<span class="token operator">+</span><span class="token number">0007</span> alert or bell
\b   U<span class="token operator">+</span><span class="token number">0008</span> 退格符
\f   U<span class="token operator">+</span>000C form feed
\n   U<span class="token operator">+</span>000A line feed or newline
\r   U<span class="token operator">+</span>000D carriage <span class="token keyword">return</span>
\t   U<span class="token operator">+</span><span class="token number">0009</span> 水平制表符
\v   U<span class="token operator">+</span>000b 垂直制表符
\\   U<span class="token operator">+</span>005c 反斜线
\'   U<span class="token operator">+</span><span class="token number">0027</span> 单引号  <span class="token punctuation">(</span>只在 <span class="token builtin">rune</span> 字面值中有效<span class="token punctuation">)</span>
\"   U<span class="token operator">+</span><span class="token number">0022</span> 双引号  <span class="token punctuation">(</span>只在字符串字面值中有效<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>



<p>其他所有以反斜线开头的序列在 rune 的规则中都是非法的。</p>
<pre class="line-numbers language-go" data-language="go"><code class="language-go">rune_lit         <span class="token operator">=</span> <span class="token string">"'"</span> <span class="token punctuation">(</span> unicode_value <span class="token operator">|</span> byte_value <span class="token punctuation">)</span> <span class="token string">"'"</span> <span class="token punctuation">.</span>
unicode_value    <span class="token operator">=</span> unicode_char <span class="token operator">|</span> little_u_value <span class="token operator">|</span> big_u_value <span class="token operator">|</span> escaped_char <span class="token punctuation">.</span>
byte_value       <span class="token operator">=</span> octal_byte_value <span class="token operator">|</span> hex_byte_value <span class="token punctuation">.</span>
octal_byte_value <span class="token operator">=</span> <span class="token string">`\`</span> octal_digit octal_digit octal_digit <span class="token punctuation">.</span>
hex_byte_value   <span class="token operator">=</span> <span class="token string">`\`</span> <span class="token string">"x"</span> hex_digit hex_digit <span class="token punctuation">.</span>
little_u_value   <span class="token operator">=</span> <span class="token string">`\`</span> <span class="token string">"u"</span> hex_digit hex_digit hex_digit hex_digit <span class="token punctuation">.</span>
big_u_value      <span class="token operator">=</span> <span class="token string">`\`</span> <span class="token string">"U"</span> hex_digit hex_digit hex_digit hex_digit
                           hex_digit hex_digit hex_digit hex_digit <span class="token punctuation">.</span>
escaped_char     <span class="token operator">=</span> <span class="token string">`\`</span> <span class="token punctuation">(</span> <span class="token string">"a"</span> <span class="token operator">|</span> <span class="token string">"b"</span> <span class="token operator">|</span> <span class="token string">"f"</span> <span class="token operator">|</span> <span class="token string">"n"</span> <span class="token operator">|</span> <span class="token string">"r"</span> <span class="token operator">|</span> <span class="token string">"t"</span> <span class="token operator">|</span> <span class="token string">"v"</span> <span class="token operator">|</span> <span class="token string">`\`</span> <span class="token operator">|</span> <span class="token string">"'"</span> <span class="token operator">|</span> <span class="token string">`"`</span> <span class="token punctuation">)</span> <span class="token punctuation">.</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>



<pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token char">'a'</span>
<span class="token char">'ä'</span>
<span class="token char">'本'</span>
<span class="token char">'\t'</span>
<span class="token char">'\000'</span>
<span class="token char">'\007'</span>
<span class="token char">'\377'</span>
<span class="token char">'\x07'</span>
<span class="token char">'\xff'</span>
<span class="token char">'\u12e4'</span>
<span class="token char">'\U00101234'</span>
<span class="token char">'\''</span>         <span class="token comment">// 包含单引号的 rune 字面值</span>
<span class="token char">'aa'</span>         <span class="token comment">// 无效: 太多字符</span>
<span class="token char">'\xa'</span>        <span class="token comment">// 无效: 缺少十六进制数</span>
<span class="token char">'\0'</span>         <span class="token comment">// 无效: 缺少八进制数</span>
<span class="token char">'\uDFFF'</span>     <span class="token comment">// 无效: surrogate half</span>
<span class="token char">'\U00110000'</span> <span class="token comment">// 无效: 非法的 Unicode 代码点</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>



<h4 id="字符串字面量"><a href="#字符串字面量" class="headerlink" title="字符串字面量"></a>字符串字面量</h4><p>字符串字面量表示从字符序列中获取的字符串常量。它有两种格式：原始字符串字面量和解释型字符串字面量。</p>
<p>原始字符串是由反引号包裹（<code>foo</code>）。字符串中除反引号以外的其他字符都会显示出来。原生字符串由反引号之间的（默认 UTF-8 编码）的字符组成。它的值为引号内未经解释（默认 UTF-8 编码）所有字符；尤其是，反斜线再字符串中没有特殊意义并且字符串中保留换行符。在原始字符串的值中会丢弃回车键返回 ‘\r’ 字符。</p>
<p>解释型字符串由双引号之间的字符组成（”bar”）。除了换行符和双引号其他字符都会显示出来。双引号之间的文本组成字面量的值。反斜线的转义规则与 rune 字面量基本相同（不同的是 \’ 非法，而 &quot; 合法）。三位八进制数（\nnn）和两位十六进制数（\xnn）换码符的值表示相应字符串的字节。其他的换码符都表示字符各自的 UTF-8 编码（可能是多字节）。因此字符串 \377 和 \xFF 都表示值为 0xFF&#x3D;255 的单个字节，而  <code>ÿ</code>, <code>\u00FF</code>, <code>\U000000FF</code> 和 <code>\xc3\xbf</code> 表示 UTF-8 编码字符 U+00FF 的两个字节 0xc3 0xbf。</p>
<pre class="line-numbers language-go" data-language="go"><code class="language-go">string_lit             <span class="token operator">=</span> raw_string_lit <span class="token operator">|</span> interpreted_string_lit <span class="token punctuation">.</span>
raw_string_lit         <span class="token operator">=</span> <span class="token string">"`"</span> <span class="token punctuation">&#123;</span> unicode_char <span class="token operator">|</span> newline <span class="token punctuation">&#125;</span> <span class="token string">"`"</span> <span class="token punctuation">.</span>
interpreted_string_lit <span class="token operator">=</span> `<span class="token string">"` &#123; unicode_value | byte_value &#125; `"</span>` <span class="token punctuation">.</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>



<pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token string">`abc`</span>                <span class="token comment">// 等价于 "abc"</span>
<span class="token string">`\n
\n`</span>                  <span class="token comment">// 等价于 "\\n\n\\n"</span>
<span class="token string">"\n"</span>
<span class="token string">"\""</span>                 <span class="token comment">// 等价于 `"`</span>
<span class="token string">"Hello, world!\n"</span>
<span class="token string">"日本語"</span>
<span class="token string">"\u65e5本\U00008a9e"</span>
<span class="token string">"\xff\u00FF"</span>
<span class="token string">"\uD800"</span>             <span class="token comment">// 无效: surrogate half</span>
<span class="token string">"\U00110000"</span>         <span class="token comment">// 无效: 无效的 Unicode 代码点</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>



<p>这些例子都表示相同的字符串：</p>
<pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token string">"日本語"</span>                                 <span class="token comment">// UTF-8 文本</span>
<span class="token string">`日本語`</span>                                 <span class="token comment">// UTF-8 文本作为原生字面值</span>
<span class="token string">"\u65e5\u672c\u8a9e"</span>                    <span class="token comment">// 确定的 Unicode 代码点 </span>
<span class="token string">"\U000065e5\U0000672c\U00008a9e"</span>        <span class="token comment">// 确定的 Unicode 代码点</span>
<span class="token string">"\xe6\x97\xa5\xe6\x9c\xac\xe8\xaa\x9e"</span>  <span class="token comment">// 确定的 UTF-8 字节</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>



<p>如果源代码中使用两个代码点表示一个字符，例如带音标的字母，把它放在 rune 中会报错（它不是单代码点）。并且在字符串中会显示两个代码点。</p>
<h2 id="常量"><a href="#常量" class="headerlink" title="常量"></a>常量</h2><p>常量分为：布尔型，rune型，整型，浮点型，复数型，字符串型。其中 rune，整型，浮点型，复数型统称为数字常量。</p>
<p>常量的值可以表示为一个 rune字面量，整数字面量，浮点数字面量，虚数字面量，字符串字面量，表示常量的标识符，常量表达式，一个转换结果为常量的类型转换，和一些返回值为常量的内置函数(接受任何值的<code>unsafe.Sizeof</code>，接受部分表达式的<code>cap</code> 或 <code>len</code>，接受虚数常量的<code>real</code> 和 <code>imag</code>，接受数字常量的 <code>complex</code>)。布尔类型的值为预定义常量 <code>true</code> 或 <code>false</code>，预定义的标识符 <code>iota</code> 表示一个整型常量。</p>
<p>一般情况下复数常量是常量表达式的一种形式。会在常量表达式章节详细讨论。</p>
<p>数字常量可以表示任意精度的确定值而且不会溢出。因此，没有常量可以表示非 0，无穷大和非数字值。</p>
<p>常量可以指定类型也可以不指定类型。字面值常量，<code>true</code>，<code>false</code>，<code>iota</code>，和只包含无类型常量操作的常量表达式是无类型的。</p>
<p>常量可以通过常量声明和转换时显式的指定具体类型，也可以隐式的在变量声明、赋值或作为表达式操作元时隐式的指定具体类型。如果常量的值和他的类型不匹配，会报错。</p>
<p>无类型常量由一个默认的类型，这个类型会根据使用常量时的上下文进行隐式转换。例如：短变量声明 <code>i := 0</code> 没有指定 i 的类型。无类型常量的默认类型可以是：<code>bool</code>，<code>rune</code>，<code>int</code>，<code>float64</code>，<code>complex128</code> 或者 <code>string</code>，具体选择哪种类型由常量的值决定。</p>
<p>实现限制：虽然数字常量在 Go 中是任意精度，不过编译器在实现时会在内部限制精度。这意味着每个编译器实现都要：</p>
<ul>
<li><p>至少保证整形常量有 256 位</p>
</li>
<li><p>浮点数常量（包括复数常量）都要保证至少 256 位的主体部分和至少 16 位的有符号指数部分</p>
</li>
<li><p>如果不能表示给定整数的精度抛出错误</p>
</li>
<li><p>如果浮点数或复数溢出抛出错误</p>
</li>
<li><p>如果由于精度限制不能表示浮点数或者复数进行舍入</p>
</li>
</ul>
<p>这些要求同时作用于字面量常量额和常量表达式的结果。</p>
<h2 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h2><p>变量是一个用来储存值的位置。根据不同的变量类型，可以保存不同的值。</p>
<p>变量声明，函数参数和返回值，声明的函数签名，函数字面值都会为命名变量预留储存空间。调用内置的  <code>new</code>  函数或获取复合字面值的地址都会在运行时为变量分配存储空间。这种匿名变量是通过（可能是隐式的）指针间接引用的。</p>
<p>像数组，切片和结构体类型的变量，它们内部都包含很多元素或字段，而且这些元素和字段都可以直接被访问。数组和切片中的每个元素的行为和单独的变量基本相同。</p>
<p>变量的静态类型可以通过变量声明、提供给 <code>new</code> 的类型、复合字面值、结构体变量声明的元素类型以上几种方式确定。通过new或者类型初始化。接口类型的变量也有一个明确的动态类型，这个动态类型是在运行时赋值给变量的具体值类型（特例：预声明的 nil 是无类型的）。动态类型在程序的执行过程中可能并不相同，但是接口变量的值是可以分配给相同静态类型的变量。</p>
<pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">var</span> x <span class="token keyword">interface</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span>  <span class="token comment">// x 的静态类型为 interface&#123;&#125; 值为 nil</span>
<span class="token keyword">var</span> v <span class="token operator">*</span>T           <span class="token comment">// v 的静态类型为 *T 值为 nil</span>
x <span class="token operator">=</span> <span class="token number">42</span>             <span class="token comment">// x 的动态类型为 int 值为 42</span>
x <span class="token operator">=</span> v              <span class="token comment">// x 动态类型为 *T 值为 (*T)(nil)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>



<p>在表达式中使用变量可以取出变量的值；这个值就是变量最近一次被赋予的值。如果没有对变量赋过值，那么他的值是该类型的零值。</p>
<h2 id="类型"><a href="#类型" class="headerlink" title="类型"></a>类型</h2><p>类型是一个集合，集合包括值和针对值的操作&amp;方法。一个类型可以使用类型名来表示。类型有多种表现形式：如果存在类型名，可以使用类型名表示，或者也可以使用根据已有类型组合成的类型字面值。</p>
<pre class="line-numbers language-go" data-language="go"><code class="language-go">Type      <span class="token operator">=</span> TypeName <span class="token operator">|</span> TypeLit <span class="token operator">|</span> <span class="token string">"("</span> Type <span class="token string">")"</span> <span class="token punctuation">.</span>
TypeName  <span class="token operator">=</span> identifier <span class="token operator">|</span> QualifiedIdent <span class="token punctuation">.</span>
TypeLit   <span class="token operator">=</span> ArrayType <span class="token operator">|</span> StructType <span class="token operator">|</span> PointerType <span class="token operator">|</span> FunctionType <span class="token operator">|</span> InterfaceType <span class="token operator">|</span>
	    SliceType <span class="token operator">|</span> MapType <span class="token operator">|</span> ChannelType <span class="token punctuation">.</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>



<p>Go 已经预先声明了某些类型的名称。并引入了类型声明。复合类型（数组、结构体、指针、函数、接口、切片、map、channel）可以使用他们的类型字面值。</p>
<p>每个类型T都有一个底层类型。如果T是预定义类型或者类型字面值。那么底层类型就是他自身。否则，T的底层类型就是它再类型声明时引用到的类型。</p>
<pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">type</span> <span class="token punctuation">(</span>
	A1 <span class="token operator">=</span> <span class="token builtin">string</span>
	A2 <span class="token operator">=</span> A1
<span class="token punctuation">)</span>

<span class="token keyword">type</span> <span class="token punctuation">(</span>
	B1 <span class="token builtin">string</span>
	B2 B1
	B3 <span class="token punctuation">[</span><span class="token punctuation">]</span>B1
	B4 B3
<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>



<p><code>string</code>，<code>A1</code>，<code>A2</code>，<code>B1</code>，<code>B2</code> 的底层类型是 <code>string</code>。<code>[]B1</code>，<code>B3</code>，<code>B4</code> 的下游类型是[]B1。</p>
<h4 id="方法集"><a href="#方法集" class="headerlink" title="方法集"></a>方法集</h4><p>类型可能会有一个与之关联的方法集。接口类型的方法集就可以使用自身表示。对于其他类型，类型 T 的方法集由所有接收者类型为 T 的方法组成。而对应指针类型 *T 的方法集由所有接收者类型为 T 或 *T 的方法组成。如果是结构体类型且含有嵌入字段，那么方法集中可能还会包含更多的方法，具体请看结构体类型章节。其他类型的方法集都为空。方法集中的每个方法都有唯一且不为空的方法名。</p>
<p>类型的方法集用来确定类型实现的接口和以类型作为接收者能够调用的方法。</p>
<h4 id="布尔类型"><a href="#布尔类型" class="headerlink" title="布尔类型"></a>布尔类型</h4><p>布尔类型表示预定义常量 <code>true</code> 和 <code>false</code> 表示布尔真实值的集合。预定义的布尔类型为 <code>bool</code>；它是通过类型声明创建的。</p>
<h4 id="数字类型"><a href="#数字类型" class="headerlink" title="数字类型"></a>数字类型</h4><p>一个数字类型相当于整型和浮点型的所有值的集合。预定义的数字类型包括：</p>
<pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token builtin">uint8</span>       <span class="token number">8</span> 位无符号整数集合 <span class="token punctuation">(</span><span class="token number">0</span> to <span class="token number">255</span><span class="token punctuation">)</span>
<span class="token builtin">uint16</span>      <span class="token number">16</span> 位无符号整数集合 <span class="token punctuation">(</span><span class="token number">0</span> to <span class="token number">65535</span><span class="token punctuation">)</span>
<span class="token builtin">uint32</span>      <span class="token number">32</span> 位无符号整数集合 <span class="token punctuation">(</span><span class="token number">0</span> to <span class="token number">4294967295</span><span class="token punctuation">)</span>
<span class="token builtin">uint64</span>      <span class="token number">64</span> 位无符号整数集合 <span class="token punctuation">(</span><span class="token number">0</span> to <span class="token number">18446744073709551615</span><span class="token punctuation">)</span>

<span class="token builtin">int8</span>        <span class="token number">8</span> 位有符号整数集合 <span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">128</span> to <span class="token number">127</span><span class="token punctuation">)</span>
<span class="token builtin">int16</span>       <span class="token number">16</span> 位有符号整数集合 <span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">32768</span> to <span class="token number">32767</span><span class="token punctuation">)</span>
<span class="token builtin">int32</span>       <span class="token number">32</span> 位有符号整数集合 <span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">2147483648</span> to <span class="token number">2147483647</span><span class="token punctuation">)</span>
<span class="token builtin">int64</span>       <span class="token number">64</span> 位有符号整数集合 <span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">9223372036854775808</span> to <span class="token number">9223372036854775807</span><span class="token punctuation">)</span>

<span class="token builtin">float32</span>     IEEE<span class="token operator">-</span><span class="token number">754</span> <span class="token number">32</span> 位浮点数集合
<span class="token builtin">float64</span>     IEEE<span class="token operator">-</span><span class="token number">754</span> <span class="token number">64</span> 位浮点数集合

<span class="token builtin">complex64</span>   实部虚部都为 <span class="token builtin">float32</span> 的复数集合
<span class="token builtin">complex128</span>  实部虚部都为 <span class="token builtin">float64</span> 的复数集合

<span class="token builtin">byte</span>        <span class="token builtin">uint8</span> 的别名
<span class="token builtin">rune</span>        <span class="token builtin">int32</span> 的别名<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>



<p>n 位整数的值具有 n 比特的宽度并用补码表示。</p>
<p>以下几种预定义类型由具体平台实现指定长度：</p>
<pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token builtin">uint</span>     <span class="token number">32</span> 或 <span class="token number">64</span> 位
<span class="token builtin">int</span>      和 <span class="token builtin">uint</span> 位数相同
<span class="token builtin">uintptr</span>  能够容纳指针值的无符号整数<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>



<p>为了避免移植性问题，除了被 uint8 的别名 byte 和 int32 的别名 rune，其他所有的数字类型都是通过类型声明定义。当在表达式中使用不同的数字类型需要进行类型转换。例如：int32 和 int 不是相同的类型，即使他们在指定的平台上是相等的。</p>
<h4 id="字符串类型"><a href="#字符串类型" class="headerlink" title="字符串类型"></a>字符串类型</h4><p>字符串类型表示字符串的值类型。字符串的值是一个字节序列（有可能为空）。字符串一旦创建就无法修改它的值。预定义的字符串类型是 <code>string</code>，它是通过类型声明定义的。</p>
<p>可以使用内置函数 <code>len</code> 获取字符串长度。如果字符串是常量那么它的长度在编译时也为常量。可以通过数字下标 0～len(s)-1 访问字符串字节。获取字符串的地址是非法操作；如果 <code>s[i]</code> 是字符串的第 i 个字节，那么 <code>&amp;s[i]</code> 是无效的。</p>
<h4 id="数组类型"><a href="#数组类型" class="headerlink" title="数组类型"></a>数组类型</h4><p>数组是一定数量的单一类型元素序列，而这个单一类型叫做元素类型。元素的个数表示元素的长度，它永远不是负数。</p>
<pre class="line-numbers language-go" data-language="go"><code class="language-go">ArrayType   <span class="token operator">=</span> <span class="token string">"["</span> ArrayLength <span class="token string">"]"</span> ElementType <span class="token punctuation">.</span>
ArrayLength <span class="token operator">=</span> Expression <span class="token punctuation">.</span>
ElementType <span class="token operator">=</span> Type <span class="token punctuation">.</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>



<p>长度是数组类型的一部分；它是一个类型为 int 的非负常量。可以用内置函数 <code>len</code> 获取数组的长度。元素可以通过下标 <code>0～len(a)-1</code> 访问。数组一般都是一维的，不过也可以是多维的。</p>
<pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token punctuation">[</span><span class="token number">32</span><span class="token punctuation">]</span><span class="token builtin">byte</span>
<span class="token punctuation">[</span><span class="token number">2</span><span class="token operator">*</span>N<span class="token punctuation">]</span> <span class="token keyword">struct</span> <span class="token punctuation">&#123;</span> x<span class="token punctuation">,</span> y <span class="token builtin">int32</span> <span class="token punctuation">&#125;</span>
<span class="token punctuation">[</span><span class="token number">1000</span><span class="token punctuation">]</span><span class="token operator">*</span><span class="token builtin">float64</span>
<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token builtin">int</span>
<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token builtin">float64</span>  <span class="token comment">// same as [2]([2]([2]float64))</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>



<h4 id="切片类型"><a href="#切片类型" class="headerlink" title="切片类型"></a>切片类型</h4><p>切片描述了底层数组的一个连续片段并提供对连续片段内元素的访问。切片类型表示元素类型的数组的所有切片的集合。没有被初始化的切片用 nil 表示。</p>
<pre class="line-numbers language-go" data-language="go"><code class="language-go">SliceType <span class="token operator">=</span> <span class="token string">"["</span> <span class="token string">"]"</span> ElementType <span class="token punctuation">.</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>



<p>与数组一样，切片的可以使用索引访问并且有长度，切片的长度可以通过内置的 <code>len</code> 函数获取；与数组不同的是它的长度在运行时是可以变化的。我们可以通过下标 <code>0～len(s)-1</code> 来访问切片内的元素。切片的索引可能会小于相同元素再底层数组的索引。</p>
<p>切片一旦初始化，那么就有一个与之对应的底层数组保存切片中的元素。切片和底层的数组还有其他指向该数组的切片共享相同的储存空间；而不同的数组总是有着不同的存储空间。</p>
<p>切片的底层数组可能会延伸到切片末尾以外，切片的容积等于切片现在的长度加上数组中切片还没使用的长度；可以从原始切片中切出一个长度与容量相等的切片。切片的容量可以通过内置的 <code>cap(a)</code> 函数来获取。可以通过函数<code>make</code>来创建一个T类型的新切片。</p>
<p>使用内置函数 <code>make</code> 可以出实话给定元素类型 T 的切片。<code>make</code> 函数接收三个参数：切片类型、切片长度、切片容积，其中切片容积是可选参数。<code>make</code> 创建的切片会在底层分配一个切片所引用的新数组。</p>
<pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token function">make</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span>T<span class="token punctuation">,</span> length<span class="token punctuation">,</span> capacity<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>



<p><code>make</code> 的作用就是创建新数组并切分它，所以下面两种写法是等价的：</p>
<pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token function">make</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">int</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span>
<span class="token function">new</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">100</span><span class="token punctuation">]</span><span class="token builtin">int</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">:</span><span class="token number">50</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>



<p>与数组相同，切片一般是一维的，不过也可以复合成多维。数组中的数组都必须是相同的长度，但是切片中的切片长度是动态变化的，不过切片中的切片需要单独初始化。</p>
<h4 id="结构体类型"><a href="#结构体类型" class="headerlink" title="结构体类型"></a>结构体类型</h4><p>结构体是一个命名元素序列，命名元素也叫做字段，每个字段都对应一个名称和类型，字段的名字可以是显式指定的（标识符列表）也可以是隐式的（嵌入字段）。在结构体中非空字段具有唯一性。</p>
<pre class="line-numbers language-go" data-language="go"><code class="language-go">StructType    <span class="token operator">=</span> <span class="token string">"struct"</span> <span class="token string">"&#123;"</span> <span class="token punctuation">&#123;</span> FieldDecl <span class="token string">";"</span> <span class="token punctuation">&#125;</span> <span class="token string">"&#125;"</span> <span class="token punctuation">.</span>
FieldDecl     <span class="token operator">=</span> <span class="token punctuation">(</span>IdentifierList Type <span class="token operator">|</span> EmbeddedField<span class="token punctuation">)</span> <span class="token punctuation">[</span> Tag <span class="token punctuation">]</span> <span class="token punctuation">.</span>
EmbeddedField <span class="token operator">=</span> <span class="token punctuation">[</span> <span class="token string">"*"</span> <span class="token punctuation">]</span> TypeName <span class="token punctuation">.</span>
Tag           <span class="token operator">=</span> string_lit <span class="token punctuation">.</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>



<pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token comment">// 空结构体.</span>
<span class="token keyword">struct</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span>

<span class="token comment">// 6个字段的结构体.</span>
<span class="token keyword">struct</span> <span class="token punctuation">&#123;</span>
	x<span class="token punctuation">,</span> y <span class="token builtin">int</span>
	u <span class="token builtin">float32</span>
	<span class="token boolean">_</span> <span class="token builtin">float32</span>  <span class="token comment">// padding</span>
	A <span class="token operator">*</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">int</span>
	F <span class="token keyword">func</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>



<p>一个指定了类型而没有指定名称的字段叫做嵌入字段，嵌入字段必须指定类型名 T 或指向非接口类型的指针类型 *T，其中 T 不能为指针类型。或者一个非接口类型的指针。并且T本身不能为指针类型。这种情况下会把类型名作为字段的名字。</p>
<pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token comment">// 一个包含 4 个嵌入字段 T1, *T2, P.T3 和 *P.T4 的结构体</span>
<span class="token keyword">struct</span> <span class="token punctuation">&#123;</span>
	T1        <span class="token comment">// 字段名为 T1</span>
	<span class="token operator">*</span>T2       <span class="token comment">// 字段名为 T2</span>
	P<span class="token punctuation">.</span>T3      <span class="token comment">// 字段名为 T3</span>
	<span class="token operator">*</span>P<span class="token punctuation">.</span>T4     <span class="token comment">// 字段名为 T4</span>
	x<span class="token punctuation">,</span> y <span class="token builtin">int</span>  <span class="token comment">// 字段名为 x 和 y</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>



<p>以下声明是错误的因为字段名称必须唯一。</p>
<pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">struct</span> <span class="token punctuation">&#123;</span>
	T     <span class="token comment">// 嵌入字段 *T 与 *P.T 冲突</span>
	<span class="token operator">*</span>T    <span class="token comment">// 嵌入字段 T 与 *P.T 冲突</span>
	<span class="token operator">*</span>P<span class="token punctuation">.</span>T  <span class="token comment">// 嵌入字段 T 与 *T 冲突</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>



<p>如果 <code>x.f</code> 是表示该字段或方法 <code>f</code> 的合法选择器，则会调用结构 <code>x</code> 中嵌入字段的字段或方法 <code>f</code>。</p>
<p>从嵌入字段组合来的字段与结构体原来的字段行为基本相同，只是不能在结构体的复合字面值中直接使用。</p>
<p>给定一个结构体 S 和一个类型 T，依据以下规则生成组合后的方法集：</p>
<ul>
<li>如果 S 包含嵌入字段 T，则 S 和 *S 的方法集包括接收者为 T 的方法集，而 *S 包括 接收者为 *T 的方法集。</li>
<li>如果 S 包含字段 <em>T。那么S和</em>S均包含接收者为 T 和 *T 的所有方法集。</li>
</ul>
<p>声明字段时可以给该字段添加一个字符串的 tag。这个 tag 将会成为它所对应字段的一个属性。空 tag 和缺省 tag 是相同的。tag 的值可以通过反射的接口获取，可以作为类型结构体的类型定义的一部分，也可以忽略。</p>
<pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">struct</span> <span class="token punctuation">&#123;</span>
	x<span class="token punctuation">,</span> y <span class="token builtin">float64</span> <span class="token string">""</span>  <span class="token comment">// 空 tag 和缺省 tag 相同</span>
	name <span class="token builtin">string</span>  <span class="token string">"any string is permitted as a tag"</span>
	<span class="token boolean">_</span>    <span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token builtin">byte</span> <span class="token string">"ceci n'est pas un champ de structure"</span>
<span class="token punctuation">&#125;</span>

<span class="token comment">// 结构体对应一个 TimeStamp 的 protocol buffer.</span>
<span class="token comment">// tag 字符串中定义了 protocol buffer 字段对应的数字;</span>
<span class="token comment">// 一般使用 reflect 包读取他们.</span>
<span class="token keyword">struct</span> <span class="token punctuation">&#123;</span>
	microsec  <span class="token builtin">uint64</span> <span class="token string">`protobuf:"1"`</span>
	serverIP6 <span class="token builtin">uint64</span> <span class="token string">`protobuf:"2"`</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>



<h4 id="指针类型"><a href="#指针类型" class="headerlink" title="指针类型"></a>指针类型</h4><p>指针类型表示所有指向给定类型变量的指针集合。这个指定的类型叫做指针的基础类型。没有初始化的指针值为nil。</p>
<pre class="line-numbers language-go" data-language="go"><code class="language-go">PointerType <span class="token operator">=</span> <span class="token string">"*"</span> BaseType <span class="token punctuation">.</span>
BaseType    <span class="token operator">=</span> Type <span class="token punctuation">.</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>



<pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token operator">*</span>Point
<span class="token operator">*</span><span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token builtin">int</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>



<h4 id="函数类型"><a href="#函数类型" class="headerlink" title="函数类型"></a>函数类型</h4><p>函数类型可以表示所有具有相同参数类型和返回值类型的函数。未初始化的函数类型值为 nil。</p>
<pre class="line-numbers language-go" data-language="go"><code class="language-go">FunctionType   <span class="token operator">=</span> <span class="token string">"func"</span> Signature <span class="token punctuation">.</span>
Signature      <span class="token operator">=</span> Parameters <span class="token punctuation">[</span> Result <span class="token punctuation">]</span> <span class="token punctuation">.</span>
Result         <span class="token operator">=</span> Parameters <span class="token operator">|</span> Type <span class="token punctuation">.</span>
Parameters     <span class="token operator">=</span> <span class="token string">"("</span> <span class="token punctuation">[</span> ParameterList <span class="token punctuation">[</span> <span class="token string">","</span> <span class="token punctuation">]</span> <span class="token punctuation">]</span> <span class="token string">")"</span> <span class="token punctuation">.</span>
ParameterList  <span class="token operator">=</span> ParameterDecl <span class="token punctuation">&#123;</span> <span class="token string">","</span> ParameterDecl <span class="token punctuation">&#125;</span> <span class="token punctuation">.</span>
ParameterDecl  <span class="token operator">=</span> <span class="token punctuation">[</span> IdentifierList <span class="token punctuation">]</span> <span class="token punctuation">[</span> <span class="token string">"..."</span> <span class="token punctuation">]</span> Type <span class="token punctuation">.</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>



<p>在参数和返回值列表中，标识符列表必须同时存在或缺省。如果存在，那么每个名字都表示指定类型的一个参数&#x2F;返回值，这些标识符必须非空并且不能重复。如果缺省，指定类型的参数&#x2F;返回值使用对应的类型表示。参数列表和返回值列表一般都是需要加括号，不过在只有一个缺省返回值时，它可以不使用括号。</p>
<p>函数的最后一个参数可以添加前缀 <code>...</code>。包含这种参数的函数叫做变参函数，它可以接收零个或多个参数。</p>
<pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">func</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">func</span><span class="token punctuation">(</span>x <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token builtin">int</span>
<span class="token keyword">func</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> <span class="token boolean">_</span> <span class="token builtin">int</span><span class="token punctuation">,</span> z <span class="token builtin">float32</span><span class="token punctuation">)</span> <span class="token builtin">bool</span>
<span class="token keyword">func</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b <span class="token builtin">int</span><span class="token punctuation">,</span> z <span class="token builtin">float32</span><span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token builtin">bool</span><span class="token punctuation">)</span>
<span class="token keyword">func</span><span class="token punctuation">(</span>prefix <span class="token builtin">string</span><span class="token punctuation">,</span> values <span class="token operator">...</span><span class="token builtin">int</span><span class="token punctuation">)</span>
<span class="token keyword">func</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b <span class="token builtin">int</span><span class="token punctuation">,</span> z <span class="token builtin">float64</span><span class="token punctuation">,</span> opt <span class="token operator">...</span><span class="token keyword">interface</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>success <span class="token builtin">bool</span><span class="token punctuation">)</span>
<span class="token keyword">func</span><span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">,</span> <span class="token builtin">int</span><span class="token punctuation">,</span> <span class="token builtin">float64</span><span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token builtin">float64</span><span class="token punctuation">,</span> <span class="token operator">*</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">int</span><span class="token punctuation">)</span>
<span class="token keyword">func</span><span class="token punctuation">(</span>n <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token keyword">func</span><span class="token punctuation">(</span>p <span class="token operator">*</span>T<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>



<h4 id="接口类型"><a href="#接口类型" class="headerlink" title="接口类型"></a>接口类型</h4><p>接口类型指定了一个方法集。一个接口类型变量可以保存任何方法集是该接口超集的类型。我们可以认为类型实现了接口。没有初始化的接口类型值为 nil。</p>
<pre class="line-numbers language-go" data-language="go"><code class="language-go">InterfaceType      <span class="token operator">=</span> <span class="token string">"interface"</span> <span class="token string">"&#123;"</span> <span class="token punctuation">&#123;</span> MethodSpec <span class="token string">";"</span> <span class="token punctuation">&#125;</span> <span class="token string">"&#125;"</span> <span class="token punctuation">.</span>
MethodSpec         <span class="token operator">=</span> MethodName Signature <span class="token operator">|</span> InterfaceTypeName <span class="token punctuation">.</span>
MethodName         <span class="token operator">=</span> identifier <span class="token punctuation">.</span>
InterfaceTypeName  <span class="token operator">=</span> TypeName <span class="token punctuation">.</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>



<p>在接口类型的方法集中，每个方法的名称必须是非空且唯一。</p>
<pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token comment">// A simple File interface</span>
<span class="token keyword">interface</span> <span class="token punctuation">&#123;</span>
	<span class="token function">Read</span><span class="token punctuation">(</span>b Buffer<span class="token punctuation">)</span> <span class="token builtin">bool</span>
	<span class="token function">Write</span><span class="token punctuation">(</span>b Buffer<span class="token punctuation">)</span> <span class="token builtin">bool</span>
	<span class="token function">Close</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>



<p>接口可以由多个类型实现，例如：类型 <code>S1</code> 和类型 <code>S2</code> 都有以下方法集：</p>
<pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">func</span> <span class="token punctuation">(</span>p T<span class="token punctuation">)</span> <span class="token function">Read</span><span class="token punctuation">(</span>b Buffer<span class="token punctuation">)</span> <span class="token builtin">bool</span> <span class="token punctuation">&#123;</span> <span class="token keyword">return</span> … <span class="token punctuation">&#125;</span>
<span class="token keyword">func</span> <span class="token punctuation">(</span>p T<span class="token punctuation">)</span> <span class="token function">Write</span><span class="token punctuation">(</span>b Buffer<span class="token punctuation">)</span> <span class="token builtin">bool</span> <span class="token punctuation">&#123;</span> <span class="token keyword">return</span> … <span class="token punctuation">&#125;</span>
<span class="token keyword">func</span> <span class="token punctuation">(</span>p T<span class="token punctuation">)</span> <span class="token function">Close</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> … <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>



<p>（这里的类型 T 可以表示 <code>S1</code> 也可以表示 <code>S2</code> ） <code>S1</code> 和 <code>S2</code> 都实现了接口 <code>File</code>，而不用管类型是否还有其他方法。</p>
<p>一个类型实现了任何方法集的为其子集的接口。因此它可能实现了多个不同接口。例如：所有的类型都实现了空接口：</p>
<pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">interface</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>



<p>与之相似，思考下面这个定义为 <code>Locker</code> 的接口：</p>
<pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">type</span> Locker <span class="token keyword">interface</span> <span class="token punctuation">&#123;</span>
	<span class="token function">Lock</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
	<span class="token function">Unlock</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>



<p>如果 <code>S1</code> 和 <code>S2</code> 也实现了它：</p>
<pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">func</span> <span class="token punctuation">(</span>p T<span class="token punctuation">)</span> <span class="token function">Lock</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> … <span class="token punctuation">&#125;</span>
<span class="token keyword">func</span> <span class="token punctuation">(</span>p T<span class="token punctuation">)</span> <span class="token function">Unlock</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> … <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>



<p>那它们就实现了两个接口 <code>Locker</code> 和 <code>File</code>。</p>
<p>一个接口 T 可以使用另一个接口 E 来指定方法。这种方式叫做将接口 E 嵌入进接口 T。它把 E 中所有的方法（包括导出和未导出的方法）全部添加进接口 T。</p>
<pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">type</span> ReadWriter <span class="token keyword">interface</span> <span class="token punctuation">&#123;</span>
	<span class="token function">Read</span><span class="token punctuation">(</span>b Buffer<span class="token punctuation">)</span> <span class="token builtin">bool</span>
	<span class="token function">Write</span><span class="token punctuation">(</span>b Buffer<span class="token punctuation">)</span> <span class="token builtin">bool</span>
<span class="token punctuation">&#125;</span>

<span class="token keyword">type</span> File <span class="token keyword">interface</span> <span class="token punctuation">&#123;</span>
	ReadWriter  <span class="token comment">// 与添加 ReadWriter 接口中的方法是等价的</span>
	Locker      <span class="token comment">// 与添加 Locker 接口中的方法是等价的 </span>
	<span class="token function">Close</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">&#125;</span>

<span class="token keyword">type</span> LockedFile <span class="token keyword">interface</span> <span class="token punctuation">&#123;</span>
	Locker
	File        <span class="token comment">// 无效: Lock, Unlock 不是唯一的</span>
	<span class="token function">Lock</span><span class="token punctuation">(</span><span class="token punctuation">)</span>      <span class="token comment">// 无效: Lock 不是唯一的</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>



<p>接口 T 不能递归的嵌入进自己或已经嵌入过它的接口。</p>
<pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token comment">// 无效: Bad 不能嵌入它自己</span>
<span class="token keyword">type</span> Bad <span class="token keyword">interface</span> <span class="token punctuation">&#123;</span>
	Bad
<span class="token punctuation">&#125;</span>

<span class="token comment">// 无效: Bad1 不能嵌入已经引用它的 Bad2</span>
<span class="token keyword">type</span> Bad1 <span class="token keyword">interface</span> <span class="token punctuation">&#123;</span>
	Bad2
<span class="token punctuation">&#125;</span>
<span class="token keyword">type</span> Bad2 <span class="token keyword">interface</span> <span class="token punctuation">&#123;</span>
	Bad1
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>



<h4 id="Map类型"><a href="#Map类型" class="headerlink" title="Map类型"></a>Map类型</h4><p>map 类型是一种以唯一值作为键的无序集合。</p>
<pre class="line-numbers language-go" data-language="go"><code class="language-go">MapType     <span class="token operator">=</span> <span class="token string">"map"</span> <span class="token string">"["</span> KeyType <span class="token string">"]"</span> ElementType <span class="token punctuation">.</span>
KeyType     <span class="token operator">=</span> Type <span class="token punctuation">.</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>



<p>map的键类型必须能使用比较运算符 <code>==</code> 和 <code>!=</code> 进行比较。因此它的键类型不能是函数，map，或者切片。如果键是接口类型，那么比较运算符必须能比较他的动态值。如果不能会抛出一个运行时错误。</p>
<pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">map</span><span class="token punctuation">[</span><span class="token builtin">string</span><span class="token punctuation">]</span><span class="token builtin">int</span>
<span class="token keyword">map</span><span class="token punctuation">[</span><span class="token operator">*</span>T<span class="token punctuation">]</span><span class="token keyword">struct</span><span class="token punctuation">&#123;</span> x<span class="token punctuation">,</span> y <span class="token builtin">float64</span> <span class="token punctuation">&#125;</span>
<span class="token keyword">map</span><span class="token punctuation">[</span><span class="token builtin">string</span><span class="token punctuation">]</span><span class="token keyword">interface</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>



<p>map中元素的个数叫做它的长度。对于一个map <code>m</code>。它的长度可以通过内置函数 <code>len</code> 获得，而且它的长度可能再运行时发生变化。map 可以再运行时添加和取回元素，页可以使用内置函数 <code>delete</code>移除元素。</p>
<p>可以使用内置函数 <code>make</code> 初始化一个新的且为空的 map。它能指定 map 的类型和预留的空间：</p>
<pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token function">make</span><span class="token punctuation">(</span><span class="token keyword">map</span><span class="token punctuation">[</span><span class="token builtin">string</span><span class="token punctuation">]</span><span class="token builtin">int</span><span class="token punctuation">)</span>
<span class="token function">make</span><span class="token punctuation">(</span><span class="token keyword">map</span><span class="token punctuation">[</span><span class="token builtin">string</span><span class="token punctuation">]</span><span class="token builtin">int</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>



<p>map 的预留空间不会固定住 map 的长度；它可以通过添加一定数量的元素来增加自己的长度（nil map 不能添加元素）。nil map 和空 map 是相等的，只是 nil map 不能添加元素。</p>
<h4 id="Channel类型"><a href="#Channel类型" class="headerlink" title="Channel类型"></a>Channel类型</h4><p>channel提供一种手段在并发执行的函数间发送和接收指定类型的值。没有初始化的 channel 是nil。</p>
<pre class="line-numbers language-go" data-language="go"><code class="language-go">ChannelType <span class="token operator">=</span> <span class="token punctuation">(</span> <span class="token string">"chan"</span> <span class="token operator">|</span> <span class="token string">"chan"</span> <span class="token string">"&lt;-"</span> <span class="token operator">|</span> <span class="token string">"&lt;-"</span> <span class="token string">"chan"</span> <span class="token punctuation">)</span> ElementType <span class="token punctuation">.</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>



<p>操作符 <code>&lt;-</code> 可以指定 channel 的数据流动方向。如果没有指定方向，channel 默认是双向的。channel 可以通过转换和赋值来限制只读和只写。</p>
<pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">chan</span> T          <span class="token comment">// 可以接收和发送 T 类型的数据</span>
<span class="token keyword">chan</span><span class="token operator">&lt;-</span> <span class="token builtin">float64</span>  <span class="token comment">// 只能发送 float64 类型的值</span>
<span class="token operator">&lt;-</span><span class="token keyword">chan</span> <span class="token builtin">int</span>      <span class="token comment">// 只能接收</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>



<p><code>&lt;-</code> 与最左侧的 <code>chan</code> 关联：</p>
<pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">chan</span><span class="token operator">&lt;-</span> <span class="token keyword">chan</span> <span class="token builtin">int</span>    <span class="token comment">// 等价于 chan&lt;- (chan int)</span>
<span class="token keyword">chan</span><span class="token operator">&lt;-</span> <span class="token operator">&lt;-</span><span class="token keyword">chan</span> <span class="token builtin">int</span>  <span class="token comment">// 等价于 chan&lt;- (&lt;-chan int)</span>
<span class="token operator">&lt;-</span><span class="token keyword">chan</span> <span class="token operator">&lt;-</span><span class="token keyword">chan</span> <span class="token builtin">int</span>  <span class="token comment">// 等价于 &lt;-chan (&lt;-chan int)</span>
<span class="token keyword">chan</span> <span class="token punctuation">(</span><span class="token operator">&lt;-</span><span class="token keyword">chan</span> <span class="token builtin">int</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>



<p>可以通过内置的 <code>make</code> 函数初始化 channel。<code>make</code> 函数可以指定channel的类型和容量。</p>
<pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token function">make</span><span class="token punctuation">(</span><span class="token keyword">chan</span> <span class="token builtin">int</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>



<p>容量是设置了最大能缓存元素的数量。如果没有设置容量或值为 0，channel 就是没有缓存的，这时只有当发送者和接收者都准备好后才会传输数据。而带缓存的 channel 在缓存没有满的时候依然可以成功发送数据，当缓存不为空的时候可以成功接收到数据，值为 nil 的 channel 不能传输数据。</p>
<p>可以通过内置函数 <code>close</code> 关闭 channel。在接收端的第二个返回值可以用来提示接收者在关闭的 channel 是否还包含数据。</p>
<p>channel 可以在发送语句，接收操作中使用。可以不考虑同步性直接在多个 goroutine 中对 channel 调用内置函数 <code>len</code> 和 <code>cap</code> 。channel 的行为和 FIFO 队列相同。举个例子，一个 goruntine 发送数据，另一个 goruntine 接收他们，接收数据的顺序和发送数据的顺序是相同的。</p>
<h2 id="类型的属性和值"><a href="#类型的属性和值" class="headerlink" title="类型的属性和值"></a>类型的属性和值</h2><h4 id="类型标识"><a href="#类型标识" class="headerlink" title="类型标识"></a>类型标识</h4><p>两个类型可能相同也可能不同。</p>
<p>定义的类型都是不同类型。如果两个类型的底层类型在结构上是相同的，那它们也是相等的。总的来说：</p>
<ul>
<li><p>2 个数组的长度和元素类型相同，那么它们就是相同类型。</p>
</li>
<li><p>如果两个切片的元素类型相同那么它们就是相同类型。</p>
</li>
<li><p>如果两个结构体字段顺序相同，并且字段名称、字段类型和 tag 都相同那么它们就是相等的。非导出字段的字段名在不同的包中总是不同的。</p>
</li>
<li><p>如果两个指针的基础类型相同那么他们具有相同类型。</p>
</li>
<li><p>如果两个函数具有相同的参数和返回值列表，并且他们的类型相同那么他们就是相同的，参数的名称不一定要相同。</p>
</li>
<li><p>如果两个接口的方法集完全相同（方法的顺序）。</p>
</li>
<li><p>如果两个 map 类型的键类型和值类型相同那它们就是相等的。</p>
</li>
<li><p>如果两个 channel 类型包含的对象类型和 channel 的方向都是相同的那它们就是相同的。</p>
</li>
</ul>
<p>给出下列声明：</p>
<pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">type</span> <span class="token punctuation">(</span>
	A0 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">string</span>
	A1 <span class="token operator">=</span> A0
	A2 <span class="token operator">=</span> <span class="token keyword">struct</span><span class="token punctuation">&#123;</span> a<span class="token punctuation">,</span> b <span class="token builtin">int</span> <span class="token punctuation">&#125;</span>
	A3 <span class="token operator">=</span> <span class="token builtin">int</span>
	A4 <span class="token operator">=</span> <span class="token keyword">func</span><span class="token punctuation">(</span>A3<span class="token punctuation">,</span> <span class="token builtin">float64</span><span class="token punctuation">)</span> <span class="token operator">*</span>A0
	A5 <span class="token operator">=</span> <span class="token keyword">func</span><span class="token punctuation">(</span>x <span class="token builtin">int</span><span class="token punctuation">,</span> <span class="token boolean">_</span> <span class="token builtin">float64</span><span class="token punctuation">)</span> <span class="token operator">*</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">string</span>
<span class="token punctuation">)</span>

<span class="token keyword">type</span> <span class="token punctuation">(</span>
	B0 A0
	B1 <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">string</span>
	B2 <span class="token keyword">struct</span><span class="token punctuation">&#123;</span> a<span class="token punctuation">,</span> b <span class="token builtin">int</span> <span class="token punctuation">&#125;</span>
	B3 <span class="token keyword">struct</span><span class="token punctuation">&#123;</span> a<span class="token punctuation">,</span> c <span class="token builtin">int</span> <span class="token punctuation">&#125;</span>
	B4 <span class="token keyword">func</span><span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">,</span> <span class="token builtin">float64</span><span class="token punctuation">)</span> <span class="token operator">*</span>B0
	B5 <span class="token keyword">func</span><span class="token punctuation">(</span>x <span class="token builtin">int</span><span class="token punctuation">,</span> y <span class="token builtin">float64</span><span class="token punctuation">)</span> <span class="token operator">*</span>A1
<span class="token punctuation">)</span>

<span class="token keyword">type</span>	C0 <span class="token operator">=</span> B0<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>



<p>这些类型是相等的：</p>
<pre class="line-numbers language-go" data-language="go"><code class="language-go">A0<span class="token punctuation">,</span> A1<span class="token punctuation">,</span> and <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">string</span>
A2 and <span class="token keyword">struct</span><span class="token punctuation">&#123;</span> a<span class="token punctuation">,</span> b <span class="token builtin">int</span> <span class="token punctuation">&#125;</span>
A3 and <span class="token builtin">int</span>
A4<span class="token punctuation">,</span> <span class="token keyword">func</span><span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">,</span> <span class="token builtin">float64</span><span class="token punctuation">)</span> <span class="token operator">*</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">string</span><span class="token punctuation">,</span> and A5

B0<span class="token punctuation">,</span> B0<span class="token punctuation">,</span> and C0
<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">int</span> and <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">int</span>
<span class="token keyword">struct</span><span class="token punctuation">&#123;</span> a<span class="token punctuation">,</span> b <span class="token operator">*</span>T5 <span class="token punctuation">&#125;</span> and <span class="token keyword">struct</span><span class="token punctuation">&#123;</span> a<span class="token punctuation">,</span> b <span class="token operator">*</span>T5 <span class="token punctuation">&#125;</span>
<span class="token keyword">func</span><span class="token punctuation">(</span>x <span class="token builtin">int</span><span class="token punctuation">,</span> y <span class="token builtin">float64</span><span class="token punctuation">)</span> <span class="token operator">*</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">string</span><span class="token punctuation">,</span> <span class="token keyword">func</span><span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">,</span> <span class="token builtin">float64</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>result <span class="token operator">*</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">string</span><span class="token punctuation">)</span><span class="token punctuation">,</span> and A5<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>



<p>B0 和 B1 不是一种类型因为它们是通过类型定义方式分别定义的；<code>func(int, float64) *B0</code> 和 <code>func(x int, y float64) *[]string</code> 是不同的，因为 B0 和 []string 不是相同类型。</p>
<h4 id="可分配性"><a href="#可分配性" class="headerlink" title="可分配性"></a>可分配性</h4><p>在以下情况下，可以将 x 分配给类型为 T 的变量（把 x 分配给 T）：</p>
<ul>
<li><p>x 的类型为 T</p>
</li>
<li><p>x 的类型 V 和 T 有相同的底层类型并且类型 T 或 V 至少一个定义的类型</p>
</li>
<li><p>T 是一个接口类型并且 x 实现了 T</p>
</li>
<li><p>x 是一个 channel，并且 T 是channel类型，类型V和类型T有相同的元素类型，并且 2 种类型至少有一种不是定义的类型</p>
</li>
<li><p>x 等于 nil 并且 T 是一个指针，函数，切片，map，channel 或接口类型</p>
</li>
<li><p>x 是一个可以表示 T 类型值的无类型常量</p>
</li>
</ul>
<h4 id="代表性"><a href="#代表性" class="headerlink" title="代表性"></a>代表性</h4><p>满足以下条件时可以用 T 类型的值表示常量 x：</p>
<ul>
<li><p>T 值的集合包括 x</p>
</li>
<li><p>T 是浮点型，而 x 在没有溢出的情况下能够近似成 T 类型。近似规则使用 <code>IEEE 754 round-to-even</code>，负零和无符号的零相同。需要注意的是，常量的值不会为负零，NaN，或无限值。</p>
</li>
<li><p>T 为复数类型，并且 x 的 <code>real(x)</code> 和 <code>imag(x)</code> 部分由复数类型对应的浮点类型（<code>float32</code> 或 <code>float64</code> ）组成。</p>
</li>
</ul>
<pre class="line-numbers language-go" data-language="go"><code class="language-go">x                   T           x 可以表示 T 的值，因为：

<span class="token char">'a'</span>                 <span class="token builtin">byte</span>        <span class="token number">97</span> 在 <span class="token builtin">byte</span> 类型值的集合中
<span class="token number">97</span>                  <span class="token builtin">rune</span>        <span class="token builtin">rune</span> 是 <span class="token builtin">int32</span> 的别名，<span class="token number">97</span> 在 <span class="token number">32</span> 位整型值的集合中
<span class="token string">"foo"</span>               <span class="token builtin">string</span>      <span class="token string">"foo"</span> 在字符串值的集合中
<span class="token number">1024</span>                <span class="token builtin">int16</span>       <span class="token number">1024</span> 在 <span class="token number">16</span> 位整型值的集合中
<span class="token number">42.0</span>                <span class="token builtin">byte</span>        <span class="token number">42</span> 在 <span class="token number">8</span> 位无符号整型值的集合中
<span class="token number">1e10</span>                <span class="token builtin">uint64</span>      <span class="token number">10000000000</span> 在 <span class="token number">64</span> 位无符号整型值的集合中
<span class="token number">2.718281828459045</span>   <span class="token builtin">float32</span>     <span class="token number">2.718281828459045</span> 的近似值 <span class="token number">2.7182817</span> 在 <span class="token builtin">float32</span> 类型值的集合中
<span class="token operator">-</span><span class="token number">1e-1000</span>            <span class="token builtin">float64</span>     <span class="token operator">-</span><span class="token number">1e-1000</span> 的近视值 IEEE <span class="token operator">-</span><span class="token number">0.0</span>，等于 <span class="token number">0</span> 
<span class="token number">0i</span>                  <span class="token builtin">int</span>         <span class="token number">0</span> 是整型值
<span class="token punctuation">(</span><span class="token number">42</span> <span class="token operator">+</span> <span class="token number">0i</span><span class="token punctuation">)</span>           <span class="token builtin">float32</span>     <span class="token number">42.0</span> <span class="token punctuation">(</span><span class="token number">0</span> 虚部<span class="token punctuation">)</span> 在 <span class="token builtin">float32</span> 类型值的集合中<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>



<pre class="line-numbers language-go" data-language="go"><code class="language-go">x                   T           x 不能表示 T 的值，因为：

<span class="token number">0</span>                   <span class="token builtin">bool</span>        <span class="token number">0</span> 不在布尔值的集合中
<span class="token char">'a'</span>                 <span class="token builtin">string</span>      <span class="token char">'a'</span> 是 <span class="token builtin">rune</span> 类型<span class="token punctuation">,</span> 它不在字符串类型的值集合中
<span class="token number">1024</span>                <span class="token builtin">byte</span>        <span class="token number">1024</span> 不在 <span class="token number">8</span> 位无符号整型值的集合中
<span class="token operator">-</span><span class="token number">1</span>                  <span class="token builtin">uint16</span>      <span class="token operator">-</span><span class="token number">1</span> 不在 <span class="token number">16</span> 位无符号整型值的集合中
<span class="token number">1.1</span>                 <span class="token builtin">int</span>         <span class="token number">1.1</span> 不是整型值
<span class="token number">42i</span>                 <span class="token builtin">float32</span>     <span class="token punctuation">(</span><span class="token number">0</span> <span class="token operator">+</span> <span class="token number">42i</span><span class="token punctuation">)</span> 不在 <span class="token builtin">float32</span> 类型值的集合中
<span class="token number">1e1000</span>              <span class="token builtin">float64</span>     <span class="token number">1e1000</span> 取近似值时会溢出成 IEEE<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>



<h2 id="代码块"><a href="#代码块" class="headerlink" title="代码块"></a>代码块</h2><p>代码块是用大括号括起来的声明和语句。</p>
<pre class="line-numbers language-go" data-language="go"><code class="language-go">Block <span class="token operator">=</span> <span class="token string">"&#123;"</span> StatementList <span class="token string">"&#125;"</span> <span class="token punctuation">.</span>
StatementList <span class="token operator">=</span> <span class="token punctuation">&#123;</span> Statement <span class="token string">";"</span> <span class="token punctuation">&#125;</span> <span class="token punctuation">.</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>



<p>除了源码中显式的代码块，也有一些隐式的代码块。</p>
<ul>
<li><p>包含所有的Go代码的全局代码块。</p>
</li>
<li><p>包含所有包的代码的包代码块。</p>
</li>
<li><p>包含文件内的所有代码的文件代码块。</p>
</li>
<li><p>每个 if，switch和 for 的范围都会形成隐式的块。</p>
</li>
<li><p>每个 switch 和 select 条件都有自己的代码块。</p>
</li>
</ul>
<p>代码块可以嵌套并且影响作用域。</p>
<h2 id="声明和作用域"><a href="#声明和作用域" class="headerlink" title="声明和作用域"></a>声明和作用域</h2><p>一段声明可以给常量，类型，变量，函数，标签，和包绑定标识符。程序中每个标识符都需要声明。相同标识符不能在同一个代码块中声明2次。并且相同标识符不能同时在文件和 package 代码块中声明。</p>
<p>空标识符可以和其他标识符一样在声明中使用。不过它不绑定标识符，等于没有声明。在 package 代码块中 <code>init</code> 标识符只能用做 <code>init</code> 函数的标识符，就像空标识符一样，它不会引入新的绑定。</p>
<pre class="line-numbers language-go" data-language="go"><code class="language-go">Declaration   <span class="token operator">=</span> ConstDecl <span class="token operator">|</span> TypeDecl <span class="token operator">|</span> VarDecl <span class="token punctuation">.</span>
TopLevelDecl  <span class="token operator">=</span> Declaration <span class="token operator">|</span> FunctionDecl <span class="token operator">|</span> MethodDecl <span class="token punctuation">.</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>



<p>声明过的标识符的作用域就是声明标识符所在的作用域。</p>
<p>go使用块来规定词汇的方位：</p>
<ul>
<li><p>预定义的标识符具有全局作用域。</p>
</li>
<li><p>所有定义的顶级标识符具有包作用域。</p>
</li>
<li><p>import进来的包的名字标识符具有文件作用域。</p>
</li>
<li><p>方法的接收者，函数参数，返回值变量具有函数作用域。</p>
</li>
<li><p>函数内定义的参量和变量标识符的作用域是标识符被声明到容纳他的块结束。</p>
</li>
</ul>
<p>一个代码块中声明的标识符可以在它内部的代码块中重新声明。在内部代码块的作用域中标识符表示在内部代码块中声明的实体。</p>
<p>pakcage 语句不属于声明。包名不会出现在任何的作用域中。它的作用只是用来标识属于相同包的多个文件并在导入时指定默认包名。</p>
<h4 id="标签的作用域"><a href="#标签的作用域" class="headerlink" title="标签的作用域"></a>标签的作用域</h4><p>可以使用标签语句来声明标签，并且可以在 <code>break</code>，<code>continue</code>，<code>goto</code> 语法中使用。如果只声明但没有使用标签时非法的。标签的作用域只有定义时的函数体，早递归函数体中没有作用。</p>
<h4 id="空标识符"><a href="#空标识符" class="headerlink" title="空标识符"></a>空标识符</h4><p>空标识符使用下划线 <code>_</code> 代表。与一般的非空标识符不同，它作为匿名标识符在声明，运算元和赋值语句中都有特殊含义。</p>
<h4 id="预定义的标识符"><a href="#预定义的标识符" class="headerlink" title="预定义的标识符"></a>预定义的标识符</h4><p>以下标识符已经在全局作用域中预先声明：</p>
<pre class="line-numbers language-go" data-language="go"><code class="language-go">Types<span class="token punctuation">:</span>
	<span class="token builtin">bool</span> <span class="token builtin">byte</span> <span class="token builtin">complex64</span> <span class="token builtin">complex128</span> <span class="token builtin">error</span> <span class="token builtin">float32</span> <span class="token builtin">float64</span>
	<span class="token builtin">int</span> <span class="token builtin">int8</span> <span class="token builtin">int16</span> <span class="token builtin">int32</span> <span class="token builtin">int64</span> <span class="token builtin">rune</span> <span class="token builtin">string</span>
	<span class="token builtin">uint</span> <span class="token builtin">uint8</span> <span class="token builtin">uint16</span> <span class="token builtin">uint32</span> <span class="token builtin">uint64</span> <span class="token builtin">uintptr</span>

Constants<span class="token punctuation">:</span>
	<span class="token boolean">true</span> <span class="token boolean">false</span> <span class="token boolean">iota</span>

Zero value<span class="token punctuation">:</span>
	<span class="token boolean">nil</span>

Functions<span class="token punctuation">:</span>
	<span class="token builtin">append</span> <span class="token builtin">cap</span> <span class="token builtin">close</span> <span class="token builtin">complex</span> <span class="token builtin">copy</span> <span class="token builtin">delete</span> <span class="token builtin">imag</span> <span class="token builtin">len</span>
	<span class="token builtin">make</span> <span class="token builtin">new</span> <span class="token builtin">panic</span> <span class="token builtin">print</span> <span class="token builtin">println</span> <span class="token builtin">real</span> <span class="token builtin">recover</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>



<h4 id="导出标识符"><a href="#导出标识符" class="headerlink" title="导出标识符"></a>导出标识符</h4><p>标识符可以导出供其他包使用。在以下两种情况同时满足时标识符是导出的：</p>
<ul>
<li>标识符的首字母是大写（Unicode 的 <code>Lu</code> 类）</li>
<li>标识符声明在包作用域或者它是字段名&#x2F;方法名。</li>
</ul>
<p>其他任何标识符都不是导出的。</p>
<h4 id="标识符的唯一性"><a href="#标识符的唯一性" class="headerlink" title="标识符的唯一性"></a>标识符的唯一性</h4><p>给定一个标识符集合，一个标识符与集合中的每个标识符都不相同，那就认为这个标识符是唯一的。假设有两个标识符，如果它们的拼写不同，或者它们在不同的包中并没有导出，那它们就是不同标识符。相反，其他情况下都认为标识符是相同的。</p>
<h4 id="常量声明"><a href="#常量声明" class="headerlink" title="常量声明"></a>常量声明</h4><p>常量声明使用常量表达式绑定一系列标识符。标识符的数量必须等于表达式的数量。左侧第 n 个标识符绑定右侧第 n 个表达式的值。</p>
<pre class="line-numbers language-go" data-language="go"><code class="language-go">ConstDecl      <span class="token operator">=</span> <span class="token string">"const"</span> <span class="token punctuation">(</span> ConstSpec <span class="token operator">|</span> <span class="token string">"("</span> <span class="token punctuation">&#123;</span> ConstSpec <span class="token string">";"</span> <span class="token punctuation">&#125;</span> <span class="token string">")"</span> <span class="token punctuation">)</span> <span class="token punctuation">.</span>
ConstSpec      <span class="token operator">=</span> IdentifierList <span class="token punctuation">[</span> <span class="token punctuation">[</span> Type <span class="token punctuation">]</span> <span class="token string">"="</span> ExpressionList <span class="token punctuation">]</span> <span class="token punctuation">.</span>

IdentifierList <span class="token operator">=</span> identifier <span class="token punctuation">&#123;</span> <span class="token string">","</span> identifier <span class="token punctuation">&#125;</span> <span class="token punctuation">.</span>
ExpressionList <span class="token operator">=</span> Expression <span class="token punctuation">&#123;</span> <span class="token string">","</span> Expression <span class="token punctuation">&#125;</span> <span class="token punctuation">.</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>



<p>如果给定类型，常量会指定类型，并且表达式的值必须能对这个类型进行赋值。</p>
<p>如果没有给定类型。常量会转换成相应的表达式类型。如果表达式的值是无类型常量，那么声明的常量也是无类型的，并且常量的标识符代表常量的值。例如：即使小数部分是 0，只要表达式是浮点数字面值，常量标识符也表示为浮点数常量。</p>
<pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">const</span> Pi <span class="token builtin">float64</span> <span class="token operator">=</span> <span class="token number">3.14159265358979323846</span>
<span class="token keyword">const</span> zero <span class="token operator">=</span> <span class="token number">0.0</span>         <span class="token comment">// 无类型浮点数常量</span>
<span class="token keyword">const</span> <span class="token punctuation">(</span>
	size <span class="token builtin">int64</span> <span class="token operator">=</span> <span class="token number">1024</span>
	eof        <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span>  <span class="token comment">// 无类型整型常量</span>
<span class="token punctuation">)</span>
<span class="token keyword">const</span> a<span class="token punctuation">,</span> b<span class="token punctuation">,</span> c <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token string">"foo"</span>  <span class="token comment">// a = 3, b = 4, c = "foo", 无类型整型和字符串常量</span>
<span class="token keyword">const</span> u<span class="token punctuation">,</span> v <span class="token builtin">float32</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">3</span>    <span class="token comment">// u = 0.0, v = 3.0</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>



<p>括号内的常量声明列表的表达式除了第一个必须声明其他表达式可以不写。空的表达式列表的值和类型都和前面的非空表达式相同。缺省的表达式列表等价于重复之前的表达式。标识符的数量必须等于表达式的数量。<code>iota</code>常量生成器是一个可以快速生成序列值的机制。</p>
<pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">const</span> <span class="token punctuation">(</span>
	Sunday <span class="token operator">=</span> <span class="token boolean">iota</span>
	Monday
	Tuesday
	Wednesday
	Thursday
	Friday
	Partyday
	numberOfDays  <span class="token comment">// 非导出常量</span>
<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>



<h4 id="Iota"><a href="#Iota" class="headerlink" title="Iota"></a>Iota</h4><p>在常量声明中，预定义的标识符 <code>iota</code> 表示连续的无类型整型常量。它的值为常量声明中每个常量定义的位置（从零开始）。它能够用来生成一个关联常量集合：</p>
<pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">const</span> <span class="token punctuation">(</span> <span class="token comment">// iota is reset to 0</span>
	c0 <span class="token operator">=</span> <span class="token boolean">iota</span>  <span class="token comment">// c0 == 0</span>
	c1 <span class="token operator">=</span> <span class="token boolean">iota</span>  <span class="token comment">// c1 == 1</span>
	c2 <span class="token operator">=</span> <span class="token boolean">iota</span>  <span class="token comment">// c2 == 2</span>
<span class="token punctuation">)</span>

<span class="token keyword">const</span> <span class="token punctuation">(</span> <span class="token comment">// iota is reset to 0</span>
	a <span class="token operator">=</span> <span class="token number">1</span> <span class="token operator">&lt;&lt;</span> <span class="token boolean">iota</span>  <span class="token comment">// a == 1</span>
	b <span class="token operator">=</span> <span class="token number">1</span> <span class="token operator">&lt;&lt;</span> <span class="token boolean">iota</span>  <span class="token comment">// b == 2</span>
	c <span class="token operator">=</span> <span class="token number">3</span>          <span class="token comment">// c == 3  (没有使用 iota 不过它的值依然递增)</span>
	d <span class="token operator">=</span> <span class="token number">1</span> <span class="token operator">&lt;&lt;</span> <span class="token boolean">iota</span>  <span class="token comment">// d == 8</span>
<span class="token punctuation">)</span>

<span class="token keyword">const</span> <span class="token punctuation">(</span> <span class="token comment">// iota is reset to 0</span>
	u         <span class="token operator">=</span> <span class="token boolean">iota</span> <span class="token operator">*</span> <span class="token number">42</span>  <span class="token comment">// u == 0     (无类型整型常量)</span>
	v <span class="token builtin">float64</span> <span class="token operator">=</span> <span class="token boolean">iota</span> <span class="token operator">*</span> <span class="token number">42</span>  <span class="token comment">// v == 42.0  (float64 类型常量)</span>
	w         <span class="token operator">=</span> <span class="token boolean">iota</span> <span class="token operator">*</span> <span class="token number">42</span>  <span class="token comment">// w == 84    (无类型整型常量)</span>
<span class="token punctuation">)</span>

<span class="token keyword">const</span> x <span class="token operator">=</span> <span class="token boolean">iota</span>  <span class="token comment">// x == 0  (iota 被重置)</span>
<span class="token keyword">const</span> y <span class="token operator">=</span> <span class="token boolean">iota</span>  <span class="token comment">// y == 0  (iota 被重置)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>



<p>根据定义，在同一个常量定义中多次使用 <code>iota</code> 会得到相同的值：</p>
<pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">const</span> <span class="token punctuation">(</span>
	bit0<span class="token punctuation">,</span> mask0 <span class="token operator">=</span> <span class="token number">1</span> <span class="token operator">&lt;&lt;</span> <span class="token boolean">iota</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token operator">&lt;&lt;</span><span class="token boolean">iota</span> <span class="token operator">-</span> <span class="token number">1</span>  <span class="token comment">// bit0 == 1, mask0 == 0  (iota == 0)</span>
	bit1<span class="token punctuation">,</span> mask1                           <span class="token comment">// bit1 == 2, mask1 == 1  (iota == 1)</span>
	<span class="token boolean">_</span><span class="token punctuation">,</span> <span class="token boolean">_</span>                                  <span class="token comment">//                        (iota == 2, unused)</span>
	bit3<span class="token punctuation">,</span> mask3                           <span class="token comment">// bit3 == 8, mask3 == 7  (iota == 3)</span>
<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>



<p>最后一个例子利用了最后一个非空表达式列表的隐式重复。</p>
<h4 id="类型声明"><a href="#类型声明" class="headerlink" title="类型声明"></a>类型声明</h4><p>类型声明为类型绑定一个标识符。类型声明有2种方式：类型声明和别名声明。</p>
<pre class="line-numbers language-go" data-language="go"><code class="language-go">TypeDecl <span class="token operator">=</span> <span class="token string">"type"</span> <span class="token punctuation">(</span> TypeSpec <span class="token operator">|</span> <span class="token string">"("</span> <span class="token punctuation">&#123;</span> TypeSpec <span class="token string">";"</span> <span class="token punctuation">&#125;</span> <span class="token string">")"</span> <span class="token punctuation">)</span> <span class="token punctuation">.</span>
TypeSpec <span class="token operator">=</span> AliasDecl <span class="token operator">|</span> TypeDef <span class="token punctuation">.</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>



<h5 id="Alias声明"><a href="#Alias声明" class="headerlink" title="Alias声明"></a>Alias声明</h5><p>别名声明给指定类型绑定一个标识符名称。</p>
<pre class="line-numbers language-go" data-language="go"><code class="language-go">AliasDecl <span class="token operator">=</span> identifier <span class="token string">"="</span> Type <span class="token punctuation">.</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>



<p>在标识符作用域内，它作为类型的别名。</p>
<pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">type</span> <span class="token punctuation">(</span>
	nodeList <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">*</span>Node  <span class="token comment">// nodeList 和 []*Node 是相同类型</span>
	Polar    <span class="token operator">=</span> polar    <span class="token comment">// Polar 和 polar 表示相同类型</span>
<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>



<h5 id="Type-定义"><a href="#Type-定义" class="headerlink" title="Type 定义"></a>Type 定义</h5><p>类型定义会创建一个新类型并绑定一个标识符，新类型与给定类型具有相同的底层类型和操作。</p>
<pre class="line-numbers language-go" data-language="go"><code class="language-go">TypeDef <span class="token operator">=</span> identifier Type <span class="token punctuation">.</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>



<p>这个类型叫做定义类型，它和其他所有类型都不相同，包括创建它的类型。</p>
<pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">type</span> <span class="token punctuation">(</span>
	Point <span class="token keyword">struct</span><span class="token punctuation">&#123;</span> x<span class="token punctuation">,</span> y <span class="token builtin">float64</span> <span class="token punctuation">&#125;</span>  <span class="token comment">// Point 和 struct&#123; x, y float64 &#125; 是不同类型</span>
	polar Point                   <span class="token comment">// polar 和 Point 表示不同类型</span>
<span class="token punctuation">)</span>

<span class="token keyword">type</span> TreeNode <span class="token keyword">struct</span> <span class="token punctuation">&#123;</span>
	left<span class="token punctuation">,</span> right <span class="token operator">*</span>TreeNode
	value <span class="token operator">*</span>Comparable
<span class="token punctuation">&#125;</span>

<span class="token keyword">type</span> Block <span class="token keyword">interface</span> <span class="token punctuation">&#123;</span>
	<span class="token function">BlockSize</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token builtin">int</span>
	<span class="token function">Encrypt</span><span class="token punctuation">(</span>src<span class="token punctuation">,</span> dst <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">byte</span><span class="token punctuation">)</span>
	<span class="token function">Decrypt</span><span class="token punctuation">(</span>src<span class="token punctuation">,</span> dst <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">byte</span><span class="token punctuation">)</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>



<p>定义类型可以关联该类型的方法。它不会继承原来类型的任何方法。但是接口类型的方法集和类型的结构没有改变。</p>
<pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token comment">// Mutex 是一个拥有 Lock 和 Unlock 两个方法的数据类型。</span>
<span class="token keyword">type</span> Mutex <span class="token keyword">struct</span>         <span class="token punctuation">&#123;</span> <span class="token comment">/* Mutex fields */</span> <span class="token punctuation">&#125;</span>
<span class="token keyword">func</span> <span class="token punctuation">(</span>m <span class="token operator">*</span>Mutex<span class="token punctuation">)</span> <span class="token function">Lock</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span> <span class="token comment">/* Lock implementation */</span> <span class="token punctuation">&#125;</span>
<span class="token keyword">func</span> <span class="token punctuation">(</span>m <span class="token operator">*</span>Mutex<span class="token punctuation">)</span> <span class="token function">Unlock</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token punctuation">&#123;</span> <span class="token comment">/* Unlock implementation */</span> <span class="token punctuation">&#125;</span>

<span class="token comment">// NewMutex 与 Mutex 结构相同不过方法集为空。</span>
<span class="token keyword">type</span> NewMutex Mutex

<span class="token comment">// PtrMutex 的底层类型 *Mutex 的方法集没有改变，</span>
<span class="token comment">// 但是 PtrMutex 的方法集为空。</span>
<span class="token keyword">type</span> PtrMutex <span class="token operator">*</span>Mutex

<span class="token comment">// *PrintableMutex 包含嵌入字段 Mutex 的 Lock 和 Unlock 方法。</span>
<span class="token keyword">type</span> PrintableMutex <span class="token keyword">struct</span> <span class="token punctuation">&#123;</span>
	Mutex
<span class="token punctuation">&#125;</span>

<span class="token comment">// MyBlock 是与 Block 有相同方法集的接口类型</span>
<span class="token keyword">type</span> MyBlock Block<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>



<p>类型定义可以定义方法集不同的布尔值、数字和字符串类型：</p>
<pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">type</span> TimeZone <span class="token builtin">int</span>

<span class="token keyword">const</span> <span class="token punctuation">(</span>
	EST TimeZone <span class="token operator">=</span> <span class="token operator">-</span><span class="token punctuation">(</span><span class="token number">5</span> <span class="token operator">+</span> <span class="token boolean">iota</span><span class="token punctuation">)</span>
	CST
	MST
	PST
<span class="token punctuation">)</span>

<span class="token keyword">func</span> <span class="token punctuation">(</span>tz TimeZone<span class="token punctuation">)</span> <span class="token function">String</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token builtin">string</span> <span class="token punctuation">&#123;</span>
	<span class="token keyword">return</span> fmt<span class="token punctuation">.</span><span class="token function">Sprintf</span><span class="token punctuation">(</span><span class="token string">"GMT%+dh"</span><span class="token punctuation">,</span> tz<span class="token punctuation">)</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>



<h4 id="变量声明"><a href="#变量声明" class="headerlink" title="变量声明"></a>变量声明</h4><p>变量声明可以创建一个或多个变量，并绑定对应的标识符、指定类型和初始值。</p>
<pre class="line-numbers language-go" data-language="go"><code class="language-go">VarDecl     <span class="token operator">=</span> <span class="token string">"var"</span> <span class="token punctuation">(</span> VarSpec <span class="token operator">|</span> <span class="token string">"("</span> <span class="token punctuation">&#123;</span> VarSpec <span class="token string">";"</span> <span class="token punctuation">&#125;</span> <span class="token string">")"</span> <span class="token punctuation">)</span> <span class="token punctuation">.</span>
VarSpec     <span class="token operator">=</span> IdentifierList <span class="token punctuation">(</span> Type <span class="token punctuation">[</span> <span class="token string">"="</span> ExpressionList <span class="token punctuation">]</span> <span class="token operator">|</span> <span class="token string">"="</span> ExpressionList <span class="token punctuation">)</span> <span class="token punctuation">.</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>



<pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">var</span> i <span class="token builtin">int</span>
<span class="token keyword">var</span> U<span class="token punctuation">,</span> V<span class="token punctuation">,</span> W <span class="token builtin">float64</span>
<span class="token keyword">var</span> k <span class="token operator">=</span> <span class="token number">0</span>
<span class="token keyword">var</span> x<span class="token punctuation">,</span> y <span class="token builtin">float32</span> <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">2</span>
<span class="token keyword">var</span> <span class="token punctuation">(</span>
	i       <span class="token builtin">int</span>
	u<span class="token punctuation">,</span> v<span class="token punctuation">,</span> s <span class="token operator">=</span> <span class="token number">2.0</span><span class="token punctuation">,</span> <span class="token number">3.0</span><span class="token punctuation">,</span> <span class="token string">"bar"</span>
<span class="token punctuation">)</span>
<span class="token keyword">var</span> re<span class="token punctuation">,</span> im <span class="token operator">=</span> <span class="token function">complexSqrt</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span>
<span class="token keyword">var</span> <span class="token boolean">_</span><span class="token punctuation">,</span> found <span class="token operator">=</span> entries<span class="token punctuation">[</span>name<span class="token punctuation">]</span>  <span class="token comment">// map lookup; only interested in "found"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>



<p>如果给定一个表达式列表。变量会根据赋值规则使用表达式进行初始化。否则，每个变量都会初始化成变量类型的零值。</p>
<p>如果指定类型，变量会为指定类型。如果没有指定类型，变量会使用分配的初始值类型。如果初始值为无类型常量，它会转换成初始值的默认类型。如果是一个无类型布尔值，那么变量的类型就是 <code>bool</code>。值 <code>nil</code> 不能给没有指定类型的变量赋值。</p>
<pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">var</span> d <span class="token operator">=</span> math<span class="token punctuation">.</span><span class="token function">Sin</span><span class="token punctuation">(</span><span class="token number">0.5</span><span class="token punctuation">)</span>  <span class="token comment">// d is float64</span>
<span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">42</span>             <span class="token comment">// i is int</span>
<span class="token keyword">var</span> t<span class="token punctuation">,</span> ok <span class="token operator">=</span> x<span class="token punctuation">.</span><span class="token punctuation">(</span>T<span class="token punctuation">)</span>      <span class="token comment">// t is T, ok is bool</span>
<span class="token keyword">var</span> n <span class="token operator">=</span> <span class="token boolean">nil</span>            <span class="token comment">// illegal</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>



<p>实现的限制：在函数体内声明的变量如果没有使用过编译器需要报错。</p>
<h4 id="短变量声明"><a href="#短变量声明" class="headerlink" title="短变量声明"></a>短变量声明</h4><p>短变量声明的语法:</p>
<pre class="line-numbers language-go" data-language="go"><code class="language-go">ShortVarDecl <span class="token operator">=</span> IdentifierList <span class="token string">":="</span> ExpressionList <span class="token punctuation">.</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>



<p>它比正常使用初始化表达式进行变量声明的方式要短，而且不指定类型：</p>
<pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token string">"var"</span> IdentifierList <span class="token operator">=</span> ExpressionList <span class="token punctuation">.</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>



<pre class="line-numbers language-go" data-language="go"><code class="language-go">i<span class="token punctuation">,</span> j <span class="token operator">:=</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">10</span>
f <span class="token operator">:=</span> <span class="token keyword">func</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token builtin">int</span> <span class="token punctuation">&#123;</span> <span class="token keyword">return</span> <span class="token number">7</span> <span class="token punctuation">&#125;</span>
ch <span class="token operator">:=</span> <span class="token function">make</span><span class="token punctuation">(</span><span class="token keyword">chan</span> <span class="token builtin">int</span><span class="token punctuation">)</span>
r<span class="token punctuation">,</span> w <span class="token operator">:=</span> os<span class="token punctuation">.</span><span class="token function">Pipe</span><span class="token punctuation">(</span>fd<span class="token punctuation">)</span>  <span class="token comment">// os.Pipe() 返回两个值</span>
<span class="token boolean">_</span><span class="token punctuation">,</span> y<span class="token punctuation">,</span> <span class="token boolean">_</span> <span class="token operator">:=</span> <span class="token function">coord</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span>  <span class="token comment">// coord() 返回三个值，我们只关注 y</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>



<p>和常规变量声明不同，即使之前在相同代码块中声明过的变量，也可以在短变量重新声明相同类型的变量，并且保证至少会有一个新的非空变量。总之，只应该在多变量短声明的时候重新声明变量，重新声明并不会使用新的变量，而是给变量分配新值。</p>
<pre class="line-numbers language-go" data-language="go"><code class="language-go">field1<span class="token punctuation">,</span> offset <span class="token operator">:=</span> <span class="token function">nextField</span><span class="token punctuation">(</span>str<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>
field2<span class="token punctuation">,</span> offset <span class="token operator">:=</span> <span class="token function">nextField</span><span class="token punctuation">(</span>str<span class="token punctuation">,</span> offset<span class="token punctuation">)</span>  <span class="token comment">// 重新声明 offset</span>
a<span class="token punctuation">,</span> a <span class="token operator">:=</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span>                              <span class="token comment">// 非法：声明了 a 两次并且没有新的变量</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>



<p>短变量声明只能在函数中使用，例如在 <code>if</code>、<code>for</code>、<code>switch</code>语句的上下文中声明临时变量。</p>
<h4 id="函数声明"><a href="#函数声明" class="headerlink" title="函数声明"></a>函数声明</h4><p>函数声明为函数绑定标识符。</p>
<pre class="line-numbers language-go" data-language="go"><code class="language-go">FunctionDecl <span class="token operator">=</span> <span class="token string">"func"</span> FunctionName Signature <span class="token punctuation">[</span> FunctionBody <span class="token punctuation">]</span> <span class="token punctuation">.</span>
FunctionName <span class="token operator">=</span> identifier <span class="token punctuation">.</span>
FunctionBody <span class="token operator">=</span> Block <span class="token punctuation">.</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>



<p>如果函数指定了返回参数。函数体的语句必须以终止语句结束。</p>
<pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">func</span> <span class="token function">IndexRune</span><span class="token punctuation">(</span>s <span class="token builtin">string</span><span class="token punctuation">,</span> r <span class="token builtin">rune</span><span class="token punctuation">)</span> <span class="token builtin">int</span> <span class="token punctuation">&#123;</span>
   <span class="token keyword">for</span> i<span class="token punctuation">,</span> c <span class="token operator">:=</span> <span class="token keyword">range</span> s <span class="token punctuation">&#123;</span>
   	<span class="token keyword">if</span> c <span class="token operator">==</span> r <span class="token punctuation">&#123;</span>
   		<span class="token keyword">return</span> i
   	<span class="token punctuation">&#125;</span>
   <span class="token punctuation">&#125;</span>
   <span class="token comment">// 无效：缺少 return 语句</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>



<p>函数声明可以没有函数体。这样的声明提供一个函数声明，并由其他外部实现，例如汇编脚本。</p>
<pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">func</span> <span class="token function">min</span><span class="token punctuation">(</span>x <span class="token builtin">int</span><span class="token punctuation">,</span> y <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token builtin">int</span> <span class="token punctuation">&#123;</span>
	<span class="token keyword">if</span> x <span class="token operator">&lt;</span> y <span class="token punctuation">&#123;</span>
		<span class="token keyword">return</span> x
	<span class="token punctuation">&#125;</span>
	<span class="token keyword">return</span> y
<span class="token punctuation">&#125;</span>

<span class="token keyword">func</span> <span class="token function">flushICache</span><span class="token punctuation">(</span>begin<span class="token punctuation">,</span> end <span class="token builtin">uintptr</span><span class="token punctuation">)</span>  <span class="token comment">// 由外部实现</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>



<h4 id="方法声明"><a href="#方法声明" class="headerlink" title="方法声明"></a>方法声明</h4><p>方法是一个带接收者的函数，方法声明为方法绑定标识符作为方法名并指定方法对应的接收者类型。</p>
<pre class="line-numbers language-go" data-language="go"><code class="language-go">MethodDecl <span class="token operator">=</span> <span class="token string">"func"</span> Receiver MethodName Signature <span class="token punctuation">[</span> FunctionBody <span class="token punctuation">]</span> <span class="token punctuation">.</span>
Receiver   <span class="token operator">=</span> Parameters <span class="token punctuation">.</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>



<p>接收者通过在方法增加一个额外的参数来指定。这个参数必须是一个非可变参数。它的类型必须是 T 或者 T 的指针（可能包含括号）。T 被称作接收者的基础类型；它不能是指针或接口类型，并且只能在同一个包中定义方法。声明后，我们认为方法绑定了基础类型，并且可以通过 T 或 *T 选择器访问方法名。</p>
<p>非空的接收者标识符在方法签名中必须是唯一的。如果接收者的值没有在该方法中使用，那么接收者标识符可以省略。函数和方法的参数也是一样。</p>
<p>对于一个基础类型。绑定的非空的方法名必须是唯一的。如果基础类型是一个结构体，非空的方法名也不能与结构体字段重复。</p>
<p>给定一个<code>Point</code>类型。声明：</p>
<pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">func</span> <span class="token punctuation">(</span>p <span class="token operator">*</span>Point<span class="token punctuation">)</span> <span class="token function">Length</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token builtin">float64</span> <span class="token punctuation">&#123;</span>
	<span class="token keyword">return</span> math<span class="token punctuation">.</span><span class="token function">Sqrt</span><span class="token punctuation">(</span>p<span class="token punctuation">.</span>x <span class="token operator">*</span> p<span class="token punctuation">.</span>x <span class="token operator">+</span> p<span class="token punctuation">.</span>y <span class="token operator">*</span> p<span class="token punctuation">.</span>y<span class="token punctuation">)</span>
<span class="token punctuation">&#125;</span>

<span class="token keyword">func</span> <span class="token punctuation">(</span>p <span class="token operator">*</span>Point<span class="token punctuation">)</span> <span class="token function">Scale</span><span class="token punctuation">(</span>factor <span class="token builtin">float64</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
	p<span class="token punctuation">.</span>x <span class="token operator">*=</span> factor
	p<span class="token punctuation">.</span>y <span class="token operator">*=</span> factor
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>



<p>为类型 <code>*Point</code>绑定了2个方法 <code>Length</code> 和 <code>Scale</code>。</p>
<p>方法的类型就是以接收者作为第一个参数的函数类型，例如 <code>Scale</code> 方法：</p>
<pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">func</span><span class="token punctuation">(</span>p <span class="token operator">*</span>Point<span class="token punctuation">,</span> factor <span class="token builtin">float64</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>



<p>但是以这种方式声明的函数并不是方法。</p>
<h2 id="表达式"><a href="#表达式" class="headerlink" title="表达式"></a>表达式</h2><p>表达式通过针对运算元使用运算符和函数来获取计算值。</p>
<h4 id="运算元"><a href="#运算元" class="headerlink" title="运算元"></a>运算元</h4><p>运算元代表表达式中的一个简单的。运算元可以是字面值，非空标识符。或括号表达式。</p>
<p>空标识符只能出现在赋值声明的左侧。</p>
<pre class="line-numbers language-go" data-language="go"><code class="language-go">Operand     <span class="token operator">=</span> Literal <span class="token operator">|</span> OperandName <span class="token operator">|</span> MethodExpr <span class="token operator">|</span> <span class="token string">"("</span> Expression <span class="token string">")"</span> <span class="token punctuation">.</span>
Literal     <span class="token operator">=</span> BasicLit <span class="token operator">|</span> CompositeLit <span class="token operator">|</span> FunctionLit <span class="token punctuation">.</span>
BasicLit    <span class="token operator">=</span> int_lit <span class="token operator">|</span> float_lit <span class="token operator">|</span> imaginary_lit <span class="token operator">|</span> rune_lit <span class="token operator">|</span> string_lit <span class="token punctuation">.</span>
OperandName <span class="token operator">=</span> identifier <span class="token operator">|</span> QualifiedIdent<span class="token punctuation">.</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>



<h4 id="修饰标识符"><a href="#修饰标识符" class="headerlink" title="修饰标识符"></a>修饰标识符</h4><p>修饰标识符是以包名作为前缀修饰的标识符。包名和标识符都不能为空。</p>
<pre class="line-numbers language-go" data-language="go"><code class="language-go">QualifiedIdent <span class="token operator">=</span> PackageName <span class="token string">"."</span> identifier <span class="token punctuation">.</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>



<p>修饰标识符可以用来访问不同包（需要先导入）中的标识符。标识符必须是导出的并在包级代码块声明才能够被访问。</p>
<pre class="line-numbers language-go" data-language="go"><code class="language-go">math<span class="token punctuation">.</span>Sin	<span class="token comment">// 表示 math 包中的 Sin 函数</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>



<h4 id="复合字面值"><a href="#复合字面值" class="headerlink" title="复合字面值"></a>复合字面值</h4><p>复合字面值能为结构体、数组、切片和 map 初始化值。它每次只能创建一个值。字面值由一个字面值类型和使用括号括起来的元素列表组成。元素前也可以声明元素对应的键。</p>
<pre class="line-numbers language-go" data-language="go"><code class="language-go">CompositeLit  <span class="token operator">=</span> LiteralType LiteralValue <span class="token punctuation">.</span>
LiteralType   <span class="token operator">=</span> StructType <span class="token operator">|</span> ArrayType <span class="token operator">|</span> <span class="token string">"["</span> <span class="token string">"..."</span> <span class="token string">"]"</span> ElementType <span class="token operator">|</span>
                SliceType <span class="token operator">|</span> MapType <span class="token operator">|</span> TypeName <span class="token punctuation">.</span>
LiteralValue  <span class="token operator">=</span> <span class="token string">"&#123;"</span> <span class="token punctuation">[</span> ElementList <span class="token punctuation">[</span> <span class="token string">","</span> <span class="token punctuation">]</span> <span class="token punctuation">]</span> <span class="token string">"&#125;"</span> <span class="token punctuation">.</span>
ElementList   <span class="token operator">=</span> KeyedElement <span class="token punctuation">&#123;</span> <span class="token string">","</span> KeyedElement <span class="token punctuation">&#125;</span> <span class="token punctuation">.</span>
KeyedElement  <span class="token operator">=</span> <span class="token punctuation">[</span> Key <span class="token string">":"</span> <span class="token punctuation">]</span> Element <span class="token punctuation">.</span>
Key           <span class="token operator">=</span> FieldName <span class="token operator">|</span> Expression <span class="token operator">|</span> LiteralValue <span class="token punctuation">.</span>
FieldName     <span class="token operator">=</span> identifier <span class="token punctuation">.</span>
Element       <span class="token operator">=</span> Expression <span class="token operator">|</span> LiteralValue <span class="token punctuation">.</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>



<p>字面值类型的底层类型必须是一个结构体，数组，切片或 map 类型（如果没有指定类型名就会强制执行这个约束）。元素的类型和键都必须能够分配给相应的字段的元素和键类型；没有额外的类型转换。键可以表示结构体的字段名，切片和数组的索引，map 类型的键。对于 map 字面值，所有的元素都必须有键。如果相同字段名或常量值的键对应多个元素就会报错。如果 map 类型的键为非常量类型，请看求值顺序章节。</p>
<p>结构体字面值遵循以下规则：</p>
<ul>
<li><p>在结构体中，键必须是它的字段名。</p>
</li>
<li><p>不包含任何键的元素列表的顺序需要与结构体字段的声明顺序相同。</p>
</li>
<li><p>如果一个元素指定了键，那么所有的元素都必须指定键。</p>
</li>
<li><p>包含键的元素列表不需要指定结构体的每个字字段，缺省字段会使用字段类型的零值。</p>
</li>
<li><p>字面值可以不指定元素；这样的字面值等于该类型的零值。</p>
</li>
<li><p>指定非本包的非导出字段会报错。</p>
</li>
</ul>
<p>给定声明：</p>
<pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">type</span> Point3D <span class="token keyword">struct</span> <span class="token punctuation">&#123;</span> x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> z <span class="token builtin">float64</span> <span class="token punctuation">&#125;</span>
<span class="token keyword">type</span> Line <span class="token keyword">struct</span> <span class="token punctuation">&#123;</span> p<span class="token punctuation">,</span> q Point3D <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>



<p>我们可以使用这种写法：</p>
<pre class="line-numbers language-go" data-language="go"><code class="language-go">origin <span class="token operator">:=</span> Point3D<span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span>                            <span class="token comment">// Point3D 的零值</span>
line <span class="token operator">:=</span> Line<span class="token punctuation">&#123;</span>origin<span class="token punctuation">,</span> Point3D<span class="token punctuation">&#123;</span>y<span class="token punctuation">:</span> <span class="token operator">-</span><span class="token number">4</span><span class="token punctuation">,</span> z<span class="token punctuation">:</span> <span class="token number">12.3</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span>  <span class="token comment">// line.q.x 的零值</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>



<p>数组和切片遵循以下规则：</p>
<ul>
<li><p>每个元素都关联一个数字索引标记元素再数组中的位置。</p>
</li>
<li><p>给元素指定的键会作为它的索引。键必须是能够表示非负的 <code>int</code> 类型值的常量；如果是指定类型的常量，那么常量必须是整型。</p>
</li>
<li><p>元素没有指定键时会使用之前的索引加一。如果第一个元素没有指定键，它的索引为零。</p>
</li>
</ul>
<p>对复合字面值取址会生成指向由字面量初始化的变量的指针。</p>
<pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">var</span> pointer <span class="token operator">*</span>Point3D <span class="token operator">=</span> <span class="token operator">&amp;</span>Point3D<span class="token punctuation">&#123;</span>y<span class="token punctuation">:</span> <span class="token number">1000</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>



<p>数组字面值需要在类型中指定数组的长度。如果提供的元素少于数组的长度，那么缺少元素的位置将会使用元素类型的零值替代。如果索引超过数组的长度会报错。<code>…</code> 表示数组的长度等于最大元素索引加一。</p>
<pre class="line-numbers language-go" data-language="go"><code class="language-go">buffer <span class="token operator">:=</span> <span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">]</span><span class="token builtin">string</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span>             <span class="token comment">// len(buffer) == 10</span>
intSet <span class="token operator">:=</span> <span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span><span class="token builtin">int</span><span class="token punctuation">&#123;</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">&#125;</span>       <span class="token comment">// len(intSet) == 6</span>
days <span class="token operator">:=</span> <span class="token punctuation">[</span><span class="token operator">...</span><span class="token punctuation">]</span><span class="token builtin">string</span><span class="token punctuation">&#123;</span><span class="token string">"Sat"</span><span class="token punctuation">,</span> <span class="token string">"Sun"</span><span class="token punctuation">&#125;</span>  <span class="token comment">// len(days) == 2</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>



<p>切片字面值底层其实就是数组字面值。因此它的长度和容量都是元素的最大索引加一。切片字面值的格式为：</p>
<pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token punctuation">[</span><span class="token punctuation">]</span>T<span class="token punctuation">&#123;</span>x1<span class="token punctuation">,</span> x2<span class="token punctuation">,</span> … xn<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>



<p>可以在数组上进行切片操作从而获得切片：</p>
<pre class="line-numbers language-go" data-language="go"><code class="language-go">tmp <span class="token operator">:=</span> <span class="token punctuation">[</span>n<span class="token punctuation">]</span>T<span class="token punctuation">&#123;</span>x1<span class="token punctuation">,</span> x2<span class="token punctuation">,</span> … xn<span class="token punctuation">&#125;</span>
tmp<span class="token punctuation">[</span><span class="token number">0</span> <span class="token punctuation">:</span> n<span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>



<p>在一个数组、切片或 map 类型 T 中。元素或者 map 的键可能有自己的字面值类型，如果字面值类型和元素或者键类型相同，那么对应的类型标识符可以省略。与之类似，如果元素或键的类型为 <code>*T</code>，那么它们的 <code>&amp;T</code> 也可以省略。</p>
<pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token punctuation">[</span><span class="token operator">...</span><span class="token punctuation">]</span>Point<span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span><span class="token number">1.5</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">3.5</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span>     <span class="token comment">// same as [...]Point&#123;Point&#123;1.5, -3.5&#125;, Point&#123;0, 0&#125;&#125;</span>
<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">int</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span>          <span class="token comment">// same as [][]int&#123;[]int&#123;1, 2, 3&#125;, []int&#123;4, 5&#125;&#125;</span>
<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span>Point<span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span>         <span class="token comment">// same as [][]Point&#123;[]Point&#123;Point&#123;0, 1&#125;, Point&#123;1, 2&#125;&#125;&#125;</span>
<span class="token keyword">map</span><span class="token punctuation">[</span><span class="token builtin">string</span><span class="token punctuation">]</span>Point<span class="token punctuation">&#123;</span><span class="token string">"orig"</span><span class="token punctuation">:</span> <span class="token punctuation">&#123;</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span>    <span class="token comment">// same as map[string]Point&#123;"orig": Point&#123;0, 0&#125;&#125;</span>
<span class="token keyword">map</span><span class="token punctuation">[</span>Point<span class="token punctuation">]</span><span class="token builtin">string</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">&#125;</span><span class="token punctuation">:</span> <span class="token string">"orig"</span><span class="token punctuation">&#125;</span>    <span class="token comment">// same as map[Point]string&#123;Point&#123;0, 0&#125;: "orig"&#125;</span>

<span class="token keyword">type</span> PPoint <span class="token operator">*</span>Point
<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token operator">*</span>Point<span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span><span class="token number">1.5</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">3.5</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span>          <span class="token comment">// same as [2]*Point&#123;&amp;Point&#123;1.5, -3.5&#125;, &amp;Point&#123;&#125;&#125;</span>
<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span>PPoint<span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span><span class="token number">1.5</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">3.5</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span>          <span class="token comment">// same as [2]PPoint&#123;PPoint(&amp;Point&#123;1.5, -3.5&#125;), PPoint(&amp;Point&#123;&#125;)&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>



<p>当复合字面值使用字面值类型的类型名格式出现在 <code>if</code>、<code>for</code> 或 <code>switch</code> 语句的关键字和括号之间并且没有使用圆括号包裹的时候，会引发语法歧义。在这种特殊的情况下字面值的括号会被认为是语句的代码块。为了避免歧义，复合字面值必须用括号括起来。</p>
<pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">if</span> x <span class="token operator">==</span> <span class="token punctuation">(</span>T<span class="token punctuation">&#123;</span>a<span class="token punctuation">,</span>b<span class="token punctuation">,</span>c<span class="token punctuation">&#125;</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> … <span class="token punctuation">&#125;</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>x <span class="token operator">==</span> T<span class="token punctuation">&#123;</span>a<span class="token punctuation">,</span>b<span class="token punctuation">,</span>c<span class="token punctuation">&#125;</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> … <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>



<p>下面是合法的数组、切片和 map 的例子：</p>
<pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token comment">// list of prime numbers</span>
primes <span class="token operator">:=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">int</span><span class="token punctuation">&#123;</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">2147483647</span><span class="token punctuation">&#125;</span>

<span class="token comment">// vowels[ch] is true if ch is a vowel</span>
vowels <span class="token operator">:=</span> <span class="token punctuation">[</span><span class="token number">128</span><span class="token punctuation">]</span><span class="token builtin">bool</span><span class="token punctuation">&#123;</span><span class="token char">'a'</span><span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token char">'e'</span><span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token char">'i'</span><span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token char">'o'</span><span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token char">'u'</span><span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token char">'y'</span><span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">&#125;</span>

<span class="token comment">// the array [10]float32&#123;-1, 0, 0, 0, -0.1, -0.1, 0, 0, 0, -1&#125;</span>
filter <span class="token operator">:=</span> <span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">]</span><span class="token builtin">float32</span><span class="token punctuation">&#123;</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">:</span> <span class="token operator">-</span><span class="token number">0.1</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">0.1</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">:</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">&#125;</span>

<span class="token comment">// frequencies in Hz for equal-tempered scale (A4 = 440Hz)</span>
noteFrequency <span class="token operator">:=</span> <span class="token keyword">map</span><span class="token punctuation">[</span><span class="token builtin">string</span><span class="token punctuation">]</span><span class="token builtin">float32</span><span class="token punctuation">&#123;</span>
	<span class="token string">"C0"</span><span class="token punctuation">:</span> <span class="token number">16.35</span><span class="token punctuation">,</span> <span class="token string">"D0"</span><span class="token punctuation">:</span> <span class="token number">18.35</span><span class="token punctuation">,</span> <span class="token string">"E0"</span><span class="token punctuation">:</span> <span class="token number">20.60</span><span class="token punctuation">,</span> <span class="token string">"F0"</span><span class="token punctuation">:</span> <span class="token number">21.83</span><span class="token punctuation">,</span>
	<span class="token string">"G0"</span><span class="token punctuation">:</span> <span class="token number">24.50</span><span class="token punctuation">,</span> <span class="token string">"A0"</span><span class="token punctuation">:</span> <span class="token number">27.50</span><span class="token punctuation">,</span> <span class="token string">"B0"</span><span class="token punctuation">:</span> <span class="token number">30.87</span><span class="token punctuation">,</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>



<h4 id="函数字面值"><a href="#函数字面值" class="headerlink" title="函数字面值"></a>函数字面值</h4><p>函数字面值表示一个匿名函数。</p>
<pre class="line-numbers language-go" data-language="go"><code class="language-go">FunctionLit <span class="token operator">=</span> <span class="token string">"func"</span> Function <span class="token punctuation">.</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>



<pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">func</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b <span class="token builtin">int</span><span class="token punctuation">,</span> z <span class="token builtin">float64</span><span class="token punctuation">)</span> <span class="token builtin">bool</span> <span class="token punctuation">&#123;</span> <span class="token keyword">return</span> a<span class="token operator">*</span>b <span class="token operator">&lt;</span> <span class="token function">int</span><span class="token punctuation">(</span>z<span class="token punctuation">)</span> <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>



<p>函数字面值能分配给变量或直接调用。</p>
<p>函数字面值是一个闭包。它可以引用包裹函数中的变量，这些变量在包裹函数和函数字面值之间是共享的。并且它会一直存在直到生命周期结束。</p>
<h4 id="主要表达式"><a href="#主要表达式" class="headerlink" title="主要表达式"></a>主要表达式</h4><p>主要表达式是一元和二元表达式的运算元。</p>
<pre class="line-numbers language-go" data-language="go"><code class="language-go">PrimaryExpr <span class="token operator">=</span>
	Operand <span class="token operator">|</span>
	Conversion <span class="token operator">|</span>
	PrimaryExpr Selector <span class="token operator">|</span>
	PrimaryExpr Index <span class="token operator">|</span>
	PrimaryExpr Slice <span class="token operator">|</span>
	PrimaryExpr TypeAssertion <span class="token operator">|</span>
	PrimaryExpr Arguments <span class="token punctuation">.</span>

Selector       <span class="token operator">=</span> <span class="token string">"."</span> identifier <span class="token punctuation">.</span>
Index          <span class="token operator">=</span> <span class="token string">"["</span> Expression <span class="token string">"]"</span> <span class="token punctuation">.</span>
Slice          <span class="token operator">=</span> <span class="token string">"["</span> <span class="token punctuation">[</span> Expression <span class="token punctuation">]</span> <span class="token string">":"</span> <span class="token punctuation">[</span> Expression <span class="token punctuation">]</span> <span class="token string">"]"</span> <span class="token operator">|</span>
                 <span class="token string">"["</span> <span class="token punctuation">[</span> Expression <span class="token punctuation">]</span> <span class="token string">":"</span> Expression <span class="token string">":"</span> Expression <span class="token string">"]"</span> <span class="token punctuation">.</span>
TypeAssertion  <span class="token operator">=</span> <span class="token string">"."</span> <span class="token string">"("</span> Type <span class="token string">")"</span> <span class="token punctuation">.</span>
Arguments      <span class="token operator">=</span> <span class="token string">"("</span> <span class="token punctuation">[</span> <span class="token punctuation">(</span> ExpressionList <span class="token operator">|</span> Type <span class="token punctuation">[</span> <span class="token string">","</span> ExpressionList <span class="token punctuation">]</span> <span class="token punctuation">)</span> <span class="token punctuation">[</span> <span class="token string">"..."</span> <span class="token punctuation">]</span> <span class="token punctuation">[</span> <span class="token string">","</span> <span class="token punctuation">]</span> <span class="token punctuation">]</span> <span class="token string">")"</span> <span class="token punctuation">.</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>



<pre class="line-numbers language-go" data-language="go"><code class="language-go">x
<span class="token number">2</span>
<span class="token punctuation">(</span>s <span class="token operator">+</span> <span class="token string">".txt"</span><span class="token punctuation">)</span>
<span class="token function">f</span><span class="token punctuation">(</span><span class="token number">3.1415</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span>
Point<span class="token punctuation">&#123;</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">&#125;</span>
m<span class="token punctuation">[</span><span class="token string">"foo"</span><span class="token punctuation">]</span>
s<span class="token punctuation">[</span>i <span class="token punctuation">:</span> j <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span>
obj<span class="token punctuation">.</span>color
f<span class="token punctuation">.</span>p<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">x</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>



<h4 id="选择器"><a href="#选择器" class="headerlink" title="选择器"></a>选择器</h4><p>对于一个 x 不是包名的主要表达式，选择器表达式：</p>
<pre class="line-numbers language-go" data-language="go"><code class="language-go">x<span class="token punctuation">.</span>f<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>



<p>表示 x 的字段或方法 f（有时为 *x）。标识符 f 叫做（字段&#x2F;方法）选择器。它不能是空标识符。选择器表达式的类型就是 f 的类型。如果 x 是包名。请参考修饰标识符。</p>
<p>选择器 f 可以表示类型 T 的方法或字段 f。也可以表示类型 T 的嵌入方法或字段 f。访问 f 所需穿过的嵌套层数叫做它在类型 T 中的深度。声明在 T 中的字段或方法的深度为 0。声明在 T 的嵌入字段 A 中的方法或字段的深度等于 f 在 A 中的深度加一。</p>
<p>选择器遵循以下原则：</p>
<ul>
<li><p>对于非指针&#x2F;接口类型 T&#x2F;*T 的值 x，x.f 表示第一层的方法&#x2F;字段。如果在第一层没有对应的 f，选择器表达式就是非法的。</p>
</li>
<li><p>对于接口类型 I 的值 x，<code>x.f</code>表示动态值 x 的方法名 f。如果接口 I 的方法集中没有 f 方法，选择器就是非法的。</p>
</li>
<li><p>作为例外，如果 x 是一个指针类型并且 (*x).f 是合法的选择器表达式（只能表示字段，不能表示方法）。那么(*x).f 可以简写成 x.f。</p>
</li>
<li><p>在其他情况下，x.f 都是非法的。</p>
</li>
<li><p>如果x是指针类型，并且值为 nil，其中 f 为结构体字段。赋值或取值 x.f 会引起运行时恐慌。</p>
</li>
<li><p>如果x是接口类型，并且值为 nil。调用 x.f  会引起运行时恐慌。</p>
</li>
</ul>
<p>例如给定声明：</p>
<pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">type</span> T0 <span class="token keyword">struct</span> <span class="token punctuation">&#123;</span>
	x <span class="token builtin">int</span>
<span class="token punctuation">&#125;</span>

<span class="token keyword">func</span> <span class="token punctuation">(</span><span class="token operator">*</span>T0<span class="token punctuation">)</span> <span class="token function">M0</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token keyword">type</span> T1 <span class="token keyword">struct</span> <span class="token punctuation">&#123;</span>
	y <span class="token builtin">int</span>
<span class="token punctuation">&#125;</span>

<span class="token keyword">func</span> <span class="token punctuation">(</span>T1<span class="token punctuation">)</span> <span class="token function">M1</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token keyword">type</span> T2 <span class="token keyword">struct</span> <span class="token punctuation">&#123;</span>
	z <span class="token builtin">int</span>
	T1
	<span class="token operator">*</span>T0
<span class="token punctuation">&#125;</span>

<span class="token keyword">func</span> <span class="token punctuation">(</span><span class="token operator">*</span>T2<span class="token punctuation">)</span> <span class="token function">M2</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token keyword">type</span> Q <span class="token operator">*</span>T2

<span class="token keyword">var</span> t T2     <span class="token comment">// with t.T0 != nil</span>
<span class="token keyword">var</span> p <span class="token operator">*</span>T2    <span class="token comment">// with p != nil and (*p).T0 != nil</span>
<span class="token keyword">var</span> q Q <span class="token operator">=</span> p<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>



<p>结果：</p>
<pre class="line-numbers language-go" data-language="go"><code class="language-go">t<span class="token punctuation">.</span>z          <span class="token comment">// t.z</span>
t<span class="token punctuation">.</span>y          <span class="token comment">// t.T1.y</span>
t<span class="token punctuation">.</span>x          <span class="token comment">// (*t.T0).x</span>

p<span class="token punctuation">.</span>z          <span class="token comment">// (*p).z</span>
p<span class="token punctuation">.</span>y          <span class="token comment">// (*p).T1.y</span>
p<span class="token punctuation">.</span>x          <span class="token comment">// (*(*p).T0).x</span>

q<span class="token punctuation">.</span>x          <span class="token comment">// (*(*q).T0).x        (*q).x is a valid field selector</span>

p<span class="token punctuation">.</span><span class="token function">M0</span><span class="token punctuation">(</span><span class="token punctuation">)</span>       <span class="token comment">// ((*p).T0).M0()      M0 expects *T0 receiver</span>
p<span class="token punctuation">.</span><span class="token function">M1</span><span class="token punctuation">(</span><span class="token punctuation">)</span>       <span class="token comment">// ((*p).T1).M1()      M1 expects T1 receiver</span>
p<span class="token punctuation">.</span><span class="token function">M2</span><span class="token punctuation">(</span><span class="token punctuation">)</span>       <span class="token comment">// p.M2()              M2 expects *T2 receiver</span>
t<span class="token punctuation">.</span><span class="token function">M2</span><span class="token punctuation">(</span><span class="token punctuation">)</span>       <span class="token comment">// (&amp;t).M2()           M2 expects *T2 receiver, see section on Calls</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>



<p>但是下面这种方式是不合法的：</p>
<pre class="line-numbers language-go" data-language="go"><code class="language-go">q<span class="token punctuation">.</span><span class="token function">M0</span><span class="token punctuation">(</span><span class="token punctuation">)</span>       <span class="token comment">// (*q).M0 is valid but not a field selector</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>



<h4 id="方法表达式"><a href="#方法表达式" class="headerlink" title="方法表达式"></a>方法表达式</h4><p>如果 M 在类型 T 的方法集中。那么 T.M 就是能够正常调用的函数。使用与 M 相同的参数只是在参数列表的最前面增加了接收者参数。</p>
<pre class="line-numbers language-go" data-language="go"><code class="language-go">MethodExpr    <span class="token operator">=</span> ReceiverType <span class="token string">"."</span> MethodName <span class="token punctuation">.</span>
ReceiverType  <span class="token operator">=</span> TypeName <span class="token operator">|</span> <span class="token string">"("</span> <span class="token string">"*"</span> TypeName <span class="token string">")"</span> <span class="token operator">|</span> <span class="token string">"("</span> ReceiverType <span class="token string">")"</span> <span class="token punctuation">.</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>



<p>假设结构体 T 有两个方法。接收者类型为 T 的 Mv 方法和接收者类型为 *T 的 Mp 方法：</p>
<pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">type</span> T <span class="token keyword">struct</span> <span class="token punctuation">&#123;</span>
	a <span class="token builtin">int</span>
<span class="token punctuation">&#125;</span>
<span class="token keyword">func</span> <span class="token punctuation">(</span>tv  T<span class="token punctuation">)</span> <span class="token function">Mv</span><span class="token punctuation">(</span>a <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token builtin">int</span>         <span class="token punctuation">&#123;</span> <span class="token keyword">return</span> <span class="token number">0</span> <span class="token punctuation">&#125;</span>  <span class="token comment">// value receiver</span>
<span class="token keyword">func</span> <span class="token punctuation">(</span>tp <span class="token operator">*</span>T<span class="token punctuation">)</span> <span class="token function">Mp</span><span class="token punctuation">(</span>f <span class="token builtin">float32</span><span class="token punctuation">)</span> <span class="token builtin">float32</span> <span class="token punctuation">&#123;</span> <span class="token keyword">return</span> <span class="token number">1</span> <span class="token punctuation">&#125;</span>  <span class="token comment">// pointer receiver</span>

<span class="token keyword">var</span> t T<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>



<p>表达式</p>
<pre class="line-numbers language-go" data-language="go"><code class="language-go">T<span class="token punctuation">.</span>Mv<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>



<p>将会生成一个等价于 Mv 方法只是第一个参数显式声明接受者的函数。它的签名为：</p>
<pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">func</span><span class="token punctuation">(</span>tv T<span class="token punctuation">,</span> a <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token builtin">int</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>



<p>这个函数能够通过接收者正常调用，以下5种方式是等价的：</p>
<pre class="line-numbers language-go" data-language="go"><code class="language-go">t<span class="token punctuation">.</span><span class="token function">Mv</span><span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">)</span>
T<span class="token punctuation">.</span><span class="token function">Mv</span><span class="token punctuation">(</span>t<span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">)</span>
<span class="token punctuation">(</span>T<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Mv</span><span class="token punctuation">(</span>t<span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">)</span>
f1 <span class="token operator">:=</span> T<span class="token punctuation">.</span>Mv<span class="token punctuation">;</span> <span class="token function">f1</span><span class="token punctuation">(</span>t<span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">)</span>
f2 <span class="token operator">:=</span> <span class="token punctuation">(</span>T<span class="token punctuation">)</span><span class="token punctuation">.</span>Mv<span class="token punctuation">;</span> <span class="token function">f2</span><span class="token punctuation">(</span>t<span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>



<p>与之类似：</p>
<pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token punctuation">(</span><span class="token operator">*</span>T<span class="token punctuation">)</span><span class="token punctuation">.</span>Mp<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>



<p>生成表示 Mp 的函数签名：</p>
<pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">func</span><span class="token punctuation">(</span>tp <span class="token operator">*</span>T<span class="token punctuation">,</span> f <span class="token builtin">float32</span><span class="token punctuation">)</span> <span class="token builtin">float32</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>



<p>对于一个把值作为接收者的方法，我们可以显式的从指针接收者获得函数：</p>
<pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token punctuation">(</span><span class="token operator">*</span>T<span class="token punctuation">)</span><span class="token punctuation">.</span>Mv<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>



<p>生成表示 Mv 的函数签名：</p>
<pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">func</span><span class="token punctuation">(</span>tv <span class="token operator">*</span>T<span class="token punctuation">,</span> a <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token builtin">int</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>



<p>这样的函数会通过接收者间接的创建一个值作为接收者传入底层方法中。方法内不能修改接收者的值，因为它的地址是在函数的调用栈里面。</p>
<p>最后一个例子。把值作为接收者函数当做指针作为接收者的方法是非法的，因为指针接收者的方法集中不包含值类型的方法集。</p>
<p>通过函数调用语法从方法中获取函数的值。接收者作为调用函数的第一个参数。给定  <code>f :=T.Mv</code>，f 作为<code>f(t,7)</code> 进行调用而不是 <code>t.f(7)</code>。想创建一个绑定接收者的函数可以使用函数字面值或者方法值。</p>
<p>在接口类型中定义函数获取函数值是合法的。最终的函数调用会使用接口类型作为接收者。</p>
<h4 id="方法值"><a href="#方法值" class="headerlink" title="方法值"></a>方法值</h4><p>如果表达式 x 拥有静态类型 T 并且 M 在类型 T 的方法集中。x.M 叫做方法值。方法值 <code>x.M</code> 是一个函数值，这个函数和 x.M 拥有相同的参数列表。表达式 x 在计算方法值时会被保存和计算，这个拷贝的副本会作为任何接下来调用的接收者。</p>
<p>类型 T 可能是接口类型也可能不是接口类型。</p>
<p>与方法表达式中讲过的一样，假设类型 T 有两个方法：接收者类型为 T 的 Mv 和接受者类型为 *T 的 Mp ：</p>
<pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">type</span> T <span class="token keyword">struct</span> <span class="token punctuation">&#123;</span>
	a <span class="token builtin">int</span>
<span class="token punctuation">&#125;</span>
<span class="token keyword">func</span> <span class="token punctuation">(</span>tv  T<span class="token punctuation">)</span> <span class="token function">Mv</span><span class="token punctuation">(</span>a <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token builtin">int</span>         <span class="token punctuation">&#123;</span> <span class="token keyword">return</span> <span class="token number">0</span> <span class="token punctuation">&#125;</span>  <span class="token comment">// value receiver</span>
<span class="token keyword">func</span> <span class="token punctuation">(</span>tp <span class="token operator">*</span>T<span class="token punctuation">)</span> <span class="token function">Mp</span><span class="token punctuation">(</span>f <span class="token builtin">float32</span><span class="token punctuation">)</span> <span class="token builtin">float32</span> <span class="token punctuation">&#123;</span> <span class="token keyword">return</span> <span class="token number">1</span> <span class="token punctuation">&#125;</span>  <span class="token comment">// pointer receiver</span>

<span class="token keyword">var</span> t T
<span class="token keyword">var</span> pt <span class="token operator">*</span>T
<span class="token keyword">func</span> <span class="token function">makeT</span><span class="token punctuation">(</span><span class="token punctuation">)</span> T<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>



<p>表达式：</p>
<pre class="line-numbers language-go" data-language="go"><code class="language-go">t<span class="token punctuation">.</span>Mv<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>



<p>生成一个类型的函数值：</p>
<pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">func</span><span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token builtin">int</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>



<p>以下两种调用是等价的：</p>
<pre class="line-numbers language-go" data-language="go"><code class="language-go">t<span class="token punctuation">.</span><span class="token function">Mv</span><span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">)</span>
f <span class="token operator">:=</span> t<span class="token punctuation">.</span>Mv<span class="token punctuation">;</span> <span class="token function">f</span><span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>



<p>相似的，表达式：</p>
<pre class="line-numbers language-go" data-language="go"><code class="language-go">pt<span class="token punctuation">.</span>Mp<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>



<p>生成一个类型的函数值：</p>
<pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">func</span><span class="token punctuation">(</span><span class="token builtin">float32</span><span class="token punctuation">)</span> <span class="token builtin">float32</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>



<p>与选择器相同，使用指针调用以值作为接收者的非接口方法会自动将指针解引用：<code>pt.Mv</code> 等价于 <code>(*pt).Mv</code>。</p>
<p>与方法调用相同，使用值调用以指针作为接收者的非接口方法会自动对值取址：<code>pt.Mv</code> 等价于 <code>(&amp;pt).Mv</code>。</p>
<pre class="line-numbers language-go" data-language="go"><code class="language-go">f <span class="token operator">:=</span> t<span class="token punctuation">.</span>Mv<span class="token punctuation">;</span> <span class="token function">f</span><span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">)</span>   <span class="token comment">// like t.Mv(7)</span>
f <span class="token operator">:=</span> pt<span class="token punctuation">.</span>Mp<span class="token punctuation">;</span> <span class="token function">f</span><span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">)</span>  <span class="token comment">// like pt.Mp(7)</span>
f <span class="token operator">:=</span> pt<span class="token punctuation">.</span>Mv<span class="token punctuation">;</span> <span class="token function">f</span><span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">)</span>  <span class="token comment">// like (*pt).Mv(7)</span>
f <span class="token operator">:=</span> t<span class="token punctuation">.</span>Mp<span class="token punctuation">;</span> <span class="token function">f</span><span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">)</span>   <span class="token comment">// like (&amp;t).Mp(7)</span>
f <span class="token operator">:=</span> <span class="token function">makeT</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>Mp   <span class="token comment">// invalid: result of makeT() is not addressable</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>



<p>尽管上面使用的都是非接口类型的例子，不过对于接口类型同样适用。</p>
<pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">var</span> i <span class="token keyword">interface</span> <span class="token punctuation">&#123;</span> <span class="token function">M</span><span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token punctuation">&#125;</span> <span class="token operator">=</span> myVal
f <span class="token operator">:=</span> i<span class="token punctuation">.</span>M<span class="token punctuation">;</span> <span class="token function">f</span><span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">)</span>  <span class="token comment">// like i.M(7)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>



<h4 id="index表达式"><a href="#index表达式" class="headerlink" title="index表达式"></a>index表达式</h4><p>主要表达式格式：</p>
<pre class="line-numbers language-go" data-language="go"><code class="language-go">a<span class="token punctuation">[</span>x<span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>



<p>可以表示数组元素、数组的指针、切片、字符串或 map 类型 a 索引 x 对应的值。x 称作索引或者 map 的键。遵循以下规则：</p>
<p>如果a不是 map 类型：</p>
<ul>
<li><p>索引 x 必须是整型或无类型常量。</p>
</li>
<li><p>常量索引必须是非负数且可以使用 int 类型表示。</p>
</li>
<li><p>无类型的常量索引会作为 int 型的值。</p>
</li>
<li><p>索引 x 的范围在 <code>0&lt;=x&lt;len(a)</code> 内，否则就是越界。</p>
</li>
</ul>
<p>对于数组类型 A：</p>
<ul>
<li><p>常量索引必须在合法范围内。</p>
</li>
<li><p>如果 x 在运行时越界会引起运行时恐慌。</p>
</li>
<li><p><code>a[x]</code> 表示数组在索引 x 处的元素。<code>a[x]</code> 的类型就是 A 的元素类型。</p>
</li>
</ul>
<p>对于数组的指针类型：</p>
<ul>
<li>可以使用 <code>a[x]</code> 表示 <code>(*a)[x]</code>。</li>
</ul>
<p>对于切片类型 S：</p>
<ul>
<li>如果 x 在运行时越界会引起运行时恐慌。</li>
<li><code>a[x]</code> 表示切片在索引 x 处的元素。<code>a[x]</code> 的类型就是 S 的元素类型。</li>
</ul>
<p>对于字符串类型：</p>
<ul>
<li><p>如果字符串 a 为常量，那么常量索引必须在合法范围内。</p>
</li>
<li><p>如果 x 在运行时越界会引起运行时恐慌。</p>
</li>
<li><p>a[x] 表示索引 x 处的非常量字节，它是byte类型。</p>
</li>
<li><p>不能对 a[x] 分配值。</p>
</li>
</ul>
<p>对于 map 类型 M：</p>
<ul>
<li><p>必须保证 x 的类型能够给 M 的键分配值。</p>
</li>
<li><p>如果map包含键为 x 的值，a[x] 就是 map 中键 x 对应的值，它的类型就是 M 的元素类型。</p>
</li>
<li><p>如果 map 值为 nil 或不包含这个实体，那么 a[x] 为 M 元素类型的零值。</p>
</li>
</ul>
<p>否则 a[x] 就是非法的。</p>
<p>基于 <code>map[K]V</code> 类型  a 的索引表达式可以使用特殊格式的赋值和初始化语法。</p>
<pre class="line-numbers language-go" data-language="go"><code class="language-go">v<span class="token punctuation">,</span> ok <span class="token operator">=</span> a<span class="token punctuation">[</span>x<span class="token punctuation">]</span>
v<span class="token punctuation">,</span> ok <span class="token operator">:=</span> a<span class="token punctuation">[</span>x<span class="token punctuation">]</span>
<span class="token keyword">var</span> v<span class="token punctuation">,</span> ok <span class="token operator">=</span> a<span class="token punctuation">[</span>x<span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>



<p>它会额外生成一个无类型的布尔值。如果 ok 是 true，那么代表在map中有该键，如果没有 ok 为 false。</p>
<p>给一个值为 nil 的 map 类型变量赋值会导致运行时恐慌。</p>
<h4 id="切片表达式"><a href="#切片表达式" class="headerlink" title="切片表达式"></a>切片表达式</h4><p>切片表达式可以基于字符串、数组、数组指针、切片创建字符串子串或切片。它有两种变体，一种是简单的格式是指定开始和结束位置，完全格式的语法还可以指定容量。</p>
<p>####### 简单切片表达式</p>
<p>对于数组、字符串、指针数组、切片 a，主要表达式：</p>
<pre class="line-numbers language-go" data-language="go"><code class="language-go">a<span class="token punctuation">[</span>low<span class="token punctuation">:</span>high<span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>



<p>可以构造字符串子串或切片。索引 <code>low</code> 和 <code>high</code> 决定结果切片中的元素。结果切片的索引从 0 开始，长度为 <code>high - low</code>。从数组切分出的切片 s 拥有类型 <code>[]int</code>，长度为 3 ，容积为 4。</p>
<pre class="line-numbers language-go" data-language="go"><code class="language-go">a <span class="token operator">:=</span> <span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token builtin">int</span><span class="token punctuation">&#123;</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">&#125;</span>
s <span class="token operator">:=</span> a<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token number">4</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>



<pre class="line-numbers language-go" data-language="go"><code class="language-go">s<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">2</span>
s<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">3</span>
s<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">4</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>



<p>为了方便起见，索引值都可以缺省。当 low 缺省时默认从 0 开始。当缺 high 缺省时默认的取切片的长度。</p>
<pre class="line-numbers language-go" data-language="go"><code class="language-go">a<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">:</span><span class="token punctuation">]</span>  <span class="token comment">// same as a[2 : len(a)]</span>
a<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token number">3</span><span class="token punctuation">]</span>  <span class="token comment">// same as a[0 : 3]</span>
a<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">]</span>   <span class="token comment">// same as a[0 : len(a)]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>



<p>如果 a 是一个数组指针，那么 <code>a[low:high]</code> 可以表示 <code>(*a)[low : high]</code>。</p>
<p>对于数组或者字符串，索引的范围是<code>0&lt;=low&lt;=high&lt;=len(a)</code>。对于切片，最大的索引值可以为切片的容量，而不是切片的长度。常量索引必须为非负数，且能够转换成 int 类型。对于数组或者常量字符串。常量索引值必须在合法范围内。如果2个索引都是常量。low 必须小于 high。如果索引在运行时访问了非法内存，程序会发生运行时恐慌。</p>
<p>除了无类型字符串，对于切片和字符串的操作结果是非常量类型的值，它的类型与运算元相同。如果运算元为无类型字符串，那么结果类型会为 string。如果把数组作为运算元，它必须是可寻址的，并且获得的切片和原数组具有同一元素类型。</p>
<p>如果切片运算元为 nil，那么结果也是 nil。否则结果切片会和运算元共享相同的底层无类型数组。</p>
<h6 id="完全切片表达式"><a href="#完全切片表达式" class="headerlink" title="完全切片表达式"></a>完全切片表达式</h6><p>对于数组，数组指针或非字符串切片，主要表达式为：</p>
<pre class="line-numbers language-go" data-language="go"><code class="language-go">a<span class="token punctuation">[</span>low <span class="token punctuation">:</span> high <span class="token punctuation">:</span> max<span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>



<p>它会构造一个同类型切片，并具有与简单切片表达式的 <code>a[low:high]</code> 相同的长度和元素。另外，它还可以把切片的容量设置为 <code>max - low</code>。这时只有第一个索引可以为缺省值，默认为零。从数组中获得切片以后：</p>
<pre class="line-numbers language-go" data-language="go"><code class="language-go">a <span class="token operator">:=</span> <span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token builtin">int</span><span class="token punctuation">&#123;</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">&#125;</span>
t <span class="token operator">:=</span> a<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token number">3</span><span class="token punctuation">:</span><span class="token number">5</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>



<p>切片 t 为 []int 类型，长度为 2，容量为 4，并且元素为：</p>
<pre class="line-numbers language-go" data-language="go"><code class="language-go">t<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">2</span>
t<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">3</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>



<p>和简单切片表达式一样，如果 a 是数组指针 ，那么 <code>a[low:high:max]</code> 可以简写为 <code>(*a)[low:high:max]</code>。如果切分操作元是数组，那么这个数组必须是可以寻址的。</p>
<p>如果索引必须在 <code>0 &lt;= low &lt;= high &lt;= max &lt;= cap(a)</code> 范围内。常量索引不能是负数并且能够使用 <code>int</code> 类型表示；对于数组，索引必须在合法范围内。如果有多个索引都是常量的，那么所有索引都需要在合法范围内。如果索引是非法的，会引起运行时恐慌。</p>
<h4 id="类型断言"><a href="#类型断言" class="headerlink" title="类型断言"></a>类型断言</h4><p>对于接口类型 x 和类型 T，主要表达式：</p>
<pre class="line-numbers language-go" data-language="go"><code class="language-go">x<span class="token punctuation">.</span><span class="token punctuation">(</span>T<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>



<p>可以断言 x 不是 nil  且 x 的值是 T 类型。标记 x.(T) 叫做类型断言。</p>
<p>更确切的说，如果 T 不是接口类型，那么 x.(T) 将会断言动态类型 x 的类型是不是 T。</p>
<p>这时，T 必须实现了 x 的（接口）类型。否则断言会是非法的因为 x 不能保存 T 类型的值。如果 T 是接口类型，那么可以断言动态类型 x 是否实现了 T 接口。</p>
<p>如果类型断言成功，表达式的值为 x 的值，但它的类型是T。如果断言失败，将会导致运行时恐慌。换句话说，即使 x 是运行时确定的，x.(T) 也必须是编程时就确认存在的。</p>
<pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">var</span> x <span class="token keyword">interface</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span> <span class="token operator">=</span> <span class="token number">7</span>          <span class="token comment">// x 拥有动态类型 int 值为 7</span>
i <span class="token operator">:=</span> x<span class="token punctuation">.</span><span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">)</span>                   <span class="token comment">// i 为 int 类型值为 7</span>

<span class="token keyword">type</span> I <span class="token keyword">interface</span> <span class="token punctuation">&#123;</span> <span class="token function">m</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#125;</span>

<span class="token keyword">func</span> <span class="token function">f</span><span class="token punctuation">(</span>y I<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
   s <span class="token operator">:=</span> y<span class="token punctuation">.</span><span class="token punctuation">(</span><span class="token builtin">string</span><span class="token punctuation">)</span>        <span class="token comment">// 非法: 字符串没有实现接口 I （缺少 m 方法）</span>
   r <span class="token operator">:=</span> y<span class="token punctuation">.</span><span class="token punctuation">(</span>io<span class="token punctuation">.</span>Reader<span class="token punctuation">)</span>     <span class="token comment">// r 拥有接口 io.Reader 所以 y 的动态类型必须同时实现 I 和 io.Reader</span>
   …
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>



<p>类型断言可以使用特定格式的赋值和初始化语句。</p>
<pre class="line-numbers language-go" data-language="go"><code class="language-go">v<span class="token punctuation">,</span> ok <span class="token operator">=</span> x<span class="token punctuation">.</span><span class="token punctuation">(</span>T<span class="token punctuation">)</span>
v<span class="token punctuation">,</span> ok <span class="token operator">:=</span> x<span class="token punctuation">.</span><span class="token punctuation">(</span>T<span class="token punctuation">)</span>
<span class="token keyword">var</span> v<span class="token punctuation">,</span> ok <span class="token operator">=</span> x<span class="token punctuation">.</span><span class="token punctuation">(</span>T<span class="token punctuation">)</span>
<span class="token keyword">var</span> v<span class="token punctuation">,</span> ok T1 <span class="token operator">=</span> x<span class="token punctuation">.</span><span class="token punctuation">(</span>T<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>



<p>这时将会额外生成一个无类型的布尔值。如果断言成功，ok返回 <code>true</code>，否则是 <code>false</code>。并且 v 会是 T 类型的零值。这时不会有恐慌发生。</p>
<h4 id="调用"><a href="#调用" class="headerlink" title="调用"></a>调用</h4><p>给定函数类型为 F 的表达式 f：</p>
<pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token function">f</span><span class="token punctuation">(</span>a1<span class="token punctuation">,</span> a2<span class="token punctuation">,</span> … an<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>



<p>可以使用 a1,a2…an 来调用函数 f。除一种特殊情况之外，函数参数必须是对应 F 函数参数类型的单值表达式，且在函数调用前就已经完成求值。表达式的结果类型是 f 的结果类型。函数调用和方法调用相似，只是方法额外需要一个接收者类型。</p>
<pre class="line-numbers language-go" data-language="go"><code class="language-go">math<span class="token punctuation">.</span><span class="token function">Atan2</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">)</span>  <span class="token comment">// function call</span>
<span class="token keyword">var</span> pt <span class="token operator">*</span>Point
pt<span class="token punctuation">.</span><span class="token function">Scale</span><span class="token punctuation">(</span><span class="token number">3.5</span><span class="token punctuation">)</span>     <span class="token comment">// method call with receiver pt</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>



<p>在函数调用中，函数的值和参数是按照顺序求值的。在计算之后作为参数会传进函数，函数开始执行。当函数执行完成后返回的参数将会返回给函数的调用者。</p>
<p>调用值为 nil 的函数会导致运行时恐慌。</p>
<p>作为特例，如果函数或者方法的返回值等于参数列表的个数，那么会嵌套调用。这将把返回值直接赋值给下一次调用函数的参数。</p>
<pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">func</span> <span class="token function">Split</span><span class="token punctuation">(</span>s <span class="token builtin">string</span><span class="token punctuation">,</span> pos <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token builtin">string</span><span class="token punctuation">,</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
	<span class="token keyword">return</span> s<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">:</span>pos<span class="token punctuation">]</span><span class="token punctuation">,</span> s<span class="token punctuation">[</span>pos<span class="token punctuation">:</span><span class="token punctuation">]</span>
<span class="token punctuation">&#125;</span>

<span class="token keyword">func</span> <span class="token function">Join</span><span class="token punctuation">(</span>s<span class="token punctuation">,</span> t <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token builtin">string</span> <span class="token punctuation">&#123;</span>
	<span class="token keyword">return</span> s <span class="token operator">+</span> t
<span class="token punctuation">&#125;</span>

<span class="token keyword">if</span> <span class="token function">Join</span><span class="token punctuation">(</span><span class="token function">Split</span><span class="token punctuation">(</span>value<span class="token punctuation">,</span> <span class="token function">len</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token operator">/</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">!=</span> value <span class="token punctuation">&#123;</span>
	log<span class="token punctuation">.</span><span class="token function">Panic</span><span class="token punctuation">(</span><span class="token string">"test fails"</span><span class="token punctuation">)</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>



<p>如果 x 的方法集中包含 m 那么 <code>x.m()</code> 是合法的。并且参数列表和 m 的参数列表相同。如果x是可寻址的，那么那么x指针的方法集<code>(&amp;x).m()</code>可以简写成<code>x.m()</code>。</p>
<pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">var</span> p Point
p<span class="token punctuation">.</span><span class="token function">Scale</span><span class="token punctuation">(</span><span class="token number">3.5</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>



<p>没有方法类型，也没有方法字面值。</p>
<h4 id="通过-来传递参数"><a href="#通过-来传递参数" class="headerlink" title="通过 ... 来传递参数"></a>通过 <code>...</code> 来传递参数</h4><p>如果 f 的最后一个参数 p 的类型是 <code>...T</code>。那么在函数内部 p 参数的类型就是 <code>[]T</code>。如果 f 调用时没有传入 p 对应的参数，那么p为 nil。否则这些参数会以切片方式传入，在新的底层切片中。切片中的类型都是能赋值给类型 T 的值。这个切片的长度和容量在不同的调用中有所不同。</p>
<p>给定函数调用：</p>
<pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">func</span> <span class="token function">Greeting</span><span class="token punctuation">(</span>prefix <span class="token builtin">string</span><span class="token punctuation">,</span> who <span class="token operator">...</span><span class="token builtin">string</span><span class="token punctuation">)</span>
<span class="token function">Greeting</span><span class="token punctuation">(</span><span class="token string">"nobody"</span><span class="token punctuation">)</span>
<span class="token function">Greeting</span><span class="token punctuation">(</span><span class="token string">"hello:"</span><span class="token punctuation">,</span> <span class="token string">"Joe"</span><span class="token punctuation">,</span> <span class="token string">"Anna"</span><span class="token punctuation">,</span> <span class="token string">"Eileen"</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>



<p>在 <code>Greeting</code> 中，第一次调用时，<code>who</code>是 nil 类型。而在第二次调用时是<code>[]string&#123;&quot;Joe&quot;, &quot;Anna&quot;, &quot;Eileen&quot;&#125;</code>。</p>
<p>如果在调用的时候的最后一个参数是[]T，那么我们可以使用<code>...</code>来将切片中的值依次赋值给参数列表。</p>
<p>给定切片s并且调用:</p>
<pre class="line-numbers language-go" data-language="go"><code class="language-go">s <span class="token operator">:=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">string</span><span class="token punctuation">&#123;</span><span class="token string">"James"</span><span class="token punctuation">,</span> <span class="token string">"Jasmine"</span><span class="token punctuation">&#125;</span>
<span class="token function">Greeting</span><span class="token punctuation">(</span><span class="token string">"goodbye:"</span><span class="token punctuation">,</span> s<span class="token operator">...</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>



<p>z 在 <code>Greeting</code>。中 <code>who</code> 会和切片 s 共享相同的底层数组。</p>
<h4 id="操作符"><a href="#操作符" class="headerlink" title="操作符"></a>操作符</h4><p>操作符用来连接运算元。</p>
<pre class="line-numbers language-go" data-language="go"><code class="language-go">Expression <span class="token operator">=</span> UnaryExpr <span class="token operator">|</span> Expression binary_op Expression <span class="token punctuation">.</span>
UnaryExpr  <span class="token operator">=</span> PrimaryExpr <span class="token operator">|</span> unary_op UnaryExpr <span class="token punctuation">.</span>

binary_op  <span class="token operator">=</span> <span class="token string">"||"</span> <span class="token operator">|</span> <span class="token string">"&amp;&amp;"</span> <span class="token operator">|</span> rel_op <span class="token operator">|</span> add_op <span class="token operator">|</span> mul_op <span class="token punctuation">.</span>
rel_op     <span class="token operator">=</span> <span class="token string">"=="</span> <span class="token operator">|</span> <span class="token string">"!="</span> <span class="token operator">|</span> <span class="token string">"&lt;"</span> <span class="token operator">|</span> <span class="token string">"&lt;="</span> <span class="token operator">|</span> <span class="token string">">"</span> <span class="token operator">|</span> <span class="token string">">="</span> <span class="token punctuation">.</span>
add_op     <span class="token operator">=</span> <span class="token string">"+"</span> <span class="token operator">|</span> <span class="token string">"-"</span> <span class="token operator">|</span> <span class="token string">"|"</span> <span class="token operator">|</span> <span class="token string">"^"</span> <span class="token punctuation">.</span>
mul_op     <span class="token operator">=</span> <span class="token string">"*"</span> <span class="token operator">|</span> <span class="token string">"/"</span> <span class="token operator">|</span> <span class="token string">"%"</span> <span class="token operator">|</span> <span class="token string">"&lt;&lt;"</span> <span class="token operator">|</span> <span class="token string">">>"</span> <span class="token operator">|</span> <span class="token string">"&amp;"</span> <span class="token operator">|</span> <span class="token string">"&amp;^"</span> <span class="token punctuation">.</span>

unary_op   <span class="token operator">=</span> <span class="token string">"+"</span> <span class="token operator">|</span> <span class="token string">"-"</span> <span class="token operator">|</span> <span class="token string">"!"</span> <span class="token operator">|</span> <span class="token string">"^"</span> <span class="token operator">|</span> <span class="token string">"*"</span> <span class="token operator">|</span> <span class="token string">"&amp;"</span> <span class="token operator">|</span> <span class="token string">"&lt;-"</span> <span class="token punctuation">.</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>



<p>比较运算符在此处讨论。对于其他二元操作符，两个操作元的类型必须是相同的，除了位移和无类型常量。针对常量的操作，请看常量表达式章节。</p>
<p>除了位移操作，如果其中一个操作符是无类型常量，而另个不是，那么无类型的常量会转换成另一个运算元的类型。</p>
<p>在右移表达式中的运算元必须是无符号的整数或者可以转换成 uint 的无类型的常量。如果左移一个无类型常量那么结果依然是无类型的。他首先会转换成指定类型。</p>
<pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">var</span> s <span class="token builtin">uint</span> <span class="token operator">=</span> <span class="token number">33</span>
<span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token operator">&lt;&lt;</span>s           <span class="token comment">// 1 has type int</span>
<span class="token keyword">var</span> j <span class="token builtin">int32</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token operator">&lt;&lt;</span>s     <span class="token comment">// 1 has type int32; j == 0</span>
<span class="token keyword">var</span> k <span class="token operator">=</span> <span class="token function">uint64</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">&lt;&lt;</span>s<span class="token punctuation">)</span>   <span class="token comment">// 1 has type uint64; k == 1&lt;&lt;33</span>
<span class="token keyword">var</span> m <span class="token builtin">int</span> <span class="token operator">=</span> <span class="token number">1.0</span><span class="token operator">&lt;&lt;</span>s     <span class="token comment">// 1.0 has type int; m == 0 if ints are 32bits in size</span>
<span class="token keyword">var</span> n <span class="token operator">=</span> <span class="token number">1.0</span><span class="token operator">&lt;&lt;</span>s <span class="token operator">==</span> j    <span class="token comment">// 1.0 has type int32; n == true</span>
<span class="token keyword">var</span> o <span class="token operator">=</span> <span class="token number">1</span><span class="token operator">&lt;&lt;</span>s <span class="token operator">==</span> <span class="token number">2</span><span class="token operator">&lt;&lt;</span>s   <span class="token comment">// 1 and 2 have type int; o == true if ints are 32bits in size</span>
<span class="token keyword">var</span> p <span class="token operator">=</span> <span class="token number">1</span><span class="token operator">&lt;&lt;</span>s <span class="token operator">==</span> <span class="token number">1</span><span class="token operator">&lt;&lt;</span><span class="token number">33</span>  <span class="token comment">// illegal if ints are 32bits in size: 1 has type int, but 1&lt;&lt;33 overflows int</span>
<span class="token keyword">var</span> u <span class="token operator">=</span> <span class="token number">1.0</span><span class="token operator">&lt;&lt;</span>s         <span class="token comment">// illegal: 1.0 has type float64, cannot shift</span>
<span class="token keyword">var</span> u1 <span class="token operator">=</span> <span class="token number">1.0</span><span class="token operator">&lt;&lt;</span>s <span class="token operator">!=</span> <span class="token number">0</span>   <span class="token comment">// illegal: 1.0 has type float64, cannot shift</span>
<span class="token keyword">var</span> u2 <span class="token operator">=</span> <span class="token number">1</span><span class="token operator">&lt;&lt;</span>s <span class="token operator">!=</span> <span class="token number">1.0</span>   <span class="token comment">// illegal: 1 has type float64, cannot shift</span>
<span class="token keyword">var</span> v <span class="token builtin">float32</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token operator">&lt;&lt;</span>s   <span class="token comment">// illegal: 1 has type float32, cannot shift</span>
<span class="token keyword">var</span> w <span class="token builtin">int64</span> <span class="token operator">=</span> <span class="token number">1.0</span><span class="token operator">&lt;&lt;</span><span class="token number">33</span>  <span class="token comment">// 1.0&lt;&lt;33 is a constant shift expression</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>



<h6 id="运算符优先级"><a href="#运算符优先级" class="headerlink" title="运算符优先级"></a>运算符优先级</h6><p>一元运算符拥有最高优先级。++ 和 – 是语句而不是表达式，他们在运算符的优先级之外。所以 (*p)++ 和 *p++ 是一样的。</p>
<p>二元运算符有 5 个优先级。乘法运算符在最高级，紧接着是加法运算符。比较运算符，&amp;&amp; 运算符，最后是 ||。</p>
<pre class="line-numbers language-go" data-language="go"><code class="language-go">Precedence    Operator
    <span class="token number">5</span>             <span class="token operator">*</span>  <span class="token operator">/</span>  <span class="token operator">%</span>  <span class="token operator">&lt;&lt;</span>  <span class="token operator">>></span>  <span class="token operator">&amp;</span>  <span class="token operator">&amp;^</span>
    <span class="token number">4</span>             <span class="token operator">+</span>  <span class="token operator">-</span>  <span class="token operator">|</span>  <span class="token operator">^</span>
    <span class="token number">3</span>             <span class="token operator">==</span>  <span class="token operator">!=</span>  <span class="token operator">&lt;</span>  <span class="token operator">&lt;=</span>  <span class="token operator">></span>  <span class="token operator">>=</span>
    <span class="token number">2</span>             <span class="token operator">&amp;&amp;</span>
    <span class="token number">1</span>             <span class="token operator">||</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>



<p>相同优先级的二元运算符的执行顺序是由左到右。例如 <code>x/y*z</code>和<code>(x/y)*z</code> 是一样的。</p>
<pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token operator">+</span>x
<span class="token number">23</span> <span class="token operator">+</span> <span class="token number">3</span><span class="token operator">*</span>x<span class="token punctuation">[</span>i<span class="token punctuation">]</span>
x <span class="token operator">&lt;=</span> <span class="token function">f</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token operator">^</span>a <span class="token operator">>></span> b
<span class="token function">f</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token function">g</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
x <span class="token operator">==</span> y<span class="token operator">+</span><span class="token number">1</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">&lt;-</span>chanPtr <span class="token operator">></span> <span class="token number">0</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>



<h4 id="算数运算符"><a href="#算数运算符" class="headerlink" title="算数运算符"></a>算数运算符</h4><p>算数运算符应用在 2 个数字值之间，别切生成一个相同类型的值作为第一个运算元。四种算数运算符(+,-,*,&#x2F;)应用在数字，浮点，复合类型之中。+ 也可以用于字符串。位运算和位移运算只适用于整数。</p>
<pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token operator">+</span>    sum                    integers<span class="token punctuation">,</span> floats<span class="token punctuation">,</span> <span class="token builtin">complex</span> values<span class="token punctuation">,</span> strings
<span class="token operator">-</span>    difference             integers<span class="token punctuation">,</span> floats<span class="token punctuation">,</span> <span class="token builtin">complex</span> values
<span class="token operator">*</span>    product                integers<span class="token punctuation">,</span> floats<span class="token punctuation">,</span> <span class="token builtin">complex</span> values
<span class="token operator">/</span>    quotient               integers<span class="token punctuation">,</span> floats<span class="token punctuation">,</span> <span class="token builtin">complex</span> values
<span class="token operator">%</span>    remainder              integers

<span class="token operator">&amp;</span>    bitwise AND            integers
<span class="token operator">|</span>    bitwise OR             integers
<span class="token operator">^</span>    bitwise XOR            integers
<span class="token operator">&amp;^</span>   bit clear <span class="token punctuation">(</span>AND NOT<span class="token punctuation">)</span>    integers

<span class="token operator">&lt;&lt;</span>   left shift             integer <span class="token operator">&lt;&lt;</span> unsigned integer
<span class="token operator">>></span>   right shift            integer <span class="token operator">>></span> unsigned integer<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>



<h6 id="数字运算符"><a href="#数字运算符" class="headerlink" title="数字运算符"></a>数字运算符</h6><p>对于两个整数 x 和 y。整数商 <code>q=x/y</code> 和余数 <code>r=x%y</code> 遵循以下规律。</p>
<pre class="line-numbers language-go" data-language="go"><code class="language-go">x <span class="token operator">=</span> q<span class="token operator">*</span>y <span class="token operator">+</span> r  and  <span class="token operator">|</span>r<span class="token operator">|</span> <span class="token operator">&lt;</span> <span class="token operator">|</span>y<span class="token operator">|</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>



<p><code>x/y</code> 截断为 0。</p>
<pre class="line-numbers language-go" data-language="go"><code class="language-go">x     y     x <span class="token operator">/</span> y     x <span class="token operator">%</span> y
 <span class="token number">5</span>     <span class="token number">3</span>       <span class="token number">1</span>         <span class="token number">2</span>
<span class="token operator">-</span><span class="token number">5</span>     <span class="token number">3</span>      <span class="token operator">-</span><span class="token number">1</span>        <span class="token operator">-</span><span class="token number">2</span>
 <span class="token number">5</span>    <span class="token operator">-</span><span class="token number">3</span>      <span class="token operator">-</span><span class="token number">1</span>         <span class="token number">2</span>
<span class="token operator">-</span><span class="token number">5</span>    <span class="token operator">-</span><span class="token number">3</span>       <span class="token number">1</span>        <span class="token operator">-</span><span class="token number">2</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>



<p>作为这个规则的例外情况，如果 x 非常大，那么 <code>q=x/-1</code> 等于 x。</p>
<pre class="line-numbers language-go" data-language="go"><code class="language-go">x<span class="token punctuation">,</span> q
<span class="token builtin">int8</span>                     <span class="token operator">-</span><span class="token number">128</span>
<span class="token builtin">int16</span>                  <span class="token operator">-</span><span class="token number">32768</span>
<span class="token builtin">int32</span>             <span class="token operator">-</span><span class="token number">2147483648</span>
<span class="token builtin">int64</span>    <span class="token operator">-</span><span class="token number">9223372036854775808</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>



<p>如果除数是一个常量。那么它不能是 0，如果除数在运行时为 0，会导致运行时恐慌。如果除数是负数并且除数是：</p>
<pre class="line-numbers language-go" data-language="go"><code class="language-go">x     x <span class="token operator">/</span> <span class="token number">4</span>     x <span class="token operator">%</span> <span class="token number">4</span>     x <span class="token operator">>></span> <span class="token number">2</span>     x <span class="token operator">&amp;</span> <span class="token number">3</span>
 <span class="token number">11</span>      <span class="token number">2</span>         <span class="token number">3</span>         <span class="token number">2</span>          <span class="token number">3</span>
<span class="token operator">-</span><span class="token number">11</span>     <span class="token operator">-</span><span class="token number">2</span>        <span class="token operator">-</span><span class="token number">3</span>        <span class="token operator">-</span><span class="token number">3</span>          <span class="token number">1</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>



<p>位移运算符移动左侧运算元右侧元算元指定的位数。如果左侧是有符号整型，那它就实现了位移运算，如果是无符号整数使用逻辑位移。位移运算没有上限，位移操作让左边运算元位移 n 个 1。<code>x&lt;&lt;1</code> 和 <code>x*2</code> 是相等的。并且 <code>x&gt;&gt;1</code> 和 <code>x/2</code> 是相同的。</p>
<p>对于整数运算元，一元运算符+-^定义如下：</p>
<pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token operator">+</span>x                          is <span class="token number">0</span> <span class="token operator">+</span> x
<span class="token operator">-</span>x    negation              is <span class="token number">0</span> <span class="token operator">-</span> x
<span class="token operator">^</span>x    bitwise complement    is m <span class="token operator">^</span> x  with m <span class="token operator">=</span> <span class="token string">"all bits set to 1"</span> <span class="token keyword">for</span> unsigned x
                                      and  m <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token keyword">for</span> signed x<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>



<h6 id="整型溢出"><a href="#整型溢出" class="headerlink" title="整型溢出"></a>整型溢出</h6><p>对于无符号的值，运算符+-*和&lt;&lt;都是2禁止运算。这里的n是无符号类型的宽度，无符号整型将会丢弃溢出的位，并且程序将会返回<code>wrap around</code>。</p>
<p>对于有符号的整数，操作符+&#x3D;*&lt;&lt;都会溢出并且值存在，并且代表相应的有符号的值。在运算时不会抛出异常。标一起不会报错。所以不是所有情况下x&lt;x+1都成立。</p>
<h6 id="浮点数运算符"><a href="#浮点数运算符" class="headerlink" title="浮点数运算符"></a>浮点数运算符</h6><p>对于浮点数和其他复杂数字，+x和x是一样的，-x是x的对立面。除了IEEE-754还没有指定浮点数除0或者复数的结果。是否抛出异常将会依赖其具体实现。</p>
<p>一种实现可以合并多个浮点操作进一个操作，有可能是夸语句的，并且他的结果可能和依次单独执行的结果不一样。1个浮点数类型将会转变成目标的精度，防止四舍五入的融合。</p>
<pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token comment">// FMA allowed for computing r, because x*y is not explicitly rounded:</span>
r  <span class="token operator">=</span> x<span class="token operator">*</span>y <span class="token operator">+</span> z
r  <span class="token operator">=</span> z<span class="token punctuation">;</span>   r <span class="token operator">+=</span> x<span class="token operator">*</span>y
t  <span class="token operator">=</span> x<span class="token operator">*</span>y<span class="token punctuation">;</span> r <span class="token operator">=</span> t <span class="token operator">+</span> z
<span class="token operator">*</span>p <span class="token operator">=</span> x<span class="token operator">*</span>y<span class="token punctuation">;</span> r <span class="token operator">=</span> <span class="token operator">*</span>p <span class="token operator">+</span> z
r  <span class="token operator">=</span> x<span class="token operator">*</span>y <span class="token operator">+</span> <span class="token function">float64</span><span class="token punctuation">(</span>z<span class="token punctuation">)</span>

<span class="token comment">// FMA disallowed for computing r, because it would omit rounding of x*y:</span>
r  <span class="token operator">=</span> <span class="token function">float64</span><span class="token punctuation">(</span>x<span class="token operator">*</span>y<span class="token punctuation">)</span> <span class="token operator">+</span> z
r  <span class="token operator">=</span> z<span class="token punctuation">;</span> r <span class="token operator">+=</span> <span class="token function">float64</span><span class="token punctuation">(</span>x<span class="token operator">*</span>y<span class="token punctuation">)</span>
t  <span class="token operator">=</span> <span class="token function">float64</span><span class="token punctuation">(</span>x<span class="token operator">*</span>y<span class="token punctuation">)</span><span class="token punctuation">;</span> r <span class="token operator">=</span> t <span class="token operator">+</span> z<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>



<h6 id="字符串"><a href="#字符串" class="headerlink" title="字符串"></a>字符串</h6><p>字符串可以使用+和+&#x3D;操作符。</p>
<pre class="line-numbers language-go" data-language="go"><code class="language-go">s <span class="token operator">:=</span> <span class="token string">"hi"</span> <span class="token operator">+</span> <span class="token function">string</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span>
s <span class="token operator">+=</span> <span class="token string">" and good bye"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>



<p>字符串想家将会创建一个新的字符串。</p>
<h4 id="比较运算符"><a href="#比较运算符" class="headerlink" title="比较运算符"></a>比较运算符</h4><p>比较运算符比较连个运算元，并且生成一个无类型的布尔值。</p>
<pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token operator">==</span>    equal
<span class="token operator">!=</span>    not equal
<span class="token operator">&lt;</span>     less
<span class="token operator">&lt;=</span>    less or equal
<span class="token operator">></span>     greater
<span class="token operator">>=</span>    greater or equal<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>



<p>在任何比较运算元中2种类型必须是可以分配的。</p>
<p>使用等于运算符<code>==</code>和<code>!=</code>的运算元必须是可比较的。使用顺序运算符<code>&lt;</code>,<code>&lt;=</code>,<code>&gt;</code>和<code>&gt;=</code>必须是可比较的。这些限制导致比较运算符被定义成以下的方式。</p>
<ul>
<li><p>布尔值是可比较的，两个布尔值当他们同为<code>true</code>或者false的使用是相等的</p>
</li>
<li><p>整数值是可比较和排序的</p>
</li>
<li><p>浮点数是可比较和排序的，具体定义在IEEE-754标准中。</p>
</li>
<li><p>复数是可比较的，2个复数当实部和虚部都相等时就是相等的。</p>
</li>
<li><p>字符串是可以比较和排序的。是按照字节顺序排序。</p>
</li>
<li><p>指针式可以排序的，连个指针当指向相同变量时是相同的，或者他们2个都是nil。指向一个为非配的变量的结果是未定义的。</p>
</li>
<li><p>channel是可比较的。当两个管道是用同一个make出来的，或者都是nil时时相等的。</p>
</li>
<li><p>接口值时可以比较的，2个接口值时相等的如果2个标识符的动态类型是一样的或者他们都是nil。</p>
</li>
<li><p>一个非接口类型的值x和一个接口类型的值T在非接口类型是可以比较的并且非接口类型实现了接口是是可以比较的。当他们的动态类型类型相同时时相等的。</p>
</li>
<li><p>当结构体内的所有字段都是可以比较的时候，他是可以比较的。连个结构体的值当非空字段都相等时他们是相等的。</p>
</li>
<li><p>数组类型的值时可比较的，如果数组的原属时可以比较的，那么当数组的所有值是相等的时候他们就是相等的。</p>
</li>
</ul>
<p>使用两个动态类型的标识符来比较接口的值。如果这个类型的值时不可比较的，那么将会引起一个panic。这个行为不仅仅时接口，数组结构体接口字段都有这个问题。</p>
<p>切片，map，和函数值都是不可比较的，然而，作为一个特殊的例子，切片，map和函数的值的nil时可以比较的，指针，channel和接口的值nil也是可以比较的。</p>
<pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">const</span> c <span class="token operator">=</span> <span class="token number">3</span> <span class="token operator">&lt;</span> <span class="token number">4</span>            <span class="token comment">// c is the untyped boolean constant true</span>

<span class="token keyword">type</span> MyBool <span class="token builtin">bool</span>
<span class="token keyword">var</span> x<span class="token punctuation">,</span> y <span class="token builtin">int</span>
<span class="token keyword">var</span> <span class="token punctuation">(</span>
	<span class="token comment">// The result of a comparison is an untyped boolean.</span>
	<span class="token comment">// The usual assignment rules apply.</span>
	b3        <span class="token operator">=</span> x <span class="token operator">==</span> y <span class="token comment">// b3 has type bool</span>
	b4 <span class="token builtin">bool</span>   <span class="token operator">=</span> x <span class="token operator">==</span> y <span class="token comment">// b4 has type bool</span>
	b5 MyBool <span class="token operator">=</span> x <span class="token operator">==</span> y <span class="token comment">// b5 has type MyBool</span>
<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>



<h4 id="逻辑操作符"><a href="#逻辑操作符" class="headerlink" title="逻辑操作符"></a>逻辑操作符</h4><p>逻辑运算符使用布尔值值，并且生成一个相同类型的结果值作为操作元。右面的操作元计算是有条件的。</p>
<pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token operator">&amp;&amp;</span>    conditional AND    p <span class="token operator">&amp;&amp;</span> q  is  <span class="token string">"if p then q else false"</span>
<span class="token operator">||</span>    conditional OR     p <span class="token operator">||</span> q  is  <span class="token string">"if p then true else q"</span>
<span class="token operator">!</span>     NOT                <span class="token operator">!</span>p      is  <span class="token string">"not p"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>



<h4 id="地址操作符"><a href="#地址操作符" class="headerlink" title="地址操作符"></a>地址操作符</h4><p>以类型 T 的 x 作为运算元，取址操作 <code>&amp;x</code> 会生成一个类型为 <code>*T</code> 并指向 x 的指针。运算元必须是能够取址的，它可以是一个变量，指针，切片的取值操作；或是一个可取址结构体的字段选择器；或是对于可取址数组的索引取值操作。作为寻址能力的例外，x 可能是一个复合字面值。如果对 x 进行取址操作将会 panic，<code>&amp;x</code> 也会 panic。</p>
<p>对于一个 <code>*T</code> 类型的运算元 x，指针解引用 <code>*x</code> 表示 x 指向的 T 类型。如果 x 为 nil，那么解引用 <code>*x</code> 会 panic。</p>
<pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token operator">&amp;</span>x
<span class="token operator">&amp;</span>a<span class="token punctuation">[</span><span class="token function">f</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">]</span>
<span class="token operator">&amp;</span>Point<span class="token punctuation">&#123;</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">&#125;</span>
<span class="token operator">*</span>p
<span class="token operator">*</span><span class="token function">pf</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span>

<span class="token keyword">var</span> x <span class="token operator">*</span><span class="token builtin">int</span> <span class="token operator">=</span> <span class="token boolean">nil</span>
<span class="token operator">*</span>x   <span class="token comment">// causes a run-time panic</span>
<span class="token operator">&amp;</span><span class="token operator">*</span>x  <span class="token comment">// causes a run-time panic</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>



<h4 id="接收操作符"><a href="#接收操作符" class="headerlink" title="接收操作符"></a>接收操作符</h4><p>对于管道类型的运算元 <code>ch</code>，接收操作 <code>&lt;-ch</code> 返回值是管道 <code>ch</code> 接收到的值。带方向的管道需要有接受权限，接收操作的类型也是通道的元素类型。表达式会一直阻塞直到接收到返回值。从 nil 通道接收值会一直阻塞。从一个已经关闭的通道接收数据会在其他数据都被接收以后生成该通道元素类型的零值。</p>
<pre class="line-numbers language-go" data-language="go"><code class="language-go">v1 <span class="token operator">:=</span> <span class="token operator">&lt;-</span>ch
v2 <span class="token operator">=</span> <span class="token operator">&lt;-</span>ch
<span class="token function">f</span><span class="token punctuation">(</span><span class="token operator">&lt;-</span>ch<span class="token punctuation">)</span>
<span class="token operator">&lt;-</span>strobe  <span class="token comment">// wait until clock pulse and discard received value</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>



<p>接收数据的表达式可以使用赋值表达式。</p>
<pre class="line-numbers language-go" data-language="go"><code class="language-go">x<span class="token punctuation">,</span> ok <span class="token operator">=</span> <span class="token operator">&lt;-</span>ch
x<span class="token punctuation">,</span> ok <span class="token operator">:=</span> <span class="token operator">&lt;-</span>ch
<span class="token keyword">var</span> x<span class="token punctuation">,</span> ok <span class="token operator">=</span> <span class="token operator">&lt;-</span>ch
<span class="token keyword">var</span> x<span class="token punctuation">,</span> ok T <span class="token operator">=</span> <span class="token operator">&lt;-</span>ch<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>



<p>它还可以生成一个额外的无类型布尔值来表示通道是否关闭。如果 ok 为 <code>true</code> 说明获取到的是发送到通道内的数据，而 <code>false</code> 它就返回一个零值因为通道内没有元素且已经关闭。</p>
<h4 id="类型转换"><a href="#类型转换" class="headerlink" title="类型转换"></a>类型转换</h4><p>类型转换表达式 <code>T(x)</code> 其中 T 代表类型，x 代表可以转换成 T 类型的表达式。</p>
<pre class="line-numbers language-go" data-language="go"><code class="language-go">Conversion <span class="token operator">=</span> Type <span class="token string">"("</span> Expression <span class="token punctuation">[</span> <span class="token string">","</span> <span class="token punctuation">]</span> <span class="token string">")"</span> <span class="token punctuation">.</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>



<p>如果类型是以 <code>*</code> 或 <code>&lt;-</code> 开头，或以关键字 <code>func</code> 开头并且没有返回值列表，那么它必须用括号括起来避免歧义：</p>
<pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token operator">*</span><span class="token function">Point</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span>        <span class="token comment">// same as *(Point(p))</span>
<span class="token punctuation">(</span><span class="token operator">*</span>Point<span class="token punctuation">)</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span>      <span class="token comment">// p is converted to *Point</span>
<span class="token operator">&lt;-</span><span class="token keyword">chan</span> <span class="token function">int</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span>    <span class="token comment">// same as &lt;-(chan int(c))</span>
<span class="token punctuation">(</span><span class="token operator">&lt;-</span><span class="token keyword">chan</span> <span class="token builtin">int</span><span class="token punctuation">)</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span>  <span class="token comment">// c is converted to &lt;-chan int</span>
<span class="token keyword">func</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span>        <span class="token comment">// function signature func() x</span>
<span class="token punctuation">(</span><span class="token keyword">func</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span>      <span class="token comment">// x is converted to func()</span>
<span class="token punctuation">(</span><span class="token keyword">func</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token builtin">int</span><span class="token punctuation">)</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span>  <span class="token comment">// x is converted to func() int</span>
<span class="token keyword">func</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token function">int</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span>    <span class="token comment">// x is converted to func() int (unambiguous)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>



<p>常量 x 可以在可以用类型 T 表示时自动转换。作为一个特例，整数常量 x 可以转换成字符串类型就和非常量 x 一样。</p>
<p>对常量的转换会生成一个指定类型的常量。</p>
<pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token function">uint</span><span class="token punctuation">(</span><span class="token boolean">iota</span><span class="token punctuation">)</span>               <span class="token comment">// iota value of type uint</span>
<span class="token function">float32</span><span class="token punctuation">(</span><span class="token number">2.718281828</span><span class="token punctuation">)</span>     <span class="token comment">// 2.718281828 of type float32</span>
<span class="token function">complex128</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>            <span class="token comment">// 1.0 + 0.0i of type complex128</span>
<span class="token function">float32</span><span class="token punctuation">(</span><span class="token number">0.49999999</span><span class="token punctuation">)</span>      <span class="token comment">// 0.5 of type float32</span>
<span class="token function">float64</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1e-1000</span><span class="token punctuation">)</span>        <span class="token comment">// 0.0 of type float64</span>
<span class="token function">string</span><span class="token punctuation">(</span><span class="token char">'x'</span><span class="token punctuation">)</span>              <span class="token comment">// "x" of type string</span>
<span class="token function">string</span><span class="token punctuation">(</span><span class="token number">0x266c</span><span class="token punctuation">)</span>           <span class="token comment">// "♬" of type string</span>
<span class="token function">MyString</span><span class="token punctuation">(</span><span class="token string">"foo"</span> <span class="token operator">+</span> <span class="token string">"bar"</span><span class="token punctuation">)</span>  <span class="token comment">// "foobar" of type MyString</span>
<span class="token function">string</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">byte</span><span class="token punctuation">&#123;</span><span class="token char">'a'</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>      <span class="token comment">// not a constant: []byte&#123;'a'&#125; is not a constant</span>
<span class="token punctuation">(</span><span class="token operator">*</span><span class="token builtin">int</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token boolean">nil</span><span class="token punctuation">)</span>              <span class="token comment">// not a constant: nil is not a constant, *int is not a boolean, numeric, or string type</span>
<span class="token function">int</span><span class="token punctuation">(</span><span class="token number">1.2</span><span class="token punctuation">)</span>                 <span class="token comment">// illegal: 1.2 cannot be represented as an int</span>
<span class="token function">string</span><span class="token punctuation">(</span><span class="token number">65.0</span><span class="token punctuation">)</span>             <span class="token comment">// illegal: 65.0 is not an integer constant</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>



<p>非常量 x 可以在以下情况下转换成类型 T：</p>
<ul>
<li><p>x 可以给类型 T 赋值</p>
</li>
<li><p>忽略的结构体标签，x 的类型和 T 具有相同的底层类型</p>
</li>
<li><p>忽略的结构体标签，x 的类型和 T 都是指针类型，并且指针所指的类型具有相同的底层类型</p>
</li>
<li><p>x 的类型和 T 都是整数或者浮点数类型</p>
</li>
<li><p>x 的类型和 T 都是复数类型</p>
</li>
<li><p>x 是一个字符串而 T 时字节切片或者 rune 切片</p>
</li>
</ul>
<p>在比较两个结构体类型的时候会忽略结构体标签：</p>
<pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">type</span> Person <span class="token keyword">struct</span> <span class="token punctuation">&#123;</span>
	Name    <span class="token builtin">string</span>
	Address <span class="token operator">*</span><span class="token keyword">struct</span> <span class="token punctuation">&#123;</span>
		Street <span class="token builtin">string</span>
		City   <span class="token builtin">string</span>
	<span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span>

<span class="token keyword">var</span> data <span class="token operator">*</span><span class="token keyword">struct</span> <span class="token punctuation">&#123;</span>
	Name    <span class="token builtin">string</span> <span class="token string">`json:"name"`</span>
	Address <span class="token operator">*</span><span class="token keyword">struct</span> <span class="token punctuation">&#123;</span>
		Street <span class="token builtin">string</span> <span class="token string">`json:"street"`</span>
		City   <span class="token builtin">string</span> <span class="token string">`json:"city"`</span>
	<span class="token punctuation">&#125;</span> <span class="token string">`json:"address"`</span>
<span class="token punctuation">&#125;</span>

<span class="token keyword">var</span> person <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token operator">*</span>Person<span class="token punctuation">)</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span>  <span class="token comment">// ignoring tags, the underlying types are identical</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>



<p>这个规则也适用于数字类型与字符串类型间的相互转换。这个转换可能会改变 x 的值并且会增加运行时消耗。包 unsafe 实现了这个功能底层的限制。</p>
<h6 id="数字之间的转换"><a href="#数字之间的转换" class="headerlink" title="数字之间的转换"></a>数字之间的转换</h6><p>对于非常量的数字转换，需要遵守以下规则：</p>
<ul>
<li><p>在转换整型数字时，如果是一个有符号整型，它是继承有符号的无限精度；否则就不用继承符号。转换时会截断数字以适应类型的大小。例如：如果 <code>v:=uint16(0x10F0)</code>，然后 &#96;&#96;uint32(int8(v)) &#x3D;&#x3D; 0xFFFFFFF0 。类型转换总是生成有效值，并且永远不会溢出。</p>
</li>
<li><p>如果要将浮点数转换成整型，会丢弃小数部分（截断为零）。</p>
</li>
<li><p>如果要将整型或浮点型转换成浮点数类型，或或者一个复数转换成其他复数类型，结果会四舍五入成指定精度。例如： 可以使用超出IEEE-754 32位数的附加精度来存储float32类型的变量x的值，但float32（x）表示将x的值舍入为32位精度的结果。x + 0.1 会使用超过 32 位的精度，而 <code>float32(x+0.1)</code> 不会。</p>
</li>
</ul>
<p>在所有浮点数和复数的非常量转换中，如果结构类型不能成功表示数据，那么结果将会依赖于具体平台实现。</p>
<h6 id="字符串的类型转换"><a href="#字符串的类型转换" class="headerlink" title="字符串的类型转换"></a>字符串的类型转换</h6><ol>
<li>转换一个有符号或者无符号的整型值会转换成对应的 UTF-8 表示整型值。不在范围内的 Unicode 代码点会转换成 “\uFFFD”。</li>
</ol>
<pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token function">string</span><span class="token punctuation">(</span><span class="token char">'a'</span><span class="token punctuation">)</span>       <span class="token comment">// "a"</span>
<span class="token function">string</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span>        <span class="token comment">// "\ufffd" == "\xef\xbf\xbd"</span>
<span class="token function">string</span><span class="token punctuation">(</span><span class="token number">0xf8</span><span class="token punctuation">)</span>      <span class="token comment">// "\u00f8" == "ø" == "\xc3\xb8"</span>
<span class="token keyword">type</span> MyString <span class="token builtin">string</span>
<span class="token function">MyString</span><span class="token punctuation">(</span><span class="token number">0x65e5</span><span class="token punctuation">)</span>  <span class="token comment">// "\u65e5" == "日" == "\xe6\x97\xa5"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<ol>
<li>将字节切片转换成字符串类型会生成一个由切片元素组成的字符串</li>
</ol>
<pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token function">string</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">byte</span><span class="token punctuation">&#123;</span><span class="token char">'h'</span><span class="token punctuation">,</span> <span class="token char">'e'</span><span class="token punctuation">,</span> <span class="token char">'l'</span><span class="token punctuation">,</span> <span class="token char">'l'</span><span class="token punctuation">,</span> <span class="token char">'\xc3'</span><span class="token punctuation">,</span> <span class="token char">'\xb8'</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>   <span class="token comment">// "hellø"</span>
<span class="token function">string</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">byte</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>                                     <span class="token comment">// ""</span>
<span class="token function">string</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token function">byte</span><span class="token punctuation">(</span><span class="token boolean">nil</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                                  <span class="token comment">// ""</span>

<span class="token keyword">type</span> MyBytes <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">byte</span>
<span class="token function">string</span><span class="token punctuation">(</span>MyBytes<span class="token punctuation">&#123;</span><span class="token char">'h'</span><span class="token punctuation">,</span> <span class="token char">'e'</span><span class="token punctuation">,</span> <span class="token char">'l'</span><span class="token punctuation">,</span> <span class="token char">'l'</span><span class="token punctuation">,</span> <span class="token char">'\xc3'</span><span class="token punctuation">,</span> <span class="token char">'\xb8'</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>  <span class="token comment">// "hellø"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>



<ol>
<li>将 rune 切片转换成字符串类型会生成一个由切片元素组成的字符串</li>
</ol>
<pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token function">string</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">rune</span><span class="token punctuation">&#123;</span><span class="token number">0x767d</span><span class="token punctuation">,</span> <span class="token number">0x9d6c</span><span class="token punctuation">,</span> <span class="token number">0x7fd4</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>   <span class="token comment">// "\u767d\u9d6c\u7fd4" == "白鵬翔"</span>
<span class="token function">string</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">rune</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>                         <span class="token comment">// ""</span>
<span class="token function">string</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token function">rune</span><span class="token punctuation">(</span><span class="token boolean">nil</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                      <span class="token comment">// ""</span>

<span class="token keyword">type</span> MyRunes <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">rune</span>
<span class="token function">string</span><span class="token punctuation">(</span>MyRunes<span class="token punctuation">&#123;</span><span class="token number">0x767d</span><span class="token punctuation">,</span> <span class="token number">0x9d6c</span><span class="token punctuation">,</span> <span class="token number">0x7fd4</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>  <span class="token comment">// "\u767d\u9d6c\u7fd4" == "白鵬翔"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>



<ol>
<li>将字符串转换成字节切片会生成由字符串中每个字节组成的切片</li>
</ol>
<pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token function">byte</span><span class="token punctuation">(</span><span class="token string">"hellø"</span><span class="token punctuation">)</span>   <span class="token comment">// []byte&#123;'h', 'e', 'l', 'l', '\xc3', '\xb8'&#125;</span>
<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token function">byte</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">)</span>        <span class="token comment">// []byte&#123;&#125;</span>

<span class="token function">MyBytes</span><span class="token punctuation">(</span><span class="token string">"hellø"</span><span class="token punctuation">)</span>  <span class="token comment">// []byte&#123;'h', 'e', 'l', 'l', '\xc3', '\xb8'&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>

<ol>
<li>将字符串转换成 rune 切片会生成由字符串中每个 Unicode 代码点组成的切片</li>
</ol>
<pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token function">rune</span><span class="token punctuation">(</span><span class="token function">MyString</span><span class="token punctuation">(</span><span class="token string">"白鵬翔"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment">// []rune&#123;0x767d, 0x9d6c, 0x7fd4&#125;</span>
<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token function">rune</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">)</span>                 <span class="token comment">// []rune&#123;&#125;</span>

<span class="token function">MyRunes</span><span class="token punctuation">(</span><span class="token string">"白鵬翔"</span><span class="token punctuation">)</span>           <span class="token comment">// []rune&#123;0x767d, 0x9d6c, 0x7fd4&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>



<h6 id="常量表达式"><a href="#常量表达式" class="headerlink" title="常量表达式"></a>常量表达式</h6><p>常量表达式只包含常量运算元并且在编译程序时就已经计算完成。</p>
<p>无类型布尔值，数值和字符串常量都可以当作运算元。除了位置操作符，如果二元运算符石不同类型的常量，操作元，和非布尔值，和即将在接下来出现的：整型，rune，浮点数和复数类型。例如：一个无类型整型常量减去无类型复数常量，结果为复数常量。</p>
<p>一个常量的比较运算会生成无类型的布尔常量。如果左移运算是一个无类型常量，结果会是一个整型常量。它会和原来常量为相同类型。其他与无类型常量的运算都会生成相同类型的结果（布尔值，整型，浮点数，复数，字符串常量）。</p>
<pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">const</span> a <span class="token operator">=</span> <span class="token number">2</span> <span class="token operator">+</span> <span class="token number">3.0</span>          <span class="token comment">// a == 5.0   (untyped floating-point constant)</span>
<span class="token keyword">const</span> b <span class="token operator">=</span> <span class="token number">15</span> <span class="token operator">/</span> <span class="token number">4</span>           <span class="token comment">// b == 3     (untyped integer constant)</span>
<span class="token keyword">const</span> c <span class="token operator">=</span> <span class="token number">15</span> <span class="token operator">/</span> <span class="token number">4.0</span>         <span class="token comment">// c == 3.75  (untyped floating-point constant)</span>
<span class="token keyword">const</span> Θ <span class="token builtin">float64</span> <span class="token operator">=</span> <span class="token number">3</span><span class="token operator">/</span><span class="token number">2</span>      <span class="token comment">// Θ == 1.0   (type float64, 3/2 is integer division)</span>
<span class="token keyword">const</span> Π <span class="token builtin">float64</span> <span class="token operator">=</span> <span class="token number">3</span><span class="token operator">/</span><span class="token number">2.</span>     <span class="token comment">// Π == 1.5   (type float64, 3/2. is float division)</span>
<span class="token keyword">const</span> d <span class="token operator">=</span> <span class="token number">1</span> <span class="token operator">&lt;&lt;</span> <span class="token number">3.0</span>         <span class="token comment">// d == 8     (untyped integer constant)</span>
<span class="token keyword">const</span> e <span class="token operator">=</span> <span class="token number">1.0</span> <span class="token operator">&lt;&lt;</span> <span class="token number">3</span>         <span class="token comment">// e == 8     (untyped integer constant)</span>
<span class="token keyword">const</span> f <span class="token operator">=</span> <span class="token function">int32</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> <span class="token number">33</span>   <span class="token comment">// illegal    (constant 8589934592 overflows int32)</span>
<span class="token keyword">const</span> g <span class="token operator">=</span> <span class="token function">float64</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span> <span class="token operator">>></span> <span class="token number">1</span>  <span class="token comment">// illegal    (float64(2) is a typed floating-point constant)</span>
<span class="token keyword">const</span> h <span class="token operator">=</span> <span class="token string">"foo"</span> <span class="token operator">></span> <span class="token string">"bar"</span>    <span class="token comment">// h == true  (untyped boolean constant)</span>
<span class="token keyword">const</span> j <span class="token operator">=</span> <span class="token boolean">true</span>             <span class="token comment">// j == true  (untyped boolean constant)</span>
<span class="token keyword">const</span> k <span class="token operator">=</span> <span class="token char">'w'</span> <span class="token operator">+</span> <span class="token number">1</span>          <span class="token comment">// k == 'x'   (untyped rune constant)</span>
<span class="token keyword">const</span> l <span class="token operator">=</span> <span class="token string">"hi"</span>             <span class="token comment">// l == "hi"  (untyped string constant)</span>
<span class="token keyword">const</span> m <span class="token operator">=</span> <span class="token function">string</span><span class="token punctuation">(</span>k<span class="token punctuation">)</span>        <span class="token comment">// m == "x"   (type string)</span>
<span class="token keyword">const</span> Σ <span class="token operator">=</span> <span class="token number">1</span> <span class="token operator">-</span> <span class="token number">0.707i</span>       <span class="token comment">//            (untyped complex constant)</span>
<span class="token keyword">const</span> Δ <span class="token operator">=</span> Σ <span class="token operator">+</span> <span class="token number">2.0e-4</span>       <span class="token comment">//            (untyped complex constant)</span>
<span class="token keyword">const</span> Φ <span class="token operator">=</span> <span class="token boolean">iota</span><span class="token operator">*</span><span class="token number">1i</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token operator">/</span><span class="token number">1i</span>   <span class="token comment">//            (untyped complex constant)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>



<p>对一个无类型整数，rune，或浮点数应用内置的 <code>complex</code> 函数会生成无类型的复数常量。</p>
<pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">const</span> ic <span class="token operator">=</span> <span class="token function">complex</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> c<span class="token punctuation">)</span>   <span class="token comment">// ic == 3.75i  (untyped complex constant)</span>
<span class="token keyword">const</span> iΘ <span class="token operator">=</span> <span class="token function">complex</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> Θ<span class="token punctuation">)</span>   <span class="token comment">// iΘ == 1i     (type complex128)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>



<p>常量表达式总是一个明确的值；中间值和常量自己可以比语言所支持的精度更高，下面的声明是合法的：</p>
<pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">const</span> Huge <span class="token operator">=</span> <span class="token number">1</span> <span class="token operator">&lt;&lt;</span> <span class="token number">100</span>         <span class="token comment">// Huge == 1267650600228229401496703205376  (untyped integer constant)</span>
<span class="token keyword">const</span> Four <span class="token builtin">int8</span> <span class="token operator">=</span> Huge <span class="token operator">>></span> <span class="token number">98</span>  <span class="token comment">// Four == 4                                (type int8)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>



<p>常量的除法的除数不能为 0:</p>
<pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token number">3.14</span> <span class="token operator">/</span> <span class="token number">0.0</span>   <span class="token comment">// illegal: division by zero</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>



<p>定义了类型的常量的精度必须根据常量类型定义。所以下面的常量表达式是非法的：</p>
<pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token function">uint</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span>     <span class="token comment">// -1 cannot be represented as a uint</span>
<span class="token function">int</span><span class="token punctuation">(</span><span class="token number">3.14</span><span class="token punctuation">)</span>    <span class="token comment">// 3.14 cannot be represented as an int</span>
<span class="token function">int64</span><span class="token punctuation">(</span>Huge<span class="token punctuation">)</span>  <span class="token comment">// 1267650600228229401496703205376 cannot be represented as an int64</span>
Four <span class="token operator">*</span> <span class="token number">300</span>   <span class="token comment">// operand 300 cannot be represented as an int8 (type of Four)</span>
Four <span class="token operator">*</span> <span class="token number">100</span>   <span class="token comment">// product 400 cannot be represented as an int8 (type of Four)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>



<p>补码使用的一元操作符 ^ 对于非常量的匹配模式：补码对于无符号常量为 1，对于有符号和无类型常量为 -1。</p>
<pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token operator">^</span><span class="token number">1</span>         <span class="token comment">// untyped integer constant, equal to -2</span>
<span class="token function">uint8</span><span class="token punctuation">(</span><span class="token operator">^</span><span class="token number">1</span><span class="token punctuation">)</span>  <span class="token comment">// illegal: same as uint8(-2), -2 cannot be represented as a uint8</span>
<span class="token operator">^</span><span class="token function">uint8</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>  <span class="token comment">// typed uint8 constant, same as 0xFF ^ uint8(1) = uint8(0xFE)</span>
<span class="token function">int8</span><span class="token punctuation">(</span><span class="token operator">^</span><span class="token number">1</span><span class="token punctuation">)</span>   <span class="token comment">// same as int8(-2)</span>
<span class="token operator">^</span><span class="token function">int8</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>   <span class="token comment">// same as -1 ^ int8(1) = -2</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>



<p>实现限制：编译器在处理无类型浮点数和复数时会取近似值；具体请看常量章节。这个取近似值的操作在浮点数在整数上下文时会产生无效值，即使在计算过后是一个整型。</p>
<h4 id="运算优先级"><a href="#运算优先级" class="headerlink" title="运算优先级"></a>运算优先级</h4><p>在包级别，初始化的依赖性由变量声明的初始化表达式顺序决定。否则，当计算表达式内的操作数时，赋值，返回语句，所有函数调用，方法调用，和通信操作都会由左向右计算。</p>
<p>例如，在函数作用域中的赋值：</p>
<pre class="line-numbers language-go" data-language="go"><code class="language-go">y<span class="token punctuation">[</span><span class="token function">f</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">,</span> ok <span class="token operator">=</span> <span class="token function">g</span><span class="token punctuation">(</span><span class="token function">h</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">i</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span>x<span class="token punctuation">[</span><span class="token function">j</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token operator">&lt;-</span>c<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">k</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>



<p>函数调用和通信的发生顺序为：<code>f()</code>，<code>h()</code>，<code>i()</code>，<code>j()</code>，<code>&lt;-c</code>，<code>g()</code> 和 <code>k()</code>。但是对 y 和 x 的取值操作没有指定。</p>
<pre class="line-numbers language-go" data-language="go"><code class="language-go">a <span class="token operator">:=</span> <span class="token number">1</span>
f <span class="token operator">:=</span> <span class="token keyword">func</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token builtin">int</span> <span class="token punctuation">&#123;</span> a<span class="token operator">++</span><span class="token punctuation">;</span> <span class="token keyword">return</span> a <span class="token punctuation">&#125;</span>
x <span class="token operator">:=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">int</span><span class="token punctuation">&#123;</span>a<span class="token punctuation">,</span> <span class="token function">f</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span>            <span class="token comment">// x may be [1, 2] or [2, 2]: evaluation order between a and f() is not specified</span>
m <span class="token operator">:=</span> <span class="token keyword">map</span><span class="token punctuation">[</span><span class="token builtin">int</span><span class="token punctuation">]</span><span class="token builtin">int</span><span class="token punctuation">&#123;</span>a<span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span> a<span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">&#125;</span>  <span class="token comment">// m may be &#123;2: 1&#125; or &#123;2: 2&#125;: evaluation order between the two map assignments is not specified</span>
n <span class="token operator">:=</span> <span class="token keyword">map</span><span class="token punctuation">[</span><span class="token builtin">int</span><span class="token punctuation">]</span><span class="token builtin">int</span><span class="token punctuation">&#123;</span>a<span class="token punctuation">:</span> <span class="token function">f</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span>      <span class="token comment">// n may be &#123;2: 3&#125; or &#123;3: 3&#125;: evaluation order between the key and the value is not specified</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>



<p>在包级别，依赖的初始化顺序会覆盖这个从左向右的规则：</p>
<pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">var</span> a<span class="token punctuation">,</span> b<span class="token punctuation">,</span> c <span class="token operator">=</span> <span class="token function">f</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token function">v</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">g</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">sqr</span><span class="token punctuation">(</span><span class="token function">u</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token function">v</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token keyword">func</span> <span class="token function">f</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token builtin">int</span>        <span class="token punctuation">&#123;</span> <span class="token keyword">return</span> c <span class="token punctuation">&#125;</span>
<span class="token keyword">func</span> <span class="token function">g</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token builtin">int</span>        <span class="token punctuation">&#123;</span> <span class="token keyword">return</span> a <span class="token punctuation">&#125;</span>
<span class="token keyword">func</span> <span class="token function">sqr</span><span class="token punctuation">(</span>x <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token builtin">int</span> <span class="token punctuation">&#123;</span> <span class="token keyword">return</span> x<span class="token operator">*</span>x <span class="token punctuation">&#125;</span>

<span class="token comment">// functions u and v are independent of all other variables and functions</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>



<h2 id="语句"><a href="#语句" class="headerlink" title="语句"></a>语句</h2><p>语句控制程序的执行。</p>
<pre class="line-numbers language-go" data-language="go"><code class="language-go">Statement <span class="token operator">=</span>
	Declaration <span class="token operator">|</span> LabeledStmt <span class="token operator">|</span> SimpleStmt <span class="token operator">|</span>
	GoStmt <span class="token operator">|</span> ReturnStmt <span class="token operator">|</span> BreakStmt <span class="token operator">|</span> ContinueStmt <span class="token operator">|</span> GotoStmt <span class="token operator">|</span>
	FallthroughStmt <span class="token operator">|</span> Block <span class="token operator">|</span> IfStmt <span class="token operator">|</span> SwitchStmt <span class="token operator">|</span> SelectStmt <span class="token operator">|</span> ForStmt <span class="token operator">|</span>
	DeferStmt <span class="token punctuation">.</span>

SimpleStmt <span class="token operator">=</span> EmptyStmt <span class="token operator">|</span> ExpressionStmt <span class="token operator">|</span> SendStmt <span class="token operator">|</span> IncDecStmt <span class="token operator">|</span> Assignment <span class="token operator">|</span> ShortVarDecl <span class="token punctuation">.</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>



<h4 id="终止语句"><a href="#终止语句" class="headerlink" title="终止语句"></a>终止语句</h4><p>终止语句会阻止相同代码块中下面所有语句的执行。以下语句属于终止语句：</p>
<ol>
<li><p><code>return</code> 和 <code>goto</code> 语句</p>
</li>
<li><p>对内置 <code>panic</code> 函数的调用</p>
</li>
<li><p>代码块结束</p>
</li>
<li><p><code>if</code> 语句中：</p>
</li>
<li><p>else 分支</p>
</li>
<li><p>所有分支末尾</p>
</li>
<li><p><code>for</code>语句中：</p>
</li>
<li><p><code>break</code> 语句和循环结束</p>
</li>
<li><p><code>switch</code> 语句：</p>
</li>
<li><p>在 <code>switch</code> 语句中没有 <code>break</code> 语句，</p>
</li>
<li><p>有一个默认的 case</p>
</li>
<li><p>语句列表中的每个 case 语句和有可能存在的 <code>fallthrough</code> 语句</p>
</li>
<li><p><code>select</code> 语句中：</p>
</li>
<li><p>没有 break 语句</p>
</li>
<li><p>每个 case 中的语句列表，如果包含默认 case</p>
</li>
</ol>
<p>所有其他语句都不是中断语句。</p>
<p>如果语句序列不为空并且最后一个非空语句是终止语句，那么语句序列就以终结语句结尾。</p>
<h4 id="空语句"><a href="#空语句" class="headerlink" title="空语句"></a>空语句</h4><p>空语句不做任何事情。</p>
<pre class="line-numbers language-go" data-language="go"><code class="language-go">EmptyStmt <span class="token operator">=</span> <span class="token punctuation">.</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>



<h4 id="标签语句"><a href="#标签语句" class="headerlink" title="标签语句"></a>标签语句</h4><p>标签语句可以作为 <code>goto</code>，<code>break</code> 和 <code>continue</code> 语句的目标。</p>
<pre class="line-numbers language-go" data-language="go"><code class="language-go">LabeledStmt <span class="token operator">=</span> Label <span class="token string">":"</span> Statement <span class="token punctuation">.</span>
Label       <span class="token operator">=</span> identifier <span class="token punctuation">.</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>



<pre class="line-numbers language-go" data-language="go"><code class="language-go">Error<span class="token punctuation">:</span> log<span class="token punctuation">.</span><span class="token function">Panic</span><span class="token punctuation">(</span><span class="token string">"error encountered"</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>



<h4 id="表达式语句"><a href="#表达式语句" class="headerlink" title="表达式语句"></a>表达式语句</h4><p>除了特定的内置函数，一般的函数、方法和接收操作都可以出现在表达式语句的上下文中。这些语句可以使用括号括起来。</p>
<pre class="line-numbers language-go" data-language="go"><code class="language-go">ExpressionStmt <span class="token operator">=</span> Expression <span class="token punctuation">.</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>



<p>下面的内置函数不允许出现在语句的上下文中：</p>
<pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token builtin">append</span> <span class="token builtin">cap</span> <span class="token builtin">complex</span> <span class="token builtin">imag</span> <span class="token builtin">len</span> <span class="token builtin">make</span> <span class="token builtin">new</span> <span class="token builtin">real</span>
unsafe<span class="token punctuation">.</span>Alignof unsafe<span class="token punctuation">.</span>Offsetof unsafe<span class="token punctuation">.</span>Sizeof<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>



<pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token function">h</span><span class="token punctuation">(</span>x<span class="token operator">+</span>y<span class="token punctuation">)</span>
f<span class="token punctuation">.</span><span class="token function">Close</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token operator">&lt;-</span>ch
<span class="token punctuation">(</span><span class="token operator">&lt;-</span>ch<span class="token punctuation">)</span>
<span class="token function">len</span><span class="token punctuation">(</span><span class="token string">"foo"</span><span class="token punctuation">)</span>  <span class="token comment">// illegal if len is the built-in function</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>



<h4 id="发送语句"><a href="#发送语句" class="headerlink" title="发送语句"></a>发送语句</h4><p>发送语句可以向通道发送一个值。通道表达式必须是通道类型，通道方向必须允许发送操作，并且值类型是可以分配给通道元素通道类型。</p>
<pre class="line-numbers language-go" data-language="go"><code class="language-go">SendStmt <span class="token operator">=</span> Channel <span class="token string">"&lt;-"</span> Expression <span class="token punctuation">.</span>
Channel  <span class="token operator">=</span> Expression <span class="token punctuation">.</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>



<p>通道类型和值表达式会在发送之前求值。发送操作会一致阻塞，直到可以进行发送操作。如果接收者已经准备好向没有缓存的通道发送值可以立即执行。如果通道内还有缓存空间，向通道内发送值也会立即执行。向关闭的通道发送数据会导致运行时恐慌。像值为 nil 的通道发送数据会一直阻塞。</p>
<pre class="line-numbers language-go" data-language="go"><code class="language-go">ch <span class="token operator">&lt;-</span> <span class="token number">3</span>  <span class="token comment">// send value 3 to channel ch</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>



<h4 id="递增-x2F-递减语句"><a href="#递增-x2F-递减语句" class="headerlink" title="递增&#x2F;递减语句"></a>递增&#x2F;递减语句</h4><p>“++” 和 “–” 语句可以递增或者递减运算元一个无类型常量 1。作为一个赋值语句，运算元必须是可寻址的或者 map 的索引表达式。</p>
<pre class="line-numbers language-go" data-language="go"><code class="language-go">IncDecStmt <span class="token operator">=</span> Expression <span class="token punctuation">(</span> <span class="token string">"++"</span> <span class="token operator">|</span> <span class="token string">"--"</span> <span class="token punctuation">)</span> <span class="token punctuation">.</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>



<p>下面的赋值语句在语义上是等价的：</p>
<pre class="line-numbers language-go" data-language="go"><code class="language-go">IncDec statement    Assignment
x<span class="token operator">++</span>                 x <span class="token operator">+=</span> <span class="token number">1</span>
x<span class="token operator">--</span>                 x <span class="token operator">-=</span> <span class="token number">1</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>



<h4 id="赋值"><a href="#赋值" class="headerlink" title="赋值"></a>赋值</h4><pre class="line-numbers language-go" data-language="go"><code class="language-go">Assignment <span class="token operator">=</span> ExpressionList assign_op ExpressionList <span class="token punctuation">.</span>

assign_op <span class="token operator">=</span> <span class="token punctuation">[</span> add_op <span class="token operator">|</span> mul_op <span class="token punctuation">]</span> <span class="token string">"="</span> <span class="token punctuation">.</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>



<p>所有左侧运算元都必须是可寻址的、map 索引表达式或空标识符其中之一。运算元可以用括号括起来。</p>
<pre class="line-numbers language-go" data-language="go"><code class="language-go">x <span class="token operator">=</span> <span class="token number">1</span>
<span class="token operator">*</span>p <span class="token operator">=</span> <span class="token function">f</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
a<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">23</span>
<span class="token punctuation">(</span>k<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token operator">&lt;-</span>ch  <span class="token comment">// same as: k = &lt;-ch</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>



<p>对于赋值操作 <code>x op= y</code> 其中 <code>op</code> 为二元运算符，它和 <code>x=x op (y)</code> 是等价的，不过它只计算一次 x。<code>op=</code> 是单独的一个词汇单元，在赋值操作中左侧表达式和右侧表达式必须都是单值表达式，并且左侧表达式不能是空白标识符。</p>
<pre class="line-numbers language-go" data-language="go"><code class="language-go">a<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">&lt;&lt;=</span> <span class="token number">2</span>
i <span class="token operator">&amp;^=</span> <span class="token number">1</span><span class="token operator">&lt;&lt;</span>n<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>



<p>元祖赋值语句会把运算返回的多个值分别分配给变量列表。它有两种格式，第一种：它是返回多值的表达式，例如函数调用、通道和 map 运算、类型断言。左侧运算元的数量必须等于返回值的数量。如果函数返回两个值：</p>
<pre class="line-numbers language-go" data-language="go"><code class="language-go">x<span class="token punctuation">,</span> y <span class="token operator">=</span> <span class="token function">f</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>



<p>它会将第一个返回值分配给 x ，把第二个返回值分配给 y。第二种格式中，左侧运算元的数量必须等于右侧运算元的数量。每个表达式都只能返回单一值，右侧第 n 个值会赋值给左侧第 n 个变量。</p>
<pre class="line-numbers language-go" data-language="go"><code class="language-go">one<span class="token punctuation">,</span> two<span class="token punctuation">,</span> three <span class="token operator">=</span> <span class="token char">'一'</span><span class="token punctuation">,</span> <span class="token char">'二'</span><span class="token punctuation">,</span> <span class="token char">'三'</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>



<p>空标识符可以在分配时忽略一个右面位置的表达式：</p>
<pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token boolean">_</span> <span class="token operator">=</span> x       <span class="token comment">// evaluate x but ignore it</span>
x<span class="token punctuation">,</span> <span class="token boolean">_</span> <span class="token operator">=</span> <span class="token function">f</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment">// evaluate f() but ignore second result value</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>



<p>赋值分为两个阶段。首先会计算左侧运算元的索引表达式和指针的解引用工作并以一定顺序计算右侧表达式的值。</p>
<p>然后依次对左侧运算元赋值。</p>
<pre class="line-numbers language-go" data-language="go"><code class="language-go">a<span class="token punctuation">,</span> b <span class="token operator">=</span> b<span class="token punctuation">,</span> a  <span class="token comment">// exchange a and b</span>

x <span class="token operator">:=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">int</span><span class="token punctuation">&#123;</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">&#125;</span>
i <span class="token operator">:=</span> <span class="token number">0</span>
i<span class="token punctuation">,</span> x<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span>  <span class="token comment">// set i = 1, x[0] = 2</span>

i <span class="token operator">=</span> <span class="token number">0</span>
x<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> i <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">1</span>  <span class="token comment">// set x[0] = 2, i = 1</span>

x<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> x<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span>  <span class="token comment">// set x[0] = 1, then x[0] = 2 (so x[0] == 2 at end)</span>

x<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> x<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span>  <span class="token comment">// set x[1] = 4, then panic setting x[3] = 5.</span>

<span class="token keyword">type</span> Point <span class="token keyword">struct</span> <span class="token punctuation">&#123;</span> x<span class="token punctuation">,</span> y <span class="token builtin">int</span> <span class="token punctuation">&#125;</span>
<span class="token keyword">var</span> p <span class="token operator">*</span>Point
x<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span> p<span class="token punctuation">.</span>x <span class="token operator">=</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">7</span>  <span class="token comment">// set x[2] = 6, then panic setting p.x = 7</span>

i <span class="token operator">=</span> <span class="token number">2</span>
x <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">int</span><span class="token punctuation">&#123;</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">&#125;</span>
<span class="token keyword">for</span> i<span class="token punctuation">,</span> x<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">range</span> x <span class="token punctuation">&#123;</span>  <span class="token comment">// set i, x[2] = 0, x[0]</span>
	<span class="token keyword">break</span>
<span class="token punctuation">&#125;</span>
<span class="token comment">// after this loop, i == 0 and x == []int&#123;3, 5, 3&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>



<p>在赋值语句中每个值都必须能分配给左侧指定类型的值。除了以下特例：</p>
<ol>
<li><p>任何类型都能分配给空标识符。</p>
</li>
<li><p>如果把无类型常量分配给接口类型或者空标识符，它会转换成默认类型。</p>
</li>
<li><p>如果无类型的布尔值分配给了接口类型或者空标识符，它会先转换成 <code>bool</code> 类型。</p>
</li>
</ol>
<h4 id="if-语句"><a href="#if-语句" class="headerlink" title="if 语句"></a>if 语句</h4><p><code>if</code> 语句根据布尔值表达式的值来决定执行条件分支的代码。如果表达式为真，就执行 <code>if</code> 分支内的代码，否则执行 <code>else</code> 分支的代码。</p>
<pre class="line-numbers language-go" data-language="go"><code class="language-go">IfStmt <span class="token operator">=</span> <span class="token string">"if"</span> <span class="token punctuation">[</span> SimpleStmt <span class="token string">";"</span> <span class="token punctuation">]</span> Expression Block <span class="token punctuation">[</span> <span class="token string">"else"</span> <span class="token punctuation">(</span> IfStmt <span class="token operator">|</span> Block <span class="token punctuation">)</span> <span class="token punctuation">]</span> <span class="token punctuation">.</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>



<pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">if</span> x <span class="token operator">></span> max <span class="token punctuation">&#123;</span>
	x <span class="token operator">=</span> max
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>



<p>表达式可能先于普通语句，它会在表达式求值之前发生。</p>
<pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">if</span> x <span class="token operator">:=</span> <span class="token function">f</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> x <span class="token operator">&lt;</span> y <span class="token punctuation">&#123;</span>
	<span class="token keyword">return</span> x
<span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token keyword">if</span> x <span class="token operator">></span> z <span class="token punctuation">&#123;</span>
	<span class="token keyword">return</span> z
<span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>
	<span class="token keyword">return</span> y
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>



<h4 id="switch-语句"><a href="#switch-语句" class="headerlink" title="switch 语句"></a>switch 语句</h4><h4 id="for-语句"><a href="#for-语句" class="headerlink" title="for 语句"></a>for 语句</h4><p>for 语句可以用来重复执行一段代码。它有三种格式：迭代器可以是单一条件、for 分句或者 range 语句。</p>
<pre class="line-numbers language-go" data-language="go"><code class="language-go">ForStmt <span class="token operator">=</span> <span class="token string">"for"</span> <span class="token punctuation">[</span> Condition <span class="token operator">|</span> ForClause <span class="token operator">|</span> RangeClause <span class="token punctuation">]</span> Block <span class="token punctuation">.</span>
Condition <span class="token operator">=</span> Expression <span class="token punctuation">.</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>



<h6 id="单一条件的-for-语句"><a href="#单一条件的-for-语句" class="headerlink" title="单一条件的 for 语句"></a>单一条件的 for 语句</h6><p>这种情况下 for 会在条件为 true 时一直重复。条件会在每次迭代时都重新计算。如果没有指定条件，默认一直为 true。</p>
<pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">for</span> a <span class="token operator">&lt;</span> b <span class="token punctuation">&#123;</span>
	a <span class="token operator">*=</span> <span class="token number">2</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>



<h6 id="带分句的-for-语句"><a href="#带分句的-for-语句" class="headerlink" title="带分句的 for 语句"></a>带分句的 for 语句</h6><p>带分句的 for 语句也是由条件控制，只是它有一个初始化和寄送的过程。例如赋值、递增或者递减语句。初始化语句可以是短变量声明，但是寄送语句不能。在初始化语句中声明的变量可以在迭代过程中使用。</p>
<pre class="line-numbers language-go" data-language="go"><code class="language-go">ForClause <span class="token operator">=</span> <span class="token punctuation">[</span> InitStmt <span class="token punctuation">]</span> <span class="token string">";"</span> <span class="token punctuation">[</span> Condition <span class="token punctuation">]</span> <span class="token string">";"</span> <span class="token punctuation">[</span> PostStmt <span class="token punctuation">]</span> <span class="token punctuation">.</span>
InitStmt <span class="token operator">=</span> SimpleStmt <span class="token punctuation">.</span>
PostStmt <span class="token operator">=</span> SimpleStmt <span class="token punctuation">.</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>



<pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">for</span> i <span class="token operator">:=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">10</span><span class="token punctuation">;</span> i<span class="token operator">++</span> <span class="token punctuation">&#123;</span>
	<span class="token function">f</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>



<p>如果初始化语句非空，它会在进入迭代前执行一次；post 语句在每次循环后都会执行一次。在只有条件的情况下可以省略分号。如果缺省条件语句，默认为 true。</p>
<pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">for</span> cond <span class="token punctuation">&#123;</span> <span class="token function">S</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#125;</span>    is the same as    <span class="token keyword">for</span> <span class="token punctuation">;</span> cond <span class="token punctuation">;</span> <span class="token punctuation">&#123;</span> <span class="token function">S</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#125;</span>
<span class="token keyword">for</span>      <span class="token punctuation">&#123;</span> <span class="token function">S</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#125;</span>    is the same as    <span class="token keyword">for</span> <span class="token boolean">true</span>     <span class="token punctuation">&#123;</span> <span class="token function">S</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>



<h6 id="带-range-分句的-for-语句"><a href="#带-range-分句的-for-语句" class="headerlink" title="带 range 分句的 for 语句"></a>带 range 分句的 for 语句</h6><p>带 range 分句的 for 语句可以访问数组、切片、字符串、map 的所有元素，还可以从通道中接收值。迭代获得元素分配给了相应的迭代变量并执行代码块。</p>
<pre class="line-numbers language-go" data-language="go"><code class="language-go">RangeClause <span class="token operator">=</span> <span class="token punctuation">[</span> ExpressionList <span class="token string">"="</span> <span class="token operator">|</span> IdentifierList <span class="token string">":="</span> <span class="token punctuation">]</span> <span class="token string">"range"</span> Expression <span class="token punctuation">.</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>



<p>右侧的 range 分句表达式叫做 range 表达式，它可能是数组、数组的指针、切片、字符串、map 或通道接收者类型。在分配时，左侧运算元必须是可寻址的或者 map 的索引表达式；它们作为迭代变量。如果 range 表达式是一个通道类型，至少需要有一个变量，它也可以有两个变量。如果迭代变量是空标识符，就代表在分句中不存在该标识符。</p>
<pre class="line-numbers language-go" data-language="go"><code class="language-go">Range expression                          1st value          2nd value

array or slice  a  <span class="token punctuation">[</span>n<span class="token punctuation">]</span>E<span class="token punctuation">,</span> <span class="token operator">*</span><span class="token punctuation">[</span>n<span class="token punctuation">]</span>E<span class="token punctuation">,</span> or <span class="token punctuation">[</span><span class="token punctuation">]</span>E    index    i  <span class="token builtin">int</span>    a<span class="token punctuation">[</span>i<span class="token punctuation">]</span>       E
<span class="token builtin">string</span>          s  <span class="token builtin">string</span> <span class="token keyword">type</span>            index    i  <span class="token builtin">int</span>    see below  <span class="token builtin">rune</span>
<span class="token keyword">map</span>             m  <span class="token keyword">map</span><span class="token punctuation">[</span>K<span class="token punctuation">]</span>V                key      k  K      m<span class="token punctuation">[</span>k<span class="token punctuation">]</span>       V
channel         c  <span class="token keyword">chan</span> E<span class="token punctuation">,</span> <span class="token operator">&lt;-</span><span class="token keyword">chan</span> E       element  e  E<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>



<pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">var</span> testdata <span class="token operator">*</span><span class="token keyword">struct</span> <span class="token punctuation">&#123;</span>
	a <span class="token operator">*</span><span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">]</span><span class="token builtin">int</span>
<span class="token punctuation">&#125;</span>
<span class="token keyword">for</span> i<span class="token punctuation">,</span> <span class="token boolean">_</span> <span class="token operator">:=</span> <span class="token keyword">range</span> testdata<span class="token punctuation">.</span>a <span class="token punctuation">&#123;</span>
	<span class="token comment">// testdata.a is never evaluated; len(testdata.a) is constant</span>
	<span class="token comment">// i ranges from 0 to 6</span>
	<span class="token function">f</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span>
<span class="token punctuation">&#125;</span>

<span class="token keyword">var</span> a <span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">]</span><span class="token builtin">string</span>
<span class="token keyword">for</span> i<span class="token punctuation">,</span> s <span class="token operator">:=</span> <span class="token keyword">range</span> a <span class="token punctuation">&#123;</span>
	<span class="token comment">// type of i is int</span>
	<span class="token comment">// type of s is string</span>
	<span class="token comment">// s == a[i]</span>
	<span class="token function">g</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> s<span class="token punctuation">)</span>
<span class="token punctuation">&#125;</span>

<span class="token keyword">var</span> key <span class="token builtin">string</span>
<span class="token keyword">var</span> val <span class="token keyword">interface</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span>  <span class="token comment">// element type of m is assignable to val</span>
m <span class="token operator">:=</span> <span class="token keyword">map</span><span class="token punctuation">[</span><span class="token builtin">string</span><span class="token punctuation">]</span><span class="token builtin">int</span><span class="token punctuation">&#123;</span><span class="token string">"mon"</span><span class="token punctuation">:</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">"tue"</span><span class="token punctuation">:</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">"wed"</span><span class="token punctuation">:</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">"thu"</span><span class="token punctuation">:</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token string">"fri"</span><span class="token punctuation">:</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token string">"sat"</span><span class="token punctuation">:</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token string">"sun"</span><span class="token punctuation">:</span><span class="token number">6</span><span class="token punctuation">&#125;</span>
<span class="token keyword">for</span> key<span class="token punctuation">,</span> val <span class="token operator">=</span> <span class="token keyword">range</span> m <span class="token punctuation">&#123;</span>
	<span class="token function">h</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> val<span class="token punctuation">)</span>
<span class="token punctuation">&#125;</span>
<span class="token comment">// key == last map key encountered in iteration</span>
<span class="token comment">// val == map[key]</span>

<span class="token keyword">var</span> ch <span class="token keyword">chan</span> Work <span class="token operator">=</span> <span class="token function">producer</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">for</span> w <span class="token operator">:=</span> <span class="token keyword">range</span> ch <span class="token punctuation">&#123;</span>
	<span class="token function">doWork</span><span class="token punctuation">(</span>w<span class="token punctuation">)</span>
<span class="token punctuation">&#125;</span>

<span class="token comment">// empty a channel</span>
<span class="token keyword">for</span> <span class="token keyword">range</span> ch <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>



<h4 id="Go-语句"><a href="#Go-语句" class="headerlink" title="Go 语句"></a>Go 语句</h4><p><code>go</code> 语句会开始在相同地址空间中的单独 goroutine 中调用函数。</p>
<pre class="line-numbers language-go" data-language="go"><code class="language-go">GoStmt <span class="token operator">=</span> <span class="token string">"go"</span> Expression <span class="token punctuation">.</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>



<p>表达式必须是函数或者方法调用；它不能使用括号括起来，调用内置函数有表达式语句的限制。</p>
<p>函数的值和参数会按顺序在调用的 goroutine 中求值。不像普通的函数调用，程序不会等待函数调用完成，而是直接开启一个新的 goroutine 执行函数。函数退出时，goroutine 也会退出。函数的任何返回值都会被丢弃。</p>
<pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">go</span> <span class="token function">Server</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">go</span> <span class="token keyword">func</span><span class="token punctuation">(</span>ch <span class="token keyword">chan</span><span class="token operator">&lt;-</span> <span class="token builtin">bool</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> <span class="token keyword">for</span> <span class="token punctuation">&#123;</span> <span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span> ch <span class="token operator">&lt;-</span> <span class="token boolean">true</span> <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span> <span class="token punctuation">(</span>c<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>



<h4 id="select-语句"><a href="#select-语句" class="headerlink" title="select 语句"></a>select 语句</h4><p>select 语句会在接收&#x2F;发送操作集中选择一个执行。它看起来和 switch 很像，只不过是专门针对通信操作的。</p>
<pre class="line-numbers language-go" data-language="go"><code class="language-go">SelectStmt <span class="token operator">=</span> <span class="token string">"select"</span> <span class="token string">"&#123;"</span> <span class="token punctuation">&#123;</span> CommClause <span class="token punctuation">&#125;</span> <span class="token string">"&#125;"</span> <span class="token punctuation">.</span>
CommClause <span class="token operator">=</span> CommCase <span class="token string">":"</span> StatementList <span class="token punctuation">.</span>
CommCase   <span class="token operator">=</span> <span class="token string">"case"</span> <span class="token punctuation">(</span> SendStmt <span class="token operator">|</span> RecvStmt <span class="token punctuation">)</span> <span class="token operator">|</span> <span class="token string">"default"</span> <span class="token punctuation">.</span>
RecvStmt   <span class="token operator">=</span> <span class="token punctuation">[</span> ExpressionList <span class="token string">"="</span> <span class="token operator">|</span> IdentifierList <span class="token string">":="</span> <span class="token punctuation">]</span> RecvExpr <span class="token punctuation">.</span>
RecvExpr   <span class="token operator">=</span> Expression <span class="token punctuation">.</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>



<p>接收表达式可以将接收表达式的值分配给一个或两个变量。接收表达式必须是一个接收运算元（可以使用括号括起来）。它最多允许有一个 default 语句。</p>
<p>select 语句执行以下几个步骤：</p>
<ol>
<li><p>对于 select 语句的所有分句，接收操作的通道运算元、通道、发送语句的右侧表达式都会执行一次操作。</p>
</li>
<li><p>如果一个或多个通信同时发生，它会通过一致性随机选择一个执行。如果没有 default 语句，select 语句会一直阻塞。</p>
</li>
<li><p>除了 default 分句，其他分句只有在开始进行通信的时候才会执行。</p>
</li>
<li><p>如果 select 分句是一个接收语句，它可以给变量分配值。</p>
</li>
<li><p>执行 select 分句内的内容。</p>
</li>
</ol>
<p>如果向 nil 通道发送信息在没有 default 分句的情况下会一直阻塞。</p>
<pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">var</span> a <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">int</span>
<span class="token keyword">var</span> c<span class="token punctuation">,</span> c1<span class="token punctuation">,</span> c2<span class="token punctuation">,</span> c3<span class="token punctuation">,</span> c4 <span class="token keyword">chan</span> <span class="token builtin">int</span>
<span class="token keyword">var</span> i1<span class="token punctuation">,</span> i2 <span class="token builtin">int</span>
<span class="token keyword">select</span> <span class="token punctuation">&#123;</span>
<span class="token keyword">case</span> i1 <span class="token operator">=</span> <span class="token operator">&lt;-</span>c1<span class="token punctuation">:</span>
	<span class="token function">print</span><span class="token punctuation">(</span><span class="token string">"received "</span><span class="token punctuation">,</span> i1<span class="token punctuation">,</span> <span class="token string">" from c1\n"</span><span class="token punctuation">)</span>
<span class="token keyword">case</span> c2 <span class="token operator">&lt;-</span> i2<span class="token punctuation">:</span>
	<span class="token function">print</span><span class="token punctuation">(</span><span class="token string">"sent "</span><span class="token punctuation">,</span> i2<span class="token punctuation">,</span> <span class="token string">" to c2\n"</span><span class="token punctuation">)</span>
<span class="token keyword">case</span> i3<span class="token punctuation">,</span> ok <span class="token operator">:=</span> <span class="token punctuation">(</span><span class="token operator">&lt;-</span>c3<span class="token punctuation">)</span><span class="token punctuation">:</span>  <span class="token comment">// same as: i3, ok := &lt;-c3</span>
	<span class="token keyword">if</span> ok <span class="token punctuation">&#123;</span>
		<span class="token function">print</span><span class="token punctuation">(</span><span class="token string">"received "</span><span class="token punctuation">,</span> i3<span class="token punctuation">,</span> <span class="token string">" from c3\n"</span><span class="token punctuation">)</span>
	<span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>
		<span class="token function">print</span><span class="token punctuation">(</span><span class="token string">"c3 is closed\n"</span><span class="token punctuation">)</span>
	<span class="token punctuation">&#125;</span>
<span class="token keyword">case</span> a<span class="token punctuation">[</span><span class="token function">f</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token operator">&lt;-</span>c4<span class="token punctuation">:</span>
	<span class="token comment">// same as:</span>
	<span class="token comment">// case t := &lt;-c4</span>
	<span class="token comment">//	a[f()] = t</span>
<span class="token keyword">default</span><span class="token punctuation">:</span>
	<span class="token function">print</span><span class="token punctuation">(</span><span class="token string">"no communication\n"</span><span class="token punctuation">)</span>
<span class="token punctuation">&#125;</span>

<span class="token keyword">for</span> <span class="token punctuation">&#123;</span>  <span class="token comment">// send random sequence of bits to c</span>
	<span class="token keyword">select</span> <span class="token punctuation">&#123;</span>
	<span class="token keyword">case</span> c <span class="token operator">&lt;-</span> <span class="token number">0</span><span class="token punctuation">:</span>  <span class="token comment">// note: no statement, no fallthrough, no folding of cases</span>
	<span class="token keyword">case</span> c <span class="token operator">&lt;-</span> <span class="token number">1</span><span class="token punctuation">:</span>
	<span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span>

<span class="token keyword">select</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span>  <span class="token comment">// block forever</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>



<h4 id="return-语句"><a href="#return-语句" class="headerlink" title="return 语句"></a>return 语句</h4><p><code>return</code> 语句会终止函数 F 的执行并可选的返回一个或多个返回值。所有的滞后函数都会在 F 返回到它的调用者之前执行。</p>
<pre class="line-numbers language-go" data-language="go"><code class="language-go">ReturnStmt <span class="token operator">=</span> <span class="token string">"return"</span> <span class="token punctuation">[</span> ExpressionList <span class="token punctuation">]</span> <span class="token punctuation">.</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>



<p>如果函数没有返回值类型，return 不能返回任何值。</p>
<pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">func</span> <span class="token function">noResult</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
	<span class="token keyword">return</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>



<p>有三种方式能够返回指定类型的值：</p>
<ol>
<li>返回值可以直接在 return 语句中列出。每个表达式都必须返回一个值并且能够分配给相应的返回值类型。</li>
</ol>
<pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">func</span> <span class="token function">simpleF</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token builtin">int</span> <span class="token punctuation">&#123;</span>
	<span class="token keyword">return</span> <span class="token number">2</span>
<span class="token punctuation">&#125;</span>

<span class="token keyword">func</span> <span class="token function">complexF1</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>re <span class="token builtin">float64</span><span class="token punctuation">,</span> im <span class="token builtin">float64</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
	<span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">7.0</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">4.0</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<ol>
<li>return 语句的表达式列表可以是一个返回多值的函数调用。这时会使用临时变量来获取函数调用的返回值并直接将其作为 return 语句的表达式列表。</li>
</ol>
<pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">func</span> <span class="token function">complexF2</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>re <span class="token builtin">float64</span><span class="token punctuation">,</span> im <span class="token builtin">float64</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
	<span class="token keyword">return</span> <span class="token function">complexF1</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>

<ol>
<li>如果制定了返回值的标识符那么 return 的表达式列表可以为空。返回值参数会作为普通的本地变量按需分配。return 语句会直接返回它们。</li>
</ol>
<pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">func</span> <span class="token function">complexF3</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>re <span class="token builtin">float64</span><span class="token punctuation">,</span> im <span class="token builtin">float64</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
	re <span class="token operator">=</span> <span class="token number">7.0</span>
	im <span class="token operator">=</span> <span class="token number">4.0</span>
	<span class="token keyword">return</span>
<span class="token punctuation">&#125;</span>

<span class="token keyword">func</span> <span class="token punctuation">(</span>devnull<span class="token punctuation">)</span> <span class="token function">Write</span><span class="token punctuation">(</span>p <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">byte</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>n <span class="token builtin">int</span><span class="token punctuation">,</span> <span class="token boolean">_</span> <span class="token builtin">error</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
	n <span class="token operator">=</span> <span class="token function">len</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span>
	<span class="token keyword">return</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>



<p>不管如何声明，所有的返回值都会在进入函数前提前初始化成类型的零值。return 语句会在所有 defer 函数之前指定返回值。</p>
<p>实现限制：编译器不允许在覆盖了命名返回值的作用域中直接返回。</p>
<pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">func</span> <span class="token function">f</span><span class="token punctuation">(</span>n <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>res <span class="token builtin">int</span><span class="token punctuation">,</span> err <span class="token builtin">error</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
	<span class="token keyword">if</span> <span class="token boolean">_</span><span class="token punctuation">,</span> err <span class="token operator">:=</span> <span class="token function">f</span><span class="token punctuation">(</span>n<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">&#123;</span>
		<span class="token keyword">return</span>  <span class="token comment">// invalid return statement: err is shadowed</span>
	<span class="token punctuation">&#125;</span>
	<span class="token keyword">return</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>



<h4 id="break-语句"><a href="#break-语句" class="headerlink" title="break 语句"></a>break 语句</h4><p><code>break</code> 语句会在 <code>for</code>、<code>switch</code> 或 <code>select</code> 语句内部退出到相同函数的某个位置。</p>
<pre class="line-numbers language-go" data-language="go"><code class="language-go">BreakStmt <span class="token operator">=</span> <span class="token string">"break"</span> <span class="token punctuation">[</span> Label <span class="token punctuation">]</span> <span class="token punctuation">.</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>



<p>如果想指定标签，它必须出现在它所中止的 <code>for</code>、<code>switch</code> 或 <code>select</code> 语句旁。</p>
<pre class="line-numbers language-go" data-language="go"><code class="language-go">OuterLoop<span class="token punctuation">:</span>
	<span class="token keyword">for</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span> <span class="token punctuation">&#123;</span>
		<span class="token keyword">for</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> m<span class="token punctuation">;</span> j<span class="token operator">++</span> <span class="token punctuation">&#123;</span>
			<span class="token keyword">switch</span> a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token punctuation">&#123;</span>
			<span class="token keyword">case</span> <span class="token boolean">nil</span><span class="token punctuation">:</span>
				state <span class="token operator">=</span> Error
				<span class="token keyword">break</span> OuterLoop
			<span class="token keyword">case</span> item<span class="token punctuation">:</span>
				state <span class="token operator">=</span> Found
				<span class="token keyword">break</span> OuterLoop
			<span class="token punctuation">&#125;</span>
		<span class="token punctuation">&#125;</span>
	<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>



<h4 id="continue-语句"><a href="#continue-语句" class="headerlink" title="continue 语句"></a>continue 语句</h4><p><code>continue</code> 语句会提前 <code>for</code> 语句的下一次迭代。<code>for</code> 语句必须和 <code>continue</code> 在相同函数中。</p>
<pre class="line-numbers language-go" data-language="go"><code class="language-go">RowLoop<span class="token punctuation">:</span>
	<span class="token keyword">for</span> y<span class="token punctuation">,</span> row <span class="token operator">:=</span> <span class="token keyword">range</span> rows <span class="token punctuation">&#123;</span>
		<span class="token keyword">for</span> x<span class="token punctuation">,</span> data <span class="token operator">:=</span> <span class="token keyword">range</span> row <span class="token punctuation">&#123;</span>
			<span class="token keyword">if</span> data <span class="token operator">==</span> endOfRow <span class="token punctuation">&#123;</span>
				<span class="token keyword">continue</span> RowLoop
			<span class="token punctuation">&#125;</span>
			row<span class="token punctuation">[</span>x<span class="token punctuation">]</span> <span class="token operator">=</span> data <span class="token operator">+</span> <span class="token function">bias</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">)</span>
		<span class="token punctuation">&#125;</span>
	<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>



<h4 id="goto-语句"><a href="#goto-语句" class="headerlink" title="goto 语句"></a>goto 语句</h4><p><code>goto</code> 会将程序跳转到相同函数的指定标签处。</p>
<pre class="line-numbers language-go" data-language="go"><code class="language-go">GotoStmt <span class="token operator">=</span> <span class="token string">"goto"</span> Label <span class="token punctuation">.</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>



<pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">goto</span> Error<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>



<p>goto 语句不允许跳过作用域内程序变量的初始化工作。</p>
<pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">goto</span> L  <span class="token comment">// BAD</span>
	v <span class="token operator">:=</span> <span class="token number">3</span>
L<span class="token punctuation">:</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>



<p>上面的程序是错误的，因为它跳过了变量 v 的初始化过程。</p>
<pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">if</span> n<span class="token operator">%</span><span class="token number">2</span> <span class="token operator">==</span> <span class="token number">1</span> <span class="token punctuation">&#123;</span>
	<span class="token keyword">goto</span> L1
<span class="token punctuation">&#125;</span>
<span class="token keyword">for</span> n <span class="token operator">></span> <span class="token number">0</span> <span class="token punctuation">&#123;</span>
	<span class="token function">f</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
	n<span class="token operator">--</span>
L1<span class="token punctuation">:</span>
	<span class="token function">f</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
	n<span class="token operator">--</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>



<p>标签作用域外的 goto 语句不能跳转到标签处，所以上面的代码是错误的。</p>
<h4 id="Fallthrough-语句"><a href="#Fallthrough-语句" class="headerlink" title="Fallthrough 语句"></a>Fallthrough 语句</h4><p><code>fallthrough</code> 语句会跳转到 <code>switch</code> 语句中的下一个 case 分句中。它应该只在最后一个非空分句中使用。</p>
<pre class="line-numbers language-go" data-language="go"><code class="language-go">FallthroughStmt <span class="token operator">=</span> <span class="token string">"fallthrough"</span> <span class="token punctuation">.</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>



<h4 id="Defer-语句"><a href="#Defer-语句" class="headerlink" title="Defer 语句"></a>Defer 语句</h4><p><code>defer</code> 语句会在包裹函数返回后触发函数调用。这里的返回泛指函数因为 return 语句终止、到达函数末尾或者当前 goroutine 触发运行时恐慌。</p>
<pre class="line-numbers language-go" data-language="go"><code class="language-go">DeferStmt <span class="token operator">=</span> <span class="token string">"defer"</span> Expression <span class="token punctuation">.</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>



<p>表达式必须是函数或者方法调用；它不能使用括号括起来，调用内置函数会有一些限制。</p>
<p>每次执行 defer 语句执行时都会计算函数的参数和值，但是并不会调用函数。相反，函数的调用是在包裹函数返回后进行，它们的执行顺序与声明顺序正好相反。如果 defer 对应的函数值为 nil，会在调用函数的时候导致运行时恐慌而不是声明 defer 语句的时候。</p>
<p>例如：当 defer 函数为函数字面值且包裹函数具有命名结果值，此时，我们在defer 函数中可以访问和修改命名的结果值。defer 函数的所有返回值都会被忽略。</p>
<pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token function">lock</span><span class="token punctuation">(</span>l<span class="token punctuation">)</span>
<span class="token keyword">defer</span> <span class="token function">unlock</span><span class="token punctuation">(</span>l<span class="token punctuation">)</span>  <span class="token comment">// unlocking happens before surrounding function returns</span>

<span class="token comment">// prints 3 2 1 0 before surrounding function returns</span>
<span class="token keyword">for</span> i <span class="token operator">:=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> <span class="token number">3</span><span class="token punctuation">;</span> i<span class="token operator">++</span> <span class="token punctuation">&#123;</span>
	<span class="token keyword">defer</span> fmt<span class="token punctuation">.</span><span class="token function">Print</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span>
<span class="token punctuation">&#125;</span>

<span class="token comment">// f returns 1</span>
<span class="token keyword">func</span> <span class="token function">f</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>result <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
	<span class="token keyword">defer</span> <span class="token keyword">func</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
		result<span class="token operator">++</span>
	<span class="token punctuation">&#125;</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
	<span class="token keyword">return</span> <span class="token number">0</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>



<h4 id="内置函数"><a href="#内置函数" class="headerlink" title="内置函数"></a>内置函数</h4><p>内置函数是预定义的。调用他们和其他函数一样只是他们接受一个类型而不是一个表达式。</p>
<p>内置函数没有标准的 Go 类型，所以他们只能作为调用表达式；而不能作为函数的值。</p>
<h6 id="Close"><a href="#Close" class="headerlink" title="Close"></a>Close</h6><p>对于管道类型 c，内置函数 <code>close(c)</code> 意味着不在有数据插入到管道中。如果 <code>c</code> 是一个只接收数据的管道，会发生错误。向已经关闭的发送数据或者重复关闭已经关闭的管道会导致运行时恐慌。关闭 nil 管道会引起运行时恐慌。调用 close 后所有之前发送的数据都能接收到，并且在最后不会阻塞而返回零值。多值的接收操作能够返回接收到的数据和表示管道是否关闭的布尔值。</p>
<h6 id="长度和容积"><a href="#长度和容积" class="headerlink" title="长度和容积"></a>长度和容积</h6><p>内置函数 <code>len</code> 和 <code>cap</code> 可以接收多种类型的参数，并且返回一个 int 类型结果值。函数的实现能够确保结果值不会溢出。</p>
<pre class="line-numbers language-go" data-language="go"><code class="language-go">Call      Argument <span class="token keyword">type</span>    Result

<span class="token function">len</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span>    <span class="token builtin">string</span> <span class="token keyword">type</span>      <span class="token builtin">string</span> length in bytes
          <span class="token punctuation">[</span>n<span class="token punctuation">]</span>T<span class="token punctuation">,</span> <span class="token operator">*</span><span class="token punctuation">[</span>n<span class="token punctuation">]</span>T      array length <span class="token punctuation">(</span><span class="token operator">==</span> n<span class="token punctuation">)</span>
          <span class="token punctuation">[</span><span class="token punctuation">]</span>T              slice length
          <span class="token keyword">map</span><span class="token punctuation">[</span>K<span class="token punctuation">]</span>T          <span class="token keyword">map</span> length <span class="token punctuation">(</span>number of defined keys<span class="token punctuation">)</span>
          <span class="token keyword">chan</span> T           number of elements queued in channel buffer

<span class="token function">cap</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span>    <span class="token punctuation">[</span>n<span class="token punctuation">]</span>T<span class="token punctuation">,</span> <span class="token operator">*</span><span class="token punctuation">[</span>n<span class="token punctuation">]</span>T      array length <span class="token punctuation">(</span><span class="token operator">==</span> n<span class="token punctuation">)</span>
          <span class="token punctuation">[</span><span class="token punctuation">]</span>T              slice capacity
          <span class="token keyword">chan</span> T           channel buffer capacity<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>



<p>切片的容积底层数组包含的元素个数。在任何情况下都有以下关系：</p>
<pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token number">0</span> <span class="token operator">&lt;=</span> <span class="token function">len</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span> <span class="token operator">&lt;=</span> <span class="token function">cap</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>



<p><code>nil</code> 切片，map，或者 channel 的长度都为 0。<code>nil</code> 切片，管道的容积都为 0。</p>
<p>表达式 <code>len(x)</code> 在 <code>s</code> 是字符串常量时也为常量。如果 <code>s</code> 为数组或者指向数组的指针并且表达式 s 不包含 <code>channel</code> 接收器或者函数调用那么 <code>len(s)</code> 和 <code>cap(s)</code> 也是常量；在这个情况下 s 时不能求值的。其他情况下 <code>len</code> 和 <code>cap</code> 不是常量并且 <code>s</code> 是可以求值的。</p>
<pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">const</span> <span class="token punctuation">(</span>
	c1 <span class="token operator">=</span> <span class="token function">imag</span><span class="token punctuation">(</span><span class="token number">2i</span><span class="token punctuation">)</span>                    <span class="token comment">// imag(2i) = 2.0 is a constant</span>
	c2 <span class="token operator">=</span> <span class="token function">len</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">]</span><span class="token builtin">float64</span><span class="token punctuation">&#123;</span><span class="token number">2</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>         <span class="token comment">// [10]float64&#123;2&#125; contains no function calls</span>
	c3 <span class="token operator">=</span> <span class="token function">len</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">]</span><span class="token builtin">float64</span><span class="token punctuation">&#123;</span>c1<span class="token punctuation">&#125;</span><span class="token punctuation">)</span>        <span class="token comment">// [10]float64&#123;c1&#125; contains no function calls</span>
	c4 <span class="token operator">=</span> <span class="token function">len</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">]</span><span class="token builtin">float64</span><span class="token punctuation">&#123;</span><span class="token function">imag</span><span class="token punctuation">(</span><span class="token number">2i</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>  <span class="token comment">// imag(2i) is a constant and no function call is issued</span>
	c5 <span class="token operator">=</span> <span class="token function">len</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">]</span><span class="token builtin">float64</span><span class="token punctuation">&#123;</span><span class="token function">imag</span><span class="token punctuation">(</span>z<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>   <span class="token comment">// invalid: imag(z) is a (non-constant) function call</span>
<span class="token punctuation">)</span>
<span class="token keyword">var</span> z <span class="token builtin">complex128</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>



<h6 id="内存分配"><a href="#内存分配" class="headerlink" title="内存分配"></a>内存分配</h6><p>内置函数 <code>new</code> 接收一个类型 T，它会在运行时给变量分配内存，并且返回一个指向类型 <code>T</code> 的 <code>*T</code> 类型指针。变量的初始化在初始化值章节中介绍。</p>
<pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token function">new</span><span class="token punctuation">(</span>T<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>



<p>例如：</p>
<pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">type</span> S <span class="token keyword">struct</span> <span class="token punctuation">&#123;</span> a <span class="token builtin">int</span><span class="token punctuation">;</span> b <span class="token builtin">float64</span> <span class="token punctuation">&#125;</span>
<span class="token function">new</span><span class="token punctuation">(</span>S<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>



<p>给 S 类型的变量分配空间，并初始化它（<code>a=0</code>，<code>b=0.0</code>），并且返回一个 <code>*S</code> 类型值保存变量所在的位置。</p>
<h6 id="创建切片，map-和-管道"><a href="#创建切片，map-和-管道" class="headerlink" title="创建切片，map 和 管道"></a>创建切片，map 和 管道</h6><p>内置函数 <code>make</code> 以一个类型作为参数，它必须是一个切片，map 或者管道类型，它返回一个 T 类型的值，而不是（*T）类型，它会按初始化值章节描述的方式进行初始化。</p>
<pre class="line-numbers language-go" data-language="go"><code class="language-go">Call             Type T     Result

<span class="token function">make</span><span class="token punctuation">(</span>T<span class="token punctuation">,</span> n<span class="token punctuation">)</span>       slice      slice of <span class="token keyword">type</span> T with length n and capacity n
<span class="token function">make</span><span class="token punctuation">(</span>T<span class="token punctuation">,</span> n<span class="token punctuation">,</span> m<span class="token punctuation">)</span>    slice      slice of <span class="token keyword">type</span> T with length n and capacity m

<span class="token function">make</span><span class="token punctuation">(</span>T<span class="token punctuation">)</span>          <span class="token keyword">map</span>        <span class="token keyword">map</span> of <span class="token keyword">type</span> T
<span class="token function">make</span><span class="token punctuation">(</span>T<span class="token punctuation">,</span> n<span class="token punctuation">)</span>       <span class="token keyword">map</span>        <span class="token keyword">map</span> of <span class="token keyword">type</span> T with initial space <span class="token keyword">for</span> approximately n elements

<span class="token function">make</span><span class="token punctuation">(</span>T<span class="token punctuation">)</span>          channel    unbuffered channel of <span class="token keyword">type</span> T
<span class="token function">make</span><span class="token punctuation">(</span>T<span class="token punctuation">,</span> n<span class="token punctuation">)</span>       channel    buffered channel of <span class="token keyword">type</span> T<span class="token punctuation">,</span> buffer size n<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>



<p>n 和 m 必须是整数类型或者无类型常量。一个常量参数不能为负数并且该值在 <code>int</code> 类型的范围内；如果它是无类型常量，会被转换成 <code>int</code> 类型。如果 n 和 m 都是常量，那么 n 必须大于 m。如果 n 是负数或者大于 m 会引发运行时 panic。</p>
<pre class="line-numbers language-go" data-language="go"><code class="language-go">s <span class="token operator">:=</span> <span class="token function">make</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">int</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span>       <span class="token comment">// slice with len(s) == 10, cap(s) == 100</span>
s <span class="token operator">:=</span> <span class="token function">make</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">int</span><span class="token punctuation">,</span> <span class="token number">1e3</span><span class="token punctuation">)</span>           <span class="token comment">// slice with len(s) == cap(s) == 1000</span>
s <span class="token operator">:=</span> <span class="token function">make</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">int</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token operator">&lt;&lt;</span><span class="token number">63</span><span class="token punctuation">)</span>         <span class="token comment">// illegal: len(s) is not representable by a value of type int</span>
s <span class="token operator">:=</span> <span class="token function">make</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">int</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>         <span class="token comment">// illegal: len(s) > cap(s)</span>
c <span class="token operator">:=</span> <span class="token function">make</span><span class="token punctuation">(</span><span class="token keyword">chan</span> <span class="token builtin">int</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span>         <span class="token comment">// channel with a buffer size of 10</span>
m <span class="token operator">:=</span> <span class="token function">make</span><span class="token punctuation">(</span><span class="token keyword">map</span><span class="token punctuation">[</span><span class="token builtin">string</span><span class="token punctuation">]</span><span class="token builtin">int</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span>  <span class="token comment">// map with initial space for approximately 100 elements</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>



<p>使用 make 来指定大小初始化 map 类型将会创建一个预留 n 个元素空间的 map 类型。更详细的行为依赖于具体实现。</p>
<h6 id="追加或者拷贝切片"><a href="#追加或者拷贝切片" class="headerlink" title="追加或者拷贝切片"></a>追加或者拷贝切片</h6><p>内置函数 <code>append</code> 和 <code>copy</code> 可以进行切片的通用操作。对于这两个函数，一个是拷贝内存，一个是引用内存。</p>
<p>可变参数的函数 <code>append</code> 可以向切片 s 中追加一个或多个 x 值，并返回这个切片。传进 <code>...T</code> 的值会根据参数传值。作为特例，<code>append</code> 在 s 为 <code>[]byte</code> 切片时，可以使用字符串后面跟 <code>...</code> 作为参数。</p>
<p>如果 s 的容积容纳不下这些元素，那么 <code>append</code> 会分配一个新的足够大的数组。否则会使用原来的底层数组。</p>
<pre class="line-numbers language-go" data-language="go"><code class="language-go">s0 <span class="token operator">:=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">int</span><span class="token punctuation">&#123;</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">&#125;</span>
s1 <span class="token operator">:=</span> <span class="token function">append</span><span class="token punctuation">(</span>s0<span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span>                <span class="token comment">// append a single element     s1 == []int&#123;0, 0, 2&#125;</span>
s2 <span class="token operator">:=</span> <span class="token function">append</span><span class="token punctuation">(</span>s1<span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">)</span>          <span class="token comment">// append multiple elements    s2 == []int&#123;0, 0, 2, 3, 5, 7&#125;</span>
s3 <span class="token operator">:=</span> <span class="token function">append</span><span class="token punctuation">(</span>s2<span class="token punctuation">,</span> s0<span class="token operator">...</span><span class="token punctuation">)</span>            <span class="token comment">// append a slice              s3 == []int&#123;0, 0, 2, 3, 5, 7, 0, 0&#125;</span>
s4 <span class="token operator">:=</span> <span class="token function">append</span><span class="token punctuation">(</span>s3<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">:</span><span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">,</span> s3<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token operator">...</span><span class="token punctuation">)</span>   <span class="token comment">// append overlapping slice    s4 == []int&#123;3, 5, 7, 2, 3, 5, 7, 0, 0&#125;</span>

<span class="token keyword">var</span> t <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token keyword">interface</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span>
t <span class="token operator">=</span> <span class="token function">append</span><span class="token punctuation">(</span>t<span class="token punctuation">,</span> <span class="token number">42</span><span class="token punctuation">,</span> <span class="token number">3.1415</span><span class="token punctuation">,</span> <span class="token string">"foo"</span><span class="token punctuation">)</span>   <span class="token comment">//                             t == []interface&#123;&#125;&#123;42, 3.1415, "foo"&#125;</span>

<span class="token keyword">var</span> b <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">byte</span>
b <span class="token operator">=</span> <span class="token function">append</span><span class="token punctuation">(</span>b<span class="token punctuation">,</span> <span class="token string">"bar"</span><span class="token operator">...</span><span class="token punctuation">)</span>            <span class="token comment">// append string contents      b == []byte&#123;'b', 'a', 'r' &#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>



<p><code>copy</code> 函数从 <code>src</code> 拷贝原属到 <code>dst</code> 并且返回拷贝元素的个数。参数中所有的元素类型必须是 T 类型或者能转换成 T 的类型。拷贝元素的数量是 <code>len(src)</code> 和 <code>len(dst)</code> 中的较小值。作为特例，<code>copy</code> 可以从 string 类型拷贝元素到 <code>[]byte</code> 类型。这会把字符串中的元素拷贝到字节切片中。</p>
<pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token function">copy</span><span class="token punctuation">(</span>dst<span class="token punctuation">,</span> src <span class="token punctuation">[</span><span class="token punctuation">]</span>T<span class="token punctuation">)</span> <span class="token builtin">int</span>
<span class="token function">copy</span><span class="token punctuation">(</span>dst <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">byte</span><span class="token punctuation">,</span> src <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token builtin">int</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>



<p>例：</p>
<pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">var</span> a <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">...</span><span class="token punctuation">]</span><span class="token builtin">int</span><span class="token punctuation">&#123;</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">&#125;</span>
<span class="token keyword">var</span> s <span class="token operator">=</span> <span class="token function">make</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">int</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">)</span>
<span class="token keyword">var</span> b <span class="token operator">=</span> <span class="token function">make</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">byte</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span>
n1 <span class="token operator">:=</span> <span class="token function">copy</span><span class="token punctuation">(</span>s<span class="token punctuation">,</span> a<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">)</span>            <span class="token comment">// n1 == 6, s == []int&#123;0, 1, 2, 3, 4, 5&#125;</span>
n2 <span class="token operator">:=</span> <span class="token function">copy</span><span class="token punctuation">(</span>s<span class="token punctuation">,</span> s<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">)</span>            <span class="token comment">// n2 == 4, s == []int&#123;2, 3, 4, 5, 4, 5&#125;</span>
n3 <span class="token operator">:=</span> <span class="token function">copy</span><span class="token punctuation">(</span>b<span class="token punctuation">,</span> <span class="token string">"Hello, World!"</span><span class="token punctuation">)</span>  <span class="token comment">// n3 == 5, b == []byte("Hello")</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>



<h6 id="删除-map-中的元素"><a href="#删除-map-中的元素" class="headerlink" title="删除 map 中的元素"></a>删除 map 中的元素</h6><p>内置函数 <code>delete</code> 移除 map 类型 m 中的键值 k。k 的类型必须是能够转换成 m 键类型的类型。</p>
<pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token function">delete</span><span class="token punctuation">(</span>m<span class="token punctuation">,</span> k<span class="token punctuation">)</span>  <span class="token comment">// remove element m[k] from map m</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>



<p>如果 map 类型 m 是 nil 或者 m[k] 不存在，那么 <code>delete</code> 函数不做任何事情。</p>
<h6 id="操作复数"><a href="#操作复数" class="headerlink" title="操作复数"></a>操作复数</h6><p>有三个函数可以组装或者分解复数。内置函数 <code>complex</code> 会构造一个复数，<code>real</code> 和 <code>imag</code> 会分解出复数的实部和虚部。</p>
<pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token function">complex</span><span class="token punctuation">(</span>realPart<span class="token punctuation">,</span> imaginaryPart floatT<span class="token punctuation">)</span> complexT
<span class="token function">real</span><span class="token punctuation">(</span>complexT<span class="token punctuation">)</span> floatT
<span class="token function">imag</span><span class="token punctuation">(</span>complexT<span class="token punctuation">)</span> floatT<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>



<p>参数的类型和返回值类型是对应的。对于 <code>complex</code>，两个参数必须是相同的浮点类型，并返回由相同浮点数组成的复数类型。<code>complex64</code> 是 <code>float32</code> 对应的类型，<code>complex128</code> 是 <code>float64</code> 对应的参数类型。如果参数是一个无类型常量，它会转换成另一个参数的类型。如果两个参数都是无类型常量，他们必须实数或者虚数部分为零，并且它会返回一个无类型的复数常量。</p>
<p><code>real</code> 和 <code>imag</code> 函数和 <code>complex</code> 正好相反的，所以对于一个值复数类型 Z 的值 z，<code>z==Z(complex(real(z),imag(z)))</code>。</p>
<p>如果这么操作都是常量，那么返回的值也是常量。</p>
<pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">var</span> a <span class="token operator">=</span> <span class="token function">complex</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">)</span>             <span class="token comment">// complex128</span>
<span class="token keyword">const</span> b <span class="token operator">=</span> <span class="token function">complex</span><span class="token punctuation">(</span><span class="token number">1.0</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1.4</span><span class="token punctuation">)</span>       <span class="token comment">// untyped complex constant 1 - 1.4i</span>
x <span class="token operator">:=</span> <span class="token function">float32</span><span class="token punctuation">(</span>math<span class="token punctuation">.</span><span class="token function">Cos</span><span class="token punctuation">(</span>math<span class="token punctuation">.</span>Pi<span class="token operator">/</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment">// float32</span>
<span class="token keyword">var</span> c64 <span class="token operator">=</span> <span class="token function">complex</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token operator">-</span>x<span class="token punctuation">)</span>           <span class="token comment">// complex64</span>
<span class="token keyword">var</span> s <span class="token builtin">uint</span> <span class="token operator">=</span> <span class="token function">complex</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>         <span class="token comment">// untyped complex constant 1 + 0i can be converted to uint</span>
<span class="token boolean">_</span> <span class="token operator">=</span> <span class="token function">complex</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token operator">&lt;&lt;</span>s<span class="token punctuation">)</span>               <span class="token comment">// illegal: 2 assumes floating-point type, cannot shift</span>
<span class="token keyword">var</span> rl <span class="token operator">=</span> <span class="token function">real</span><span class="token punctuation">(</span>c64<span class="token punctuation">)</span>                 <span class="token comment">// float32</span>
<span class="token keyword">var</span> im <span class="token operator">=</span> <span class="token function">imag</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span>                   <span class="token comment">// float64</span>
<span class="token keyword">const</span> c <span class="token operator">=</span> <span class="token function">imag</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span>                  <span class="token comment">// untyped constant -1.4</span>
<span class="token boolean">_</span> <span class="token operator">=</span> <span class="token function">imag</span><span class="token punctuation">(</span><span class="token number">3</span> <span class="token operator">&lt;&lt;</span> s<span class="token punctuation">)</span>                   <span class="token comment">// illegal: 3 assumes complex type, cannot shift</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>



<h6 id="处理-panic"><a href="#处理-panic" class="headerlink" title="处理 panic"></a>处理 panic</h6><p>两个内置函数 <code>panic</code> 和 <code>recover</code>，可以抛出和处理运行时 <code>panic</code> 和程序的错误条件。</p>
<pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">func</span> <span class="token function">panic</span><span class="token punctuation">(</span><span class="token keyword">interface</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>
<span class="token keyword">func</span> <span class="token function">recover</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">interface</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>



<p>当执行 F 函数时，显式的调用 <code>panic</code>或者运行时 panic 都会中断 F 的执行。但是 F 中的延迟函数还会执行。接下来调用 F 函数处的延迟函数也会执行，一直到顶级的延迟函数。鉴于这点，程序关闭并且错误条件可以抛出。包括 <code>panic</code> 中的值。这个顺序叫做 <code>panicking</code>。</p>
<pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token function">panic</span><span class="token punctuation">(</span><span class="token number">42</span><span class="token punctuation">)</span>
<span class="token function">panic</span><span class="token punctuation">(</span><span class="token string">"unreachable"</span><span class="token punctuation">)</span>
<span class="token function">panic</span><span class="token punctuation">(</span><span class="token function">Error</span><span class="token punctuation">(</span><span class="token string">"cannot parse"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>



<p><code>recover</code> 函数允许程序从一个 panicking 中恢复执行。假设函数 G 延迟执行函数 D ，在 D 中调用 <code>recover</code> 这时如果在 G 执行时发生 panic 会在 D 中恢复。当函数执行到 D，<code>recover</code> 的返回值会返回 <code>panic</code> 对应的错误，并且终止 <code>panicking</code> 。在这个情况下 G 函数和 <code>panic</code> 之间的代码不会执行。任何在 D 中 G 之前的延迟函数会返回到调用者。</p>
<p>在下面两种情况下 <code>recover</code> 会返回 nil：</p>
<ul>
<li><p>panic 的参数为 nil</p>
</li>
<li><p>携程里没有发生 panic</p>
</li>
<li><p>recover 不是在延迟函数中执行</p>
</li>
</ul>
<p>本例中的 <code>protect</code> 函数会在 g 发生 panic 的时候恢复执行。</p>
<pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">func</span> <span class="token function">protect</span><span class="token punctuation">(</span>g <span class="token keyword">func</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
	<span class="token keyword">defer</span> <span class="token keyword">func</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
		log<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">"done"</span><span class="token punctuation">)</span>  <span class="token comment">// Println executes normally even if there is a panic</span>
		<span class="token keyword">if</span> x <span class="token operator">:=</span> <span class="token function">recover</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> x <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">&#123;</span>
			log<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">"run time panic: %v"</span><span class="token punctuation">,</span> x<span class="token punctuation">)</span>
		<span class="token punctuation">&#125;</span>
	<span class="token punctuation">&#125;</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
	log<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">"start"</span><span class="token punctuation">)</span>
	<span class="token function">g</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>



<h6 id="初始化"><a href="#初始化" class="headerlink" title="初始化"></a>初始化</h6><p>这个实现提供了多个内置函数来帮助进行初始化。这些函数用来输出信息但是不确定会一直存在于语言中，他们都没有返回值。</p>
<pre class="line-numbers language-go" data-language="go"><code class="language-go">Function   Behavior

<span class="token builtin">print</span>      prints all arguments<span class="token punctuation">;</span> formatting of arguments is implementation<span class="token operator">-</span>specific
<span class="token builtin">println</span>    like <span class="token builtin">print</span> but prints spaces between arguments and a newline at the end<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>



<p>实现限制：<code>print</code> 和 <code>println</code> 不接受除了布尔值，数字，字符串以外的其他类型。</p>
<h4 id="程序的初始化和执行"><a href="#程序的初始化和执行" class="headerlink" title="程序的初始化和执行"></a>程序的初始化和执行</h4><h6 id="零值"><a href="#零值" class="headerlink" title="零值"></a>零值</h6><p>当为变量分配内存空间时，不管是声明还是调用 <code>new</code> 或者使用字面值和 <code>make</code> 初始化，只要创建了一个新值变量都会有一个默认值。这样的元素和值会使用它类型的零值：<code>false</code> 是布尔值的零值，0 为数值类型零值，”” 为字符串零值，nil 为指针，函数，接口，切片，频道，字典。初始化会递归完成，所以结构体里的数组中的元素也都会有它自己的零值。</p>
<p>下面两个声明时相等的：</p>
<pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">var</span> i <span class="token builtin">int</span>
<span class="token keyword">var</span> i <span class="token builtin">int</span> <span class="token operator">=</span> <span class="token number">0</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>



<p>请看下面的声明：</p>
<pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">type</span> T <span class="token keyword">struct</span> <span class="token punctuation">&#123;</span> i <span class="token builtin">int</span><span class="token punctuation">;</span> f <span class="token builtin">float64</span><span class="token punctuation">;</span> next <span class="token operator">*</span>T <span class="token punctuation">&#125;</span>
t <span class="token operator">:=</span> <span class="token function">new</span><span class="token punctuation">(</span>T<span class="token punctuation">)</span>
t<span class="token punctuation">.</span>i <span class="token operator">==</span> <span class="token number">0</span>
t<span class="token punctuation">.</span>f <span class="token operator">==</span> <span class="token number">0.0</span>
t<span class="token punctuation">.</span>next <span class="token operator">==</span> <span class="token boolean">nil</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>



<p>这和下面的声明时同等效果的：</p>
<pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">var</span> t T<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>



<h6 id="包的初始化"><a href="#包的初始化" class="headerlink" title="包的初始化"></a>包的初始化</h6><p>保级变量会按声明的顺序进行初始化，如果依赖其他变量，则会在其他变量之后进行初始化。</p>
<p>更确切的说，如果包级变量还没初始化并且没有初始化表达式或者表达式中不包含对其他未初始化变量的依赖，那么会认为它正在等待初始化。初始化过程会从最早声明的变量开始向下一个包级变量重复，直到没有需要初始化的变量。</p>
<p>如果在初始化过程完成后还有未初始化的变量，那么这些变量可能是循环初始化了，这事程序不是合法的。</p>
<p>在多个文件中变量的声明顺序会依据编译时文件出现的顺序：声明在第一个文件中的变量优先于第二个文件中声明的变量，依此类推。</p>
<p>对依赖关系的分析不会根据变量的具体值，它只分析在源码中是否引用了其他变量。例如，如果变量 x 的初始化表达式引用了变量 y 那么 x 就依赖于 y：</p>
<ul>
<li><p>引用一个变量或者函数中用到了一个变量</p>
</li>
<li><p>引用了一个方法值 <code>m</code> 或者方法表达式 <code>t.m</code> (这里的静态类型 <code>t</code> 不是借口类型，并且方法 <code>m</code> 是 <code>t</code> 方法集中的方法)。<code>t.m</code> 的返回值不会在此时影响。</p>
</li>
<li><p>变量，函数，或者方法 x 依赖变量 y</p>
</li>
</ul>
<p>依赖分析会在每个包中执行；他只考虑当前包中的析变量，函数，和方法。</p>
<p>例如，给定声明：</p>
<pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">var</span> <span class="token punctuation">(</span>
	a <span class="token operator">=</span> c <span class="token operator">+</span> b
	b <span class="token operator">=</span> <span class="token function">f</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
	c <span class="token operator">=</span> <span class="token function">f</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
	d <span class="token operator">=</span> <span class="token number">3</span>
<span class="token punctuation">)</span>

<span class="token keyword">func</span> <span class="token function">f</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token builtin">int</span> <span class="token punctuation">&#123;</span>
	d<span class="token operator">++</span>
	<span class="token keyword">return</span> d
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>



<p>初始化顺序为 d，b，c，a。</p>
<p>变量可以在包中声明的初始化函数 <code>init</code> 中进行初始化，它没有参数和返回值。</p>
<pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">func</span> <span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>



<p>可以为每个包定义多个该函数，甚至在一个文件中也可以。并且不会声明该该标识符。因此 init 函数不能在程序中调用。</p>
<p>还未导入的包会先初始化包级的变量然后按照 <code>init</code> 函数在源码中的顺序调用，它可能在包的多个文件中。如果需要导入一个包，它会在初始化自己之前先初始化这个需要导入的包。如果导入一个包多次，那这个包只会初始化一次。导入的包不能存在循环引用。</p>
<p>包的初始化——变量初始化和对 init 函数的调用会按顺序发生在同一个 goroutine 中。 <code>init</code> 函数可能会启动其他 goroutine。不过一般 <code>init</code> 函数都是按序进行初始化的：它只在上一步已经执行完成时才会调用下一个步骤。</p>
<p>确保初始化行为是可以复现的，构建系统鼓励在同一个包中包含多个文件这些文件在编译器中会以字母排序。</p>
<h6 id="程序执行"><a href="#程序执行" class="headerlink" title="程序执行"></a>程序执行</h6><p>一个完整的程序由一个 <code>main</code> 包导入所有需要的包。<code>main</code> 包必须以 <code>main</code> 作为包名并且声明一个没有参数和返回值的 <code>main</code> 函数。</p>
<pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>



<p>程序先初始化 <code>main</code> 包然后调用 <code>main</code> 函数。当 <code>main</code> 函数返回时，程序就会退出。它不会等待其他 goroutines 完成。</p>
<h4 id="错误"><a href="#错误" class="headerlink" title="错误"></a>错误</h4><p>预定义的错误类型为：</p>
<pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">type</span> <span class="token builtin">error</span> <span class="token keyword">interface</span> <span class="token punctuation">&#123;</span>
	<span class="token function">Error</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token builtin">string</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>



<p>它是表示错误信息的常规接口，nil 代表没有发生错误。例如，在文件中读取数据可以定义为：</p>
<pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">func</span> <span class="token function">Read</span><span class="token punctuation">(</span>f <span class="token operator">*</span>File<span class="token punctuation">,</span> b <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">byte</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>n <span class="token builtin">int</span><span class="token punctuation">,</span> err <span class="token builtin">error</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>



<h4 id="运行时恐慌"><a href="#运行时恐慌" class="headerlink" title="运行时恐慌"></a>运行时恐慌</h4><p>运行时错误（例如数组的越界访问）会造成运行时恐慌，它和以 <code>runtime.Error</code> 接口实现调用内置的 <code>panic</code> 函数一样。<code>runtime.Error</code> 满足预定义的 <code>error</code> 接口。不同的错误值代表不同的运行时错误条件。</p>
<pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">package</span> runtime

<span class="token keyword">type</span> Error <span class="token keyword">interface</span> <span class="token punctuation">&#123;</span>
	<span class="token builtin">error</span>
	<span class="token comment">// and perhaps other methods</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>



<h4 id="系统相关"><a href="#系统相关" class="headerlink" title="系统相关"></a>系统相关</h4><h6 id="unsafe-包"><a href="#unsafe-包" class="headerlink" title="unsafe 包"></a>unsafe 包</h6><p><code>unsafe</code> 是编译器已知的内置包，可以通过导入路径 <code>unsafe</code> 访问包内容，提供 <code>unsafe</code> 包目的是支持底层编程（包括操作非 Go 类型的数据结构）。使用 <code>unsafe</code> 包必须自己保证类型安全而且它有可能破坏程序的移植性。<code>unsafe</code> 包提供了以下接口：</p>
<pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">package</span> unsafe

<span class="token keyword">type</span> ArbitraryType <span class="token builtin">int</span>  <span class="token comment">// 任意一个 Go 类型；它不是一个具体的类型。</span>
<span class="token keyword">type</span> Pointer <span class="token operator">*</span>ArbitraryType

<span class="token keyword">func</span> <span class="token function">Alignof</span><span class="token punctuation">(</span>variable ArbitraryType<span class="token punctuation">)</span> <span class="token builtin">uintptr</span>
<span class="token keyword">func</span> <span class="token function">Offsetof</span><span class="token punctuation">(</span>selector ArbitraryType<span class="token punctuation">)</span> <span class="token builtin">uintptr</span>
<span class="token keyword">func</span> <span class="token function">Sizeof</span><span class="token punctuation">(</span>variable ArbitraryType<span class="token punctuation">)</span> <span class="token builtin">uintptr</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>



<p><code>Pointer</code> 是一个指针类型，但是不能解引用 <code>Pointer</code> 的值。所有底层类型 <code>uintptr</code> 的指针和值都能转换成 <code>Pointer</code> 类型，反之亦然。<code>Pointer</code> 和  <code>uintptr</code> 之间的转换效果由具体实现定义。</p>
<pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">var</span> f <span class="token builtin">float64</span>
bits <span class="token operator">=</span> <span class="token operator">*</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token builtin">uint64</span><span class="token punctuation">)</span><span class="token punctuation">(</span>unsafe<span class="token punctuation">.</span><span class="token function">Pointer</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>f<span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token keyword">type</span> ptr unsafe<span class="token punctuation">.</span>Pointer
bits <span class="token operator">=</span> <span class="token operator">*</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token builtin">uint64</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token function">ptr</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>f<span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token keyword">var</span> p ptr <span class="token operator">=</span> <span class="token boolean">nil</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>



<p>假设变量 v 由 <code>var v = x</code> 定义。<code>Alignof</code> 以表达式 x 作为参数并返回 x 的对齐字节数。<code>Sizeof</code> 以表达式 x 作为参数并返回 x 的大小。</p>
<p>函数 <code>Offsetof</code> 以选择器 <code>s.f</code>（ s 或者 *s 结构体中的 f 字段）作为参数，返回字段相对结构体首地址的位置。如果 f 是一个嵌入字段，那 f 必须可以直接访问（不能通过指针进行间接访问）。对于结构体 s 的 f 字段：</p>
<pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token function">uintptr</span><span class="token punctuation">(</span>unsafe<span class="token punctuation">.</span><span class="token function">Pointer</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>s<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span> unsafe<span class="token punctuation">.</span><span class="token function">Offsetof</span><span class="token punctuation">(</span>s<span class="token punctuation">.</span>f<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token function">uintptr</span><span class="token punctuation">(</span>unsafe<span class="token punctuation">.</span><span class="token function">Pointer</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>s<span class="token punctuation">.</span>f<span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>



<p>计算机的体系结构要求对齐内存地址（对于一个变量的地址有多种因素影响对齐）。<code>Alignof</code> 函数获取一个人和类型的表达式并返回变量对齐的字节数。对于变量 x：</p>
<pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token function">uintptr</span><span class="token punctuation">(</span>unsafe<span class="token punctuation">.</span><span class="token function">Pointer</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>x<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">%</span> unsafe<span class="token punctuation">.</span><span class="token function">Alignof</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>



<p>编译时 <code>uintptr</code> 类型常量表达式会调用 <code>Alignof</code>，<code>Offsetof</code>，和 <code>Sizeof</code>。</p>
<h6 id="确定的大小和对齐字节数"><a href="#确定的大小和对齐字节数" class="headerlink" title="确定的大小和对齐字节数"></a>确定的大小和对齐字节数</h6><p>对于数字类型，确定有以下尺寸：</p>
<pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">type</span>                                 size in bytes

<span class="token builtin">byte</span><span class="token punctuation">,</span> <span class="token builtin">uint8</span><span class="token punctuation">,</span> <span class="token builtin">int8</span>                     <span class="token number">1</span>
<span class="token builtin">uint16</span><span class="token punctuation">,</span> <span class="token builtin">int16</span>                         <span class="token number">2</span>
<span class="token builtin">uint32</span><span class="token punctuation">,</span> <span class="token builtin">int32</span><span class="token punctuation">,</span> <span class="token builtin">float32</span>                <span class="token number">4</span>
<span class="token builtin">uint64</span><span class="token punctuation">,</span> <span class="token builtin">int64</span><span class="token punctuation">,</span> <span class="token builtin">float64</span><span class="token punctuation">,</span> <span class="token builtin">complex64</span>     <span class="token number">8</span>
<span class="token builtin">complex128</span>                           <span class="token number">16</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>



<p>Go 中规定的最小对齐特性：</p>
<ol>
<li><p>对于任意变量类型 x：<code>unsafe.Alignof(x)</code> 至少为 1。</p>
</li>
<li><p>对于结构体类型：<code>unsafe.Alignof(x)</code> 是所有内部字段 <code>unsafe.Alignof(x.f)</code> 的最大值，并且至少为 1。</p>
</li>
<li><p>对于数组类型：<code>unsafe.Alignof(x)</code> 和数组元素类型的 alignment 相同。</p>
</li>
</ol>
<p>结构体（数组）在内部没有字段（元素）的时候大小为 0。两个所占空间大小为 0 的不同变量可能在内存中拥有相同地址。</p>
]]></content>
      <categories>
        <category>go</category>
      </categories>
      <tags>
        <tag>go</tag>
      </tags>
  </entry>
  <entry>
    <title>nginx Rewrite简单示例</title>
    <url>/2019/09/23/nginxRewrite%E7%AE%80%E5%8D%95%E7%A4%BA%E4%BE%8B/</url>
    <content><![CDATA[<hr>
<pre class="line-numbers language-none"><code class="language-none">worker_processes  1;
events &#123;
    worker_connections  1024;
&#125;
http &#123;
       server &#123;
            location &#x2F;google &#123;
                      rewrite (.*) http:&#x2F;&#x2F;www.google.com;
        &#125;
           location &#x2F;baidu &#123;
                      rewrite (.*) http:&#x2F;&#x2F;www.baidu.com;
        &#125;
        error_page   500 502 503 504  &#x2F;50x.html;
        location &#x3D; &#x2F;50x.html &#123;
            root   html;
       &#125;
   &#125;
&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>　　按照前面讲的内容以及上面的代码，修改我们自己的配置文件，保存，重新加载nginx，然后点击【访问测试】，在地址栏给出的地址后面分别输入“*&#x2F;google<em>”、“</em>&#x2F;baidu*”，是不是会和我的结果一样呢？</p>
<p>输入“&#x2F;google”转到谷歌，输入“&#x2F;baidu”是不是转到百度了呢？</p>
]]></content>
      <categories>
        <category>nginx</category>
      </categories>
      <tags>
        <tag>nginx</tag>
      </tags>
  </entry>
  <entry>
    <title>nginx http配置指令</title>
    <url>/2019/09/23/nginxhttp%E9%85%8D%E7%BD%AE%E6%8C%87%E4%BB%A4/</url>
    <content><![CDATA[<hr>
<p>　　设定mime类型,类型由mime.type文件定义 用<em>include</em>指令.</p>
<pre class="line-numbers language-none"><code class="language-none">include       &#x2F;etc&#x2F;nginx&#x2F;mime.types;
default_type  application&#x2F;octet-stream;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>

<p>　　开启gzip压缩指令</p>
<pre class="line-numbers language-none"><code class="language-none">gzip on;
gzip_disable &quot;MSIE [1-6]\.(?!.*SV1)&quot;;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>

<p>　　设定负载均衡的服务器列表用指令<em>upstream</em>。</p>
<pre class="line-numbers language-none"><code class="language-none">upstream mysvr &#123;
    #weigth参数表示权值，权值越高被分配到的几率越大
    #本机上的Squid开启3128端口
    server 192.168.8.1:3128 weight&#x3D;5;
    server 192.168.8.2:80  weight&#x3D;1;
    server 192.168.8.3:80  weight&#x3D;6;
&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>　　设定虚拟主机用指令<em>server</em>，其中包括端口，主机名称，默认请求等设置。</p>
<pre class="line-numbers language-none"><code class="language-none">server &#123;
    #侦听80端口
    listen       80;
    #定义使用www.xx.com访问
    server_name  www.xx.com;
    #设定本虚拟主机的访问日志
    access_log  logs&#x2F;www.xx.com.access.log  main;
    #默认请求
    location &#x2F; &#123;
          root   &#x2F;root;      #定义服务器的默认网站根目录位置
          index index.php index.html index.htm;   #定义首页索引文件的名称
          fastcgi_pass  www.xx.com;
          fastcgi_param SCRIPT_FILENAME $document_root&#x2F;$fastcgi_script_name;
          include &#x2F;etc&#x2F;nginx&#x2F;fastcgi_params;
     &#125;

    # 定义错误提示页面
    error_page   500 502 503 504 &#x2F;50x.html; 
    location &#x3D; &#x2F;50x.html &#123;
    root   &#x2F;root;
    &#125;
&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>请求转向指令_proxy<em>pass</em></p>
<pre class="line-numbers language-none"><code class="language-none">proxy_pass http:&#x2F;&#x2F;www.baidu.com;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
]]></content>
      <categories>
        <category>nginx</category>
      </categories>
      <tags>
        <tag>nginx</tag>
      </tags>
  </entry>
  <entry>
    <title>nginx location配置</title>
    <url>/2019/09/23/nginxlocation%E9%85%8D%E7%BD%AE/</url>
    <content><![CDATA[<hr>
<p>语法规则： <em>location [&#x3D;|<del>|</del></em>|^~] &#x2F;uri&#x2F; { … }*</p>
<p>| — | — |<br>| 通配符 |  说明 |<br>| &#x3D;   |开头表示精确匹配 |<br>| ^~ |  开头表示uri以某个常规字符串开头，理解为匹配 url路径即可 |<br>| ~ |  开头表示区分大小写的正则匹配 |<br>| !~ |  区分大小写不匹配 |<br>| !~* |  不区分大小写不匹配 |<br>| ~* |  开头表示不区分大小写的正则匹配 |<br>| &#x2F; |  通用匹配，任何请求都会匹配到 |</p>
<p>　　首先匹配 &#x3D;，其次匹配^~, 其次是按文件中顺序的正则匹配，最后是交给 &#x2F; 通用匹配。当有匹配成功时候，停止匹配，按当前匹配规则处理请求。</p>
<pre class="line-numbers language-none"><code class="language-none">location &#x3D; &#x2F; &#123;
   #规则A
&#125;
location &#x3D; &#x2F;login &#123;
   #规则B
&#125;
location ^~ &#x2F;static&#x2F; &#123;
   #规则C
&#125;
location ~ \.(gif|jpg|png|js|css)$ &#123;
   #规则D
&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>　　那么产生的效果如下：</p>
<p>访问根目录&#x2F;， 比如<a class="link"   href="http://localhost/" >http://localhost/<i class="fas fa-external-link-alt"></i></a> 将匹配规则A；<br>访问 <a class="link"   href="http://localhost/login" >http://localhost/login<i class="fas fa-external-link-alt"></i></a> 将匹配规则B；<br>访问 <a class="link"   href="http://localhost/static/a.html" >http://localhost/static/a.html<i class="fas fa-external-link-alt"></i></a> 将匹配规则C；<br>访问 <a class="link"   href="http://localhost/a.gif" >http://localhost/a.gif<i class="fas fa-external-link-alt"></i></a>, <a class="link"   href="http://localhost/b.jpg" >http://localhost/b.jpg<i class="fas fa-external-link-alt"></i></a> 将匹配规则D。</p>
]]></content>
      <categories>
        <category>nginx</category>
      </categories>
      <tags>
        <tag>nginx</tag>
      </tags>
  </entry>
  <entry>
    <title>nginx  main配置指令</title>
    <url>/2019/09/23/nginxmain%E9%85%8D%E7%BD%AE%E6%8C%87%E4%BB%A4/</url>
    <content><![CDATA[<hr>
<p>　　定义Nginx运行的用户和用户组用<em>user</em>指令。</p>
<pre class="line-numbers language-none"><code class="language-none">user www-data;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>　　定义nginx进程数，用_worker<em>processes</em>指令，建议设置为等于CPU总核心数。</p>
<pre class="line-numbers language-none"><code class="language-none">worker_processes 8;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>　　全局错误日志定义类型，[ debug | info | notice | warn | error | crit ]用_error<em>log</em>指令。另外日志还可以定义在http、server及location上下文中，语法格式一样。</p>
<pre class="line-numbers language-none"><code class="language-none">error_log &#x2F;var&#x2F;log&#x2F;nginx&#x2F;error.log info;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>　　定义进程文件用<em>pid</em>指令</p>
<pre class="line-numbers language-none"><code class="language-none">pid &#x2F;var&#x2F;run&#x2F;nginx.pid;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>　　用_worker_rlimit<em>nofile</em>指令描述nginx进程打开的最多文件描述符的数目，建议设置为默认值。</p>
<pre class="line-numbers language-none"><code class="language-none">worker_rlimit_nofile 65535;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
]]></content>
      <categories>
        <category>nginx</category>
      </categories>
      <tags>
        <tag>nginx</tag>
      </tags>
  </entry>
  <entry>
    <title>nginx rewrite规则</title>
    <url>/2019/09/23/nginxrewrite%E8%A7%84%E5%88%99/</url>
    <content><![CDATA[<hr>
<p>　　Nginx Rewrite 规则相关指令有if,rewrite,set,return,break等，其中最关键的就是rewrite。一个简单的Nginx Rewrite规则语法如下：</p>
<p><code>rewrite ^/b/(.\*)\.html /play.php?video=$1 break;</code></p>
<p><strong>正则表达式匹配，</strong>其中：</p>
<ol>
<li><p>~ 为区分大小写匹配；  </p>
</li>
<li><p>~* 为不区分大小写匹配；  </p>
</li>
<li><p>!<del>和!</del>*分别为区分大小写不匹配及不区分大小写不匹配。</p>
</li>
</ol>
<p><strong>文件及目录匹配，</strong>其中：</p>
<ol>
<li><p>-f和!-f用来判断是否存在文件；  </p>
</li>
<li><p>-d和!-d用来判断是否存在目录；  </p>
</li>
<li><p>-e和!-e用来判断是否存在文件或目录；  </p>
</li>
<li><p>-x和!-x用来判断文件是否可执行。</p>
</li>
</ol>
<p><strong>flag标记有：</strong></p>
<ol>
<li>last 相当于Apache里的[L]标记，表示完成rewrite；</li>
<li>break 终止匹配, 不再匹配后面的规则；</li>
<li>redirect 返回302临时重定向 地址栏会显示跳转后的地址；</li>
<li>permanent 返回301永久重定向 地址栏会显示跳转后的地址。</li>
</ol>
<p>当然除了这些以外，Rewrite规则中还会用到一些相应的全局变量，如$args，$url等等</p>
]]></content>
      <categories>
        <category>nginx</category>
      </categories>
      <tags>
        <tag>nginx</tag>
      </tags>
  </entry>
  <entry>
    <title>nginx初体验</title>
    <url>/2019/09/23/nginx%E5%88%9D%E4%BD%93%E9%AA%8C/</url>
    <content><![CDATA[<p>当我们安装完nginx后，我们首先进入nginx的安装目录，启动nginx的服务，然后在地址中输入 <a class="link"   href="http://127.0.0.1/" >http://127.0.0.1/<i class="fas fa-external-link-alt"></i></a> ， 然后我们就会看到”<em>welcome to nginx</em>“。<br>　　下面的代码为nginx.conf配置文件中的server段的默认配置，nginx所实现的功能都基于这个文件。我们将在后面的内容中继续进行讲解。</p>
<pre class="line-numbers language-none"><code class="language-none"> server &#123;
   listen       80;
   server_name  localhost;
   #charset koi8-r;
   #access_log  logs&#x2F;host.access.log  main;
   location &#x2F; &#123;
           root   &#x2F;root;      #定义服务器的默认网站根目录位置
           index index.php index.html index.htm;   #定义首页索引文件的名称
   &#125;
   #error_page  404              &#x2F;404.html;
   # redirect server error pages to the static page &#x2F;50x.html
   error_page   500 502 503 504  &#x2F;50x.html;
   location &#x3D; &#x2F;50x.html &#123;
           root   html;
   &#125;
&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
]]></content>
      <categories>
        <category>nginx</category>
      </categories>
      <tags>
        <tag>nginx</tag>
      </tags>
  </entry>
  <entry>
    <title>nginx 反向代理示例</title>
    <url>/2019/09/23/nginx%E5%8F%8D%E5%90%91%E4%BB%A3%E7%90%86%E7%A4%BA%E4%BE%8B/</url>
    <content><![CDATA[<hr>
<p>　　<em>反向代理（Reverse Proxy）</em>是指代理服务器来接收来自Internet上的连接请求，并将请求转发给内部网络上的服务器，并从服务器上得到的结果返回给Internet上请求连接的客户端。</p>
<p>　　比如要配置后端跑 apache 服务的 ip 和端口，也就是说，我们的目标是实现通过 <a href="http://ip:port/">http://ip:port</a> 能访问到你的网站。配置文件可以修改以下内容，reload nginx就可以了。</p>
<pre class="line-numbers language-none"><code class="language-none">## Basic reverse proxy server ##
    upstream apachephp  &#123;
        server ip:8080; #Apache
    &#125;
    ## Start www.nowamagic.net ##
    server &#123;
        listen 80;
        server_name  www.nowamagic.net;
        access_log  logs&#x2F;quancha.access.log  main;
        error_log  logs&#x2F;quancha.error.log;
        root   html;
        index  index.html index.htm index.php;

        ## send request back to apache ##
        location &#x2F; &#123;
            proxy_pass  http:&#x2F;&#x2F;apachephp;
                #……………………
&#125;
&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
]]></content>
      <categories>
        <category>nginx</category>
      </categories>
      <tags>
        <tag>nginx</tag>
      </tags>
  </entry>
  <entry>
    <title>nginx常用命令</title>
    <url>/2019/09/23/nginx%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</url>
    <content><![CDATA[<p>1.nginx启动</p>
<pre class="line-numbers language-none"><code class="language-none">nginx   -c &#x2F;etc&#x2F;nginx&#x2F;nginx.conf<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>其中参数-c指定nginx启动时加载的配置文件，当然也可以不指定配置文件，省略-c，也可以启动，表示使用默认的配置文件。</p>
<pre class="line-numbers language-none"><code class="language-none">nginx<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>2.nginx停止(三种方式任选其一)</p>
<pre class="line-numbers language-none"><code class="language-none">nginx -s stop 
nginx -s quit 
pkill -9 nginx<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>

<p>　　例如在我们的编辑环境中已经安装好了nginx,并且已启动,在命令提示符下直接输入nginx -s stop就可以停止了。</p>
<p>3.nginx重载配置</p>
<pre class="line-numbers language-none"><code class="language-none">nginx -s reload<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>4.检查配置文件是否正确</p>
<pre class="line-numbers language-none"><code class="language-none">nginx -t<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
]]></content>
      <categories>
        <category>nginx</category>
      </categories>
      <tags>
        <tag>nginx</tag>
      </tags>
  </entry>
  <entry>
    <title>nginx概述</title>
    <url>/2019/09/23/nginx%E6%A6%82%E8%BF%B0/</url>
    <content><![CDATA[<pre><code>Nginx (&quot;engine x&quot;) 是一个高性能的 HTTP 和 *反向代理* 服务器，也是一个 IMAP/POP3/SMTP *代理服务器*。 

Nginx 是由 Igor Sysoev 为*俄罗斯*访问量第二的 Rambler.ru 站点开发的，第一个公开版本0.1.0发布于2004年10月4日。

其将源代码以类BSD许可证的形式发布，因它的稳定性、丰富的功能集、示例配置文件和低系统资源的消耗而闻名。2011年6月1日，nginx 1.0.4发布。

Nginx是一款轻量级的Web 服务器/反向代理服务器及电子邮件（IMAP/POP3）代理服务器，并在一个BSD-like 协议下发行。

由俄罗斯的程序设计师Igor Sysoev所开发，供俄国大型的入口网站及搜索引擎Rambler（俄文：Рамблер）使用。

其特点是占有内存少，并发能力强，事实上nginx的并发能力确实在同类型的网页服务器中表现较好，中国大陆使用nginx网站用户有：新浪、网易、腾讯等。
</code></pre>
]]></content>
      <categories>
        <category>nginx</category>
      </categories>
      <tags>
        <tag>nginx</tag>
      </tags>
  </entry>
  <entry>
    <title>nginx 正向代理示例</title>
    <url>/2019/09/23/nginx%E6%AD%A3%E5%90%91%E4%BB%A3%E7%90%86%E7%A4%BA%E4%BE%8B/</url>
    <content><![CDATA[<hr>
<p>nginx正向代理配置如下：</p>
<pre class="line-numbers language-none"><code class="language-none">server
&#123;
  listen       8080;
  server_name www.baidu.com;
  index index.html index.htm index.php;
  root  &#x2F;home&#x2F;wwwroot;
     location &#x2F; &#123;
         resolver        192.168.8.88;
         proxy_pass      $scheme:&#x2F;&#x2F;$http_host$request_uri;
         proxy_buffers   256 4k;
 &#125;
   access_log off;
&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>　　以上配置的注意事项：</p>
<p>1，不能有hostname。</p>
<p>2，必须有resolver, 即dns，即上面的x.x.x.x，换成当前机器的DNS服务器ip即可(查看dns方法 cat &#x2F;etc&#x2F;resolv.conf 代理使用)。</p>
<p>3，$http_host和$request_uri是nginx系统变量，保持原样即可。</p>
<p>　　检测配置文件无误后，重启nginx，在浏览器中添加代理服务器的IP地址，就可以使用该Nginx正向代理了。</p>
]]></content>
      <categories>
        <category>nginx</category>
      </categories>
      <tags>
        <tag>nginx</tag>
      </tags>
  </entry>
  <entry>
    <title>nginx 虚拟主机示例</title>
    <url>/2019/09/23/nginx%E8%99%9A%E6%8B%9F%E4%B8%BB%E6%9C%BA%E7%A4%BA%E4%BE%8B/</url>
    <content><![CDATA[<hr>
<p>　　Nginx做虚拟主机，尤其是仅仅支持纯静态-html，这是最简单的应用了，可以理解为一个仅支持静态页面的最简单的Web服务器。</p>
<p>　　例子，同时支持两个虚拟主机（纯静态-html支持）的配置，我们只需要理改server段，如下：</p>
<pre class="line-numbers language-none"><code class="language-none">server &#123;
        listen       80;
        server_name  www.baidu.com;
        #charset koi8-r;
        #access_log  logs&#x2F;host.access.log  main;
        location &#x2F; &#123;
                      root   &#x2F;root; 
                      index index.php index.html index.htm;  

        &#125;
        error_page   500 502 503 504  &#x2F;50x.html;
        location &#x3D; &#x2F;50x.html &#123;
            root   html;
        &#125;
      &#125;
server &#123;
        listen       80;
        server_name  www.baidu.com;
        #charset koi8-r;
        #access_log  logs&#x2F;host.access.log  main;
        location &#x2F; &#123;
                      root   &#x2F;root;     
                      index index.php index.html index.htm; 

        &#125;
        error_page   500 502 503 504  &#x2F;50x.html;
        location &#x3D; &#x2F;50x.html &#123;
            root   html;
        &#125;
&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

]]></content>
      <categories>
        <category>nginx</category>
      </categories>
      <tags>
        <tag>nginx</tag>
      </tags>
  </entry>
  <entry>
    <title>nginx 负载均衡</title>
    <url>/2019/09/23/nginx%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1/</url>
    <content><![CDATA[<p>　　<em>负载均衡</em>（又称为负载分担），英文名称为Load Balance，其意思就是将负载（工作任务）进行平衡、分摊到多个操作单元上进行执行，例如Web服务器、FTP服务器、企业关键应用服务器和其它关键任务服务器等，从而共同完成工作任务。</p>
<p>　　nginx的<em>upstream</em>目前支持4种方式的分配</p>
<p>　　1)、<em>default</em>（默认） 每个请求按时间顺序逐一分配到不同的后端服务器，如果后端服务器down掉，能自动剔除。</p>
<p>　　2)、<em>weight</em> 指定轮询几率，weight和访问比率成正比，用于后端服务器性能不均的情况。</p>
<p>　　3)、<em>ip_hash</em> 每个请求按访问ip的hash结果分配，这样每个访客固定访问一个后端服务器，可以解决session的问题。</p>
<p>　　4)、<em>fair</em>（第三方） 按后端服务器的响应时间来分配请求，响应时间短的优先分配。</p>
<pre class="line-numbers language-none"><code class="language-none">upstream ixdba.net&#123;
    ip_hash;
    server 192.168.12.133:80;
    server 192.168.12.134:80  down;
    server 192.168.12.135:8009  max_fails&#x3D;3  fail_timeout&#x3D;20s;
    server 192.168.12.136:8080;
&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>　　<em>upstream</em>是Nginx的HTTP Upstream模块，这个模块通过一个简单的调度算法来实现客户端IP到后端服务器的负载均衡。在上面的设定中，通过upstream指令指定了一个负载均衡器的名称ixdba.net。这个名称可以任意指定，在后面需要的地方直接调用即可。</p>
]]></content>
      <categories>
        <category>nginx</category>
      </categories>
      <tags>
        <tag>nginx</tag>
      </tags>
  </entry>
  <entry>
    <title>nginx 负载均衡示例</title>
    <url>/2019/09/23/nginx%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1%E7%A4%BA%E4%BE%8B/</url>
    <content><![CDATA[<hr>
<pre class="line-numbers language-none"><code class="language-none">upstream backend&#123;
      #定义负载均衡设备的Ip及设备状态
      server 127.0.0.1:9090 down;
      server 192.168.1.12:8080 weight&#x3D;2 ;
      server 192.168.1.13:6060 max_fails&#x3D;3 fail_timeout&#x3D;30s;
      server 192.168.1.14:7070 backup;
&#125;
server&#123;
    #…………………………
   location &#x2F;&#123;
        proxy_pass http:&#x2F;&#x2F;backend;
        #…………………………
    &#125;
&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>以上代码就是对负载均衡应用的示例。</p>
<p><em>Upstream</em>可对后端服务器进行健康检查。</p>
<p>a) <em>down</em>表示当前的server暂时不参与负载。</p>
<p>b) <em>weight</em>默认为1.weight越大，负载的权重就越大。</p>
<p>c) _max<em>fails</em> ：在fail_timeout时间内对后台服务器请求失败的次数。</p>
<p>d) _fail<em>timeout</em>:max_fails次失败后，暂停的时间。</p>
<p>e) <em>backup</em>： 其它所有的非backup机器down或者忙的时候，请求backup机器。所以这台机器压力会最轻。</p>
]]></content>
      <categories>
        <category>nginx</category>
      </categories>
      <tags>
        <tag>nginx</tag>
      </tags>
  </entry>
  <entry>
    <title>nginx配置系统</title>
    <url>/2019/09/23/nginx%E9%85%8D%E7%BD%AE%E7%B3%BB%E7%BB%9F/</url>
    <content><![CDATA[<p>　　nginx的配置系统由一个主配置文件和其他一些辅助的配置文件构成。这些配置文件均是纯文本文件，全部位于nginx安装目录下的conf目录下。</p>
<p>　　配置文件中以*#*开始的行，或者是前面有若干空格或者TAB，然后再跟#的行，都被认为是注释，也就是只对编辑查看文件的用户有意义，程序在读取这些注释行的时候，其实际的内容是被忽略的。</p>
<p>　　由于除主配置文件nginx.conf以外的文件都是在某些情况下才使用的，而只有主配置文件是在任何情况下都被使用的。所以在这里我们就以主配置文件为例，来解释nginx的配置系统。</p>
<p>在nginx.conf中，包含若干配置项。每个配置项由<em>配置指令</em>和_指令参数<em>2个部分构成。</em>指令参数_也就是配置指令对应的配置值。</p>
<p>　　<em>配置指令</em>是一个字符串，可以用单引号或者双引号括起来，也可以不括。但是如果配置指令包含空格，一定要引起来。</p>
<p>　　指令的参数使用一个或者多个空格或者TAB字符与指令分开。指令的参数有一个或者多个Token串组成。Token串之间由空格或者Tab键分隔。</p>
]]></content>
      <categories>
        <category>nginx</category>
      </categories>
      <tags>
        <tag>nginx</tag>
      </tags>
  </entry>
  <entry>
    <title>troubleshooting Kubernetes deployments</title>
    <url>/2021/11/24/troubleshooting%20Kubernetes%20deployments/</url>
    <content><![CDATA[<h1 id="A-visual-guide-on-troubleshooting-Kubernetes-deployments"><a href="#A-visual-guide-on-troubleshooting-Kubernetes-deployments" class="headerlink" title="A visual guide on troubleshooting Kubernetes deployments"></a>A visual guide on troubleshooting Kubernetes deployments</h1><h2 id="LAST-UPDATED-IN-NOVEMBER-2021"><a href="#LAST-UPDATED-IN-NOVEMBER-2021" class="headerlink" title="LAST UPDATED IN NOVEMBER 2021"></a>LAST UPDATED IN NOVEMBER 2021</h2><object data="/pdf/troubleshooting-kubernetes.zh_cn.v2.pdf" type="application/pdf" width="700px" height="700px">
    <embed src="/pdf/troubleshooting-kubernetes.zh_cn.v2.pdf">
        <p>This browser does not support PDFs. Please download the PDF to view it: <a href="/pdf/troubleshooting-kubernetes.zh_cn.v2.pdf">Download PDF</a>.
        </p>
    </embed>
</object>
]]></content>
      <tags>
        <tag>k8s</tag>
      </tags>
  </entry>
  <entry>
    <title>一位年轻的董事长给大学生的18条好建议</title>
    <url>/2019/09/23/%E4%B8%80%E4%BD%8D%E5%B9%B4%E8%BD%BB%E7%9A%84%E8%91%A3%E4%BA%8B%E9%95%BF%E7%BB%99%E5%A4%A7%E5%AD%A6%E7%94%9F%E7%9A%8418%E6%9D%A1%E5%A5%BD%E5%BB%BA%E8%AE%AE/</url>
    <content><![CDATA[<p>做每件事情之前一定要考虑好，从而才能做到胸有成竹啊！</p>
<h2 id="一位年轻的董事长给大学生的18条好建议"><a href="#一位年轻的董事长给大学生的18条好建议" class="headerlink" title="一位年轻的董事长给大学生的18条好建议"></a>一位年轻的董事长给大学生的18条好建议</h2><p>　　1.一定要有独立的人格、独立的思想。一个经过独立思考而坚持错误观点的人比一个不假思索而接受正确观点的人更值得肯定。不要成为灌输教育的牺牲品。</p>
<p>　　2.仕途，商界，学术。大致说来，每个人都注定要走上三条道路中的某一条。在进行职业生涯规划的时候，不妨以此作为思考的出发点。根据不同的职业生涯规划来塑造各自的核心竞争力。只有知道自己以后要做什么，才能知道自己应该学什么。 </p>
<p>　　3.专业无冷热，学校无高低。没有哪个用人单位会认为你代表了你的学校或者你的专业。<br>千万不要因为你是名牌大学或者热门专业而沾沾自喜，也大可不必因为你的学校不好或者专业冷门而自卑。</p>
<p>　　4.千招会，不如一招熟。十个百分之十并不是百分之百，而是零。如果你有十项工作，每项都会做百分之十，那么，在用人单位眼中，你什么都不会。所以，你必须要让自己具备核心竞争力，“通才”只有在“专才”的基础上才有意义。</p>
<p>　　5.不逃课的学生不是好学生。什么课都不逃，跟什么课都逃掉没什么两样。一定要掌握学习的主动性，不要像读中学一样被老师牵着鼻子走。逃课没有错，但是不要逃错课。同时，既要逃课，又要让老师给高分。</p>
<p>　　6.一定要学会理财。对于贫困生来说，首先要做的不是挣钱，而是省钱。很多大学生读书的时候一掷千金，可是，毕业以后一个月的工资还不够交半个月的房租。</p>
<p>　　7.大部分女生将电脑当成了影碟机，大部分男生将电脑当成了游戏机。大学生要掌握必要的计算机操作能力，但是，很多时候电脑会成为浪费时间的堂而皇之的借口。有电脑的大学生非常多，可是，这中间很多人可能大学毕业的时候还不会Excel，不会做一个像样的PPT。</p>
<p>　　8.做事不如做人，人脉决定成败。一个人有多少钱并不是指他拥有多少钱的所有权，而是指他拥有多少钱的使用权。一个人具备多少能力，不只是说他一个人的时候能做什么，还包括他能通过别人做什么。一个人赚的钱，12.5%是靠自身的知识，87.5%则来自人脉关系。三十岁以前靠专业赚钱，三十岁以后拿人脉赚钱。所以，请好好珍惜大学期间建立起来的人脉关系。这几年你认识的朋友可能会是你毕业以后最可宝贵的财富。</p>
<p>　　9.互联网固然威力无穷，但是，如果你沉迷于网络聊天，或者沉迷于网络游戏，浪费的金钱倒是可以弥补，荒废的青春就无可追寻了。轻舞飞扬已经红颜薄命了，而痞子蔡却继续跟别的女孩发生着一次又一次的亲密接触。对于很多大学生而言，网吧就是一个血淋淋的黑洞。</p>
<p>　　10.爱情是不期而至的，可以期待，但不可以制造。花开堪折方须折，莫让鲜花败残枝。一个有一万块钱的人为你花掉一百元，你只占了他的百分之一；而一个只有十块钱的人为你花掉十块，你就成了他的全部。</p>
<p>　　11.研究生扩招的速度是30%，也就意味着硕士学历贬值的速度是30%。千万不要以为考研究生就是积极进取的表现。对于很多人而言，考研不过是一种消极逃避的方式罢了。对于绝大多数人而言，读研究生纯粹是浪费时间浪费金钱，立志从事科研、学术的人及其他少数人除外。</p>
<p>　　12.不要一门心思想着出国，更加不要迷信外国的月亮比中国圆。削尖脑袋记GRE词汇很可能是一件非常愚蠢也非常可悲的事情。既然全世界的公司都想到中国的市场上来瓜分蛋糕，为什么中国人还要一门心思到国外去留学然后给外国人打工？</p>
<p>　　13.人才市场就是一个地雷阵。通过多种方式求职固然没有错，但是千万不要饥不择食。只要用人单位一说要你交钱，你掉头就走便是了。</p>
<p>　　14.求职简历必须突出自己的核心竞争力。求职的时候大可不必像严守一那样“有一说一”，必要的时候恰到好处地说一些谎言是非常有用的。一份求职简历只要用一张A4纸做个表格就足够了。很多女生的求职简历就像是写真集，不但浪费钱，而且对求职毫无用处。面试其实是有规律的，每次面试的时候只要背标准答案就行了……</p>
<p>　　15.垃圾是放错位置的人才。所以，在找工作的时候一定要把自己放到那个让你成为人才而不是垃圾的职位上。当然，前提是你要知道自己究竟想做什么、究竟适合做什么。世界上最大的悲剧莫过于有太多的年轻人从来没有发现自己真正想做什么。骑驴找马固然没错，可是，并非随便找一头驴就能找到千里马。所以，一定要重视第一份工作。</p>
<p>　　16.大公司是做人，小公司是做事。进入公司工作以后，必须尽快融入写字楼政治。职员能否得到提升，很大程度不在于是否努力，而在于老板对你的赏识程度。在写字楼的政治斗争中，一定要学会自我保护。</p>
<p>　　17.瘦死的骆驼比马大。撑死胆大的，饿死胆小的。一定要有创业的勇气和魄力。如果你一直满足于给别人打工，那么，不管你工资多高，永远都只能是一个可怜的穷光蛋。就算月薪两万，在深圳上海那种地方，一年的存款还买不来一个小小的洗手间。</p>
<p>　　18.大学期间一定要多去图书馆多去自习室。很多书你现在不读，一辈子就再也没有机会去读了。虽然不是每本书看了都一定有用，但是，因为你不知道究竟哪本书以后会有用，所以只好多看书，并且抛弃那些过于功利的想法。尽管每次网到鱼的不过是一个网眼，但要想捕到鱼，就必须要编织一张网。</p>
]]></content>
      <categories>
        <category>感悟</category>
      </categories>
      <tags>
        <tag>感悟</tag>
      </tags>
  </entry>
  <entry>
    <title>事件驱动的微服务架构的最佳实践</title>
    <url>/2019/09/14/%E4%BA%8B%E4%BB%B6%E9%A9%B1%E5%8A%A8%E7%9A%84%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%9E%B6%E6%9E%84%E7%9A%84%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5/</url>
    <content><![CDATA[<h1 id="事件驱动的微服务架构的最佳实践"><a href="#事件驱动的微服务架构的最佳实践" class="headerlink" title="事件驱动的微服务架构的最佳实践"></a>事件驱动的微服务架构的最佳实践</h1><h3 id="你做到了吗？"><a href="#你做到了吗？" class="headerlink" title="你做到了吗？"></a>你做到了吗？</h3><p><img  
                     lazyload
                     alt="image"
                     data-src="https://dzone.com/storage/temp/12455990-she-is-doing-her-22best-practice22.jpeg"
                      alt="她正在做她的“最佳实践”。"
                ></p>
<p><em>她正在做她的“最佳实践”。</em></p>
<p>如果您是企业架构师，您可能已经听说过并使用过微服务架构。虽然您过去可能已将REST用作服务通信层，但越来越多的项目正在转向事件驱动的体系结构。让我们深入探讨这种流行架构的优缺点，它所包含的一些关键设计选择以及常见的反模式。</p>
<h2 id="什么是事件驱动的微服务架构？"><a href="#什么是事件驱动的微服务架构？" class="headerlink" title="什么是事件驱动的微服务架构？"></a>什么是事件驱动的微服务架构？</h2><p>在事件驱动的体系结构中，当服务执行其他服务可能感兴趣的某项工作时，该服务会生成事件 - 执行操作的记录。其他服务使用这些事件，以便他们可以执行事件所需的任何自己的任务。与REST不同，创建请求的服务不需要知道使用请求的服务的详细信息。</p>
<p>这是一个简单的例子：当一个订单放在电子商务网站上时，会产生一个“下订单”事件，然后由几个微服务消费：</p>
<ol>
<li>有序服务，可以将订单记录写入数据库。</li>
<li>客户服务，可以创建客户记录。 </li>
<li>付款服务，可以处理付款。</li>
</ol>
<p>事件可以以各种方式发布。例如，可以将它们发布到保证将事件传递给适当的消费者的队列，或者可以将它们发布到发布事件并允许访问所有感兴趣的各方的“发布&#x2F;订阅”模型流。在任何一种情况下，生产者都会发布事件，消费者会收到该事件，并做出相应的反应。请注意，在某些情况下，这两个actor也可以称为发布者（生产者）和订阅者（​​消费者）。</p>
<h2 id="为什么使用事件驱动的体系结构"><a href="#为什么使用事件驱动的体系结构" class="headerlink" title="为什么使用事件驱动的体系结构"></a>为什么使用事件驱动的体系结构</h2><p>事件驱动的体系结构提供了多种优于REST的优势，其中包括：</p>
<ul>
<li><strong>异步</strong>  - 基于事件的体系结构是异步的，没有阻塞。这允许资源在他们的工作单元完成后自由移动到下一个任务，而不用担心之前发生的事情或接下来发生的事情。它们还允许事件排队或缓冲，从而防止消费者对生产者施加压力或阻止它们。</li>
<li><strong>松散耦合</strong>  - 服务不需要（也不应该）了解或依赖其他服务。使用事件时，服务独立运行，不了解其他服务，包括其实现细节和传输协议。事件模型下的服务可以独立且更容易地更新，测试和部署。</li>
<li><strong>轻松扩展</strong>  - 由于服务在事件驱动的体系结构下解耦，并且服务通常只执行一项任务，因此追踪到特定服务的瓶颈，并且扩展该服务（并且只有该服务）变得容易。</li>
<li><strong>恢复支持</strong>  - 具有队列的事件驱动架构可以通过“重放”过去的事件来恢复丢失的工作。当消费者需要恢复时，这对于防止数据丢失是有价值的。</li>
</ul>
<p>当然，事件驱动的体系结构也有缺点。通过分离紧密耦合时可能更简单的问题，它们很容易过度设计; 他们可能需要大量的前期投资; 并且通常会导致基础架构，服务合同或模式，多语言构建系统和依赖关系图的额外复杂性。</p>
<p>也许最重要的缺点和挑战是数据和事务管理。由于它们的异步性质，事件驱动模型必须小心处理服务之间的不一致数据，不兼容的版本，监视重复事件，并且通常不支持ACID事务，而不是支持更难以跟踪或调试的<a class="link"   href="https://en.wikipedia.org/wiki/Eventual_consistency" >最终一致性<i class="fas fa-external-link-alt"></i></a>。</p>
<p>即使存在这些缺点，事件驱动的体系结构通常也是企业级微服务系统的更好选择。专业可扩展，松散耦合，开发友好的设计 - 超过缺点。</p>
<h2 id="何时使用REST"><a href="#何时使用REST" class="headerlink" title="何时使用REST"></a>何时使用REST</h2><p>但是，有时候REST &#x2F; Web界面可能更适合：</p>
<ul>
<li>您需要一个异步请求&#x2F;回复接口。</li>
<li>您需要支持强大的交易。</li>
<li>您的API可供公众使用。</li>
<li>您的项目很小（REST设置和部署起来要简单得多）。</li>
</ul>
<h2 id="您最重要的设计选择-消息传递框架"><a href="#您最重要的设计选择-消息传递框架" class="headerlink" title="您最重要的设计选择 - 消息传递框架"></a>您最重要的设计选择 - 消息传递框架</h2><p>一旦确定了事件驱动的体系结构，就应该选择事件框架了。生成和使用事件的方式是系统中的关键因素。存在数十种经过验证的框架和选择，选择正确的框架和选择需要时间和研究。</p>
<p>您的基本选择归结为消息处理或流处理。</p>
<h2 id="消息处理"><a href="#消息处理" class="headerlink" title="消息处理"></a>消息处理</h2><p>在传统的消息处理中，组件创建消息，然后将其发送到特定（通常是单个）目的地。已经闲置并等待的接收组件接收该消息并相应地动作。通常，当消息到达时，接收组件执行单个过程。然后，该邮件将被删除。</p>
<p>消息处理体系结构的典型示例是消息队列。虽然大多数较新的项目使用流处理（如下所述），但使用消息（或事件）队列的体系结构仍然很受欢迎。消息队列通常使用“存储和转发”系统的代理，其中事件从代理传递到代理，直到它们到达适当的消费者。<a class="link"   href="https://activemq.apache.org/" >ActiveMQ<i class="fas fa-external-link-alt"></i></a>和<a class="link"   href="https://www.rabbitmq.com/" >RabbitMQ<i class="fas fa-external-link-alt"></i></a>是消息队列框架的两个流行示例。这两个项目都有多年的经过验证的使用和已建立的社区。</p>
<h3 id="流处理"><a href="#流处理" class="headerlink" title="流处理"></a>流处理</h3><p>另一方面，在流处理中，组件在达到某个状态时发出事件。其他感兴趣的组件在事件流上侦听这些事件并做出相应的反应。事件不是针对某个收件人，而是针对所有感兴趣的组件。</p>
<p>在流处理中，组件可以同时对多个事件做出反应，并对多个流和事件应用复杂的操作。一些流包括持久性，其中事件在必要时保留在流上。</p>
<p>通过流处理，系统可以重现事件历史，在事件发生后上线并仍然对其作出反应，甚至执行滑动窗口计算。例如，它可以从每秒事件流计算每分钟的平均CPU使用率。</p>
<p><a class="link"   href="https://kafka.apache.org/" >Apache Kafka<i class="fas fa-external-link-alt"></i></a>是最受欢迎的流处理框架之一  。Kafka是许多项目使用的成熟稳定的解决方案。它可以被认为是一种首选的工业级流处理解决方案。Kafka拥有庞大的用户群，有用的社区和不断发展的工具集。</p>
<h2 id="其他选择"><a href="#其他选择" class="headerlink" title="其他选择"></a>其他选择</h2><p>还有其他框架可以提供流和消息处理的组合或它们自己独特的解决方案。例如，  <a class="link"   href="https://pulsar.apache.org/" >Pulsar<i class="fas fa-external-link-alt"></i></a>是Apache的新产品，是一个开源的pub &#x2F; sub消息系统，支持流和事件队列，所有这些都具有极高的性能。Pulsar功能丰富 - 它提供多租户和地理复制 - 因此很复杂。据说Kafka的目标是高吞吐量，而Pulsar的目标是低延迟。</p>
<p><a class="link"   href="https://nats.io/" >NATS<i class="fas fa-external-link-alt"></i></a>是具有“合成”排队的备选发布&#x2F;订阅消息系统。NATS旨在发送小而频繁的消息。它提供高性能和低延迟; 但是，NATS认为某些级别的数据丢失是可以接受的，优先考虑性能而不是交付保证。</p>
<h2 id="其他设计考虑因素"><a href="#其他设计考虑因素" class="headerlink" title="其他设计考虑因素"></a>其他设计考虑因素</h2><p>选择事件框架后，还需要考虑以下几个其他挑战：</p>
<ul>
<li>活动采购</li>
</ul>
<p>很难实现松散耦合服务，不同数据存储和原子事务的组合。可能<a class="link"   href="https://dzone.com/articles/introduction-to-event-sourcing" >有用的<i class="fas fa-external-link-alt"></i></a>一种模式是  <a class="link"   href="https://dzone.com/articles/introduction-to-event-sourcing" >Event Sourcing<i class="fas fa-external-link-alt"></i></a>。在事件源中，永远不会直接对数据执行更新和删除操作; 相反，实体的状态更改将保存为一系列事件。</p>
<ul>
<li>CQRS</li>
</ul>
<p>上述事件采购引入了另一个问题：由于状态需要从一系列事件构建，因此查询可能既缓慢又复杂。命令查询责任分离（<a class="link"   href="https://dzone.com/articles/microservices-with-cqrs-and-event-sourcing" >CQRS<i class="fas fa-external-link-alt"></i></a>）是一种设计解决方案，它要求插入操作和读取操作的单独模型。</p>
<ul>
<li>发现活动信息</li>
</ul>
<p>事件驱动架构中最大的挑战之一是编目服务和事件。您在哪里可以找到活动描述和详细信息？活动的原因是什么？什么团队创建了这个活动？他们是否积极致力于此？</p>
<ul>
<li>处理变革</li>
</ul>
<p>事件架构会改变吗？如何在不破坏其他服务的情况下更改事件架构？随着您的服务和事件数量的增长，您如何回答这些问题变得至关重要。</p>
<p>作为一个好的事件消费者意味着编码改变的模式。作为一个好的事件生产者意味着要认识到你的模式变化如何影响其他服务，并创建明确记录的精心设计的事件。</p>
<ul>
<li>内部部署与托管部署</li>
</ul>
<p>无论您的事件框架如何，您还需要自己决定在内部部署框架（消息代理不是很容易操作，尤其是高可用性），或者<a class="link"   href="https://www.heroku.com/kafka" >在Heroku上<i class="fas fa-external-link-alt"></i></a>使用<a class="link"   href="https://www.heroku.com/kafka" >Apache Kafka等<i class="fas fa-external-link-alt"></i></a>托管服务。</p>
<h2 id="反模式"><a href="#反模式" class="headerlink" title="反模式"></a>反模式</h2><p>与大多数体系结构一样，事件驱动的体系结构具有自己的一组反模式。以下是一些需要注意的事项：</p>
<h3 id="好太多了"><a href="#好太多了" class="headerlink" title="好太多了"></a>好太多了</h3><p>小心你不要对创建事件感到太兴奋。创建太多事件将在服务之间产生不必要的复杂性，增加开发人员的认知负担，使部署和测试更加困难，并导致事件消费者拥塞。并非每种方法都需要成为一种事件。</p>
<h3 id="通用事件"><a href="#通用事件" class="headerlink" title="通用事件"></a>通用事件</h3><p>不要在名称或故意使用通用事件。您希望其他团队了解您的事件存在的原因，应该使用的内容以及何时应该使用它。事件应具有特定目的并相应地命名。具有通用名称的事件或具有混淆标志的通用事件会导致问题。</p>
<h3 id="复杂的依赖关系图"><a href="#复杂的依赖关系图" class="headerlink" title="复杂的依赖关系图"></a>复杂的依赖关系图</h3><p>注意彼此依赖的服务并创建复杂的依赖关系图或反馈循环。每个网络跃点都会为原始请求增加额外的延迟，尤其是离开数据中心的北&#x2F;南网络流量。</p>
<h3 id="取决于保证订单，交货或副作用"><a href="#取决于保证订单，交货或副作用" class="headerlink" title="取决于保证订单，交货或副作用"></a>取决于保证订单，交货或副作用</h3><p>事件是异步的; 因此，包括对顺序或重复的假设不仅会增加复杂性，还会抵消基于事件的体系结构的许多关键优势。如果您的消费者有副作用，例如在数据库中添加值，那么您可能无法通过重播事件来恢复。</p>
<h3 id="过早优化"><a href="#过早优化" class="headerlink" title="过早优化"></a>过早优化</h3><p>大多数产品从小开始，随着时间的推移而增长 虽然您可能梦想未来需要扩展到大型复杂组织，但如果您的团队规模较小，那么事件驱动架构的复杂性可能会让您失望。相反，考虑使用简单的架构设计您的系统，但包括必要的关注点分离，以便您可以随着需求的增长进行交换。</p>
<h3 id="期待事件驱动来解决所有问题"><a href="#期待事件驱动来解决所有问题" class="headerlink" title="期待事件驱动来解决所有问题"></a>期待事件驱动来解决所有问题</h3><p>在技​​术水平较低的情况下，不要指望事件驱动的架构能够解决您的所有问题。虽然这种架构肯定可以改善技术功能障碍的许多方面，但它无法解决核心问题，例如缺乏自动化测试，团队沟通不畅或者过时的开发实践。</p>
<h2 id="学到更多"><a href="#学到更多" class="headerlink" title="学到更多"></a>学到更多</h2><p>了解事件驱动架构的优缺点，以及一些最常见的设计决策和挑战是创建最佳设计的重要部分。</p>
<p>如果您想了解更多信息，请查看这个<a class="link"   href="https://devcenter.heroku.com/articles/event-driven-microservices-with-apache-kafka" >事件驱动的参考架构<i class="fas fa-external-link-alt"></i></a>，它允许您通过单击在Heroku上部署工作项目。该参考架构创建了一个销售虚构咖啡产品的网上商店。</p>
<p><img  
                     lazyload
                     alt="image"
                     data-src="https://lh4.googleusercontent.com/OOp9l49cyvKMzp6ESmHAlu5oP4oDNQDiM-T0b5aKDJHiA9ecNb8HNLxAzwYJAWyhQewIiy3yPW6g3YkAkN6vaJt1kcES6xflzajp6lEpMaQwJRi5bszEsBrPZTVVat6aP9pR07e9"
                      alt="null"
                ></p>
<p>产品点击次数作为事件进行跟踪并存储在Kafka中。然后，它们被报告仪表板使用。</p>
<p><img  
                     lazyload
                     alt="image"
                     data-src="https://lh4.googleusercontent.com/4ILhHjd5e6fAzp5VVm5eqhNtk71GdqSOY4HKd-8exLhMkqT-G2xboGZxDPAdH-KvJpFgXRbg1kfO_7u4i4mEhkLB4rndZ4O4XFzI3ehyd-qZC-FrkZ_9ZotjJQmaD9jMMMoFX7pG"
                      alt="null"
                ></p>
<p>代码是开源的，因此您可以根据需要对其进行修改并运行您自己的实验。</p>
]]></content>
      <categories>
        <category>架构, 微服务</category>
      </categories>
      <tags>
        <tag>微服务架构, 微服务, 微服务最佳实践, 事件驱动架构</tag>
      </tags>
  </entry>
  <entry>
    <title>基于Hexo的hexo-theme-matery主题搭建博客并优化</title>
    <url>/2021/11/05/%E5%9F%BA%E4%BA%8EHexo%E7%9A%84matery%E4%B8%BB%E9%A2%98%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E5%B9%B6%E4%BC%98%E5%8C%96/</url>
    <content><![CDATA[<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 以下是本网站的主题相关配置，方便取用</span>
<span class="token comment"># main menu navigation url and icon</span>
<span class="token comment"># 配置菜单导航的名称、路径和图标icon.</span>
menu:
  Index:
    url: /
    icon: fas fa-home
  Tags:
    url: /tags
    icon: fas fa-tags
  Categories:
    url: /categories
    icon: fas fa-bookmark
  Archives:
    url: /archives
    icon: fas fa-archive
  About:
    url: /about
    icon: fas fa-user-circle
 <span class="token comment"># Contact:</span>
 <span class="token comment">#   url: /contact</span>
 <span class="token comment">#   icon: fas fa-comments</span>
  Friends:
    url: /friends
    icon: fas fa-address-book
  <span class="token comment"># 二级菜单写法如下</span>
  <span class="token comment">#Medias:</span>
  <span class="token comment">#  icon: fas fa-list</span>
  <span class="token comment">#  children:</span>
  <span class="token comment">#    - name: Musics</span>
  <span class="token comment">#      url: /musics</span>
  <span class="token comment">#      icon: fas fa-music</span>
  <span class="token comment">#    - name: Movies</span>
  <span class="token comment">#      url: /movies</span>
  <span class="token comment">#      icon: fas fa-film</span>
  <span class="token comment">#    - name: Books</span>
  <span class="token comment">#      url: /books</span>
  <span class="token comment">#      icon: fas fa-book</span>
  <span class="token comment">#    - name: Galleries</span>
  <span class="token comment">#      url: /galleries</span>
  <span class="token comment">#      icon: fas fa-image</span>

<span class="token comment"># Website start time.</span>
<span class="token comment"># 站点运行开始时间.</span>
time:
  enable: <span class="token boolean">false</span>
  year: <span class="token number">2018</span> <span class="token comment"># 年份</span>
  month: 07 <span class="token comment"># 月份</span>
  date: <span class="token number">23</span> <span class="token comment"># 日期</span>
  hour: 00 <span class="token comment"># 小时</span>
  minute: 00 <span class="token comment"># 分钟</span>
  second: 00 <span class="token comment"># 秒</span>

<span class="token comment"># Index cover carousel configuration.</span>
<span class="token comment"># 首页封面轮播图的相关配置.</span>
cover:
  showPrevNext: <span class="token boolean">true</span> <span class="token comment"># 是否显示左右切换按钮. Whether to display the left and right toggle buttons.</span>
  showIndicators: <span class="token boolean">true</span> <span class="token comment"># 是否显示指示器. # Whether to display the indicators</span>
  autoLoop: <span class="token boolean">true</span> <span class="token comment"># 是否自动轮播. Whether it is automatically rotated.</span>
  duration: <span class="token number">120</span> <span class="token comment"># 切换延迟时间. Switching delay time.</span>
  intervalTime: <span class="token number">5000</span> <span class="token comment"># 自动切换下一张的间隔时间. Automatically switch the interval of the next one.</span>
  useConfig: <span class="token boolean">false</span> <span class="token comment"># 是否使用配置文件, 在 _data/covers.json 下配置推荐文章, false则使用主题在文章中的配置 cover coverImg</span>
  <span class="token comment"># useConfig 使用方式: 将主题 hexo-theme-matery/source/_data/covers.json 移动到 my-blog/source/_data/下修改配置即可</span>

<span class="token comment"># index page dream text,</span>
<span class="token comment"># 配置首页显示"梦想"的语句.</span>
dream:
  enable: <span class="token boolean">true</span>
  showTitle: <span class="token boolean">true</span>
  title: 我的梦想
  text: 不是每个人都应该像我这样去建造一座水晶大教堂，但是每个人都应该拥有自己的梦想，设计自己的梦想，追求自己的梦想，实现自己的梦想。梦想是生命的灵魂，是心灵的灯塔，是引导人走向成功的信仰。有了崇高的梦想，只要矢志不渝地追求，梦想就会成为现实，奋斗就会变成壮举，生命就会创造奇迹。——罗伯·舒乐

<span class="token comment"># Whether to display the musics.</span>
<span class="token comment"># 是否在首页显示音乐.</span>
music:
  enable: <span class="token boolean">true</span>
  title:  <span class="token comment">#非吸底模式有效</span>
    enable: <span class="token boolean">false</span>
    show: 听听音乐
  autoHide: <span class="token boolean">false</span>    <span class="token comment"># hide automaticaly</span>
  server: netease   <span class="token comment">#require	music platform: netease, tencent, kugou, xiami, baidu</span>
  type: playlist    <span class="token comment">#require song, playlist, album, search, artist</span>
  id: <span class="token number">3019130805</span>     <span class="token comment">#require	song id / playlist id / album id / search keyword</span>
  fixed: <span class="token boolean">false</span>       <span class="token comment"># 开启吸底模式</span>
  autoplay: <span class="token boolean">false</span>   <span class="token comment"># 是否自动播放</span>
  theme: <span class="token string">'pink'</span>
  loop: <span class="token string">'all'</span>       <span class="token comment"># 音频循环播放, 可选值: 'all', 'one', 'none'</span>
  order: <span class="token string">'random'</span>   <span class="token comment"># 音频循环顺序, 可选值: 'list', 'random'</span>
  preload: <span class="token string">'auto'</span>   <span class="token comment"># 预加载，可选值: 'none', 'metadata', 'auto'</span>
  volume: <span class="token number">0.7</span>       <span class="token comment"># 默认音量，请注意播放器会记忆用户设置，用户手动设置音量后默认音量即失效</span>
  listFolded: <span class="token boolean">true</span>  <span class="token comment"># 列表默认折叠</span>
  hideLrc: <span class="token boolean">false</span>     <span class="token comment"># 隐藏歌词</span>

<span class="token comment"># Whether to display the videos.</span>
<span class="token comment"># 是否在首页显示视频.</span>
video:
  enable: <span class="token boolean">false</span>
  showTitle: <span class="token boolean">false</span>
  title: 精彩视频What Loves <span class="token keyword">do</span> -- Maroon <span class="token number">5</span>
  url: 
  pic:
  thumbnails:
  height: <span class="token comment"># 如：400</span>
  autoplay: <span class="token boolean">true</span> <span class="token comment"># 是否自动播放</span>
  theme: <span class="token string">'#42b983'</span>
  loop: <span class="token boolean">false</span> <span class="token comment"># 是否循环播放</span>
  preload: <span class="token string">'auto'</span> <span class="token comment"># 预加载，可选值: 'none', 'metadata', 'auto'</span>
  volume: <span class="token number">0.7</span>

<span class="token comment"># Whether to display the title of the recommended posts</span>
<span class="token comment"># 是否显示推荐文章的标题</span>
recommend:
  enable: <span class="token boolean">true</span>
  showTitle: <span class="token boolean">true</span>
  useConfig: <span class="token boolean">false</span> <span class="token comment"># 是否使用配置文件, 在 _data/recommends.json 下配置推荐文章, false则会走主题配置的 top 属性</span>
  <span class="token comment"># useConfig 使用方式: 将主题 hexo-theme-matery/source/_data/recommends.json 移动到 my-blog/source/_data/下修改配置即可</span>

<span class="token comment"># Configure website favicon and LOGO</span>
<span class="token comment"># 配置网站favicon和网站LOGO</span>
favicon: /favicon.png
logo: /medias/logo.png

<span class="token comment"># The configuration of the second button in the home banner,</span>
<span class="token comment"># including the display name of the button, the font awesome icon, and the hyperlink to the button.</span>
<span class="token comment"># 首页 banner 中的第二个按钮的配置，包括按钮的显示名称、font awesome图标和按钮的超链接.</span>
indexbtn:
  enable: <span class="token boolean">true</span>
  name: Github
  icon: fab fa-github-alt
  url: https://github.com/trojan20161207

<span class="token comment"># The configurations of the second line of home banner</span>
<span class="token comment"># icon/button will not show up if you leave the corresponding socialLink empty</span>
<span class="token comment"># 首页 banner 中的第二行个人信息配置，留空即不启用</span>
socialLink:
  github:  https://github.com/trojan20161207
  email: <span class="token number">1530860548</span>@qq.com
  facebook: <span class="token comment"># https://www.facebook.com/xxx</span>
  twitter: <span class="token comment"># https://twitter.com/xxx</span>
  qq: <span class="token number">1530860548</span>
  <span class="token comment">#weibo: # https://weibo.com/xxx</span>
  <span class="token comment">#zhihu: # https://www.zhihu.com/xxx</span>
  rss: <span class="token boolean">true</span> <span class="token comment"># true、false</span>

<span class="token comment"># Whether to activate the Post TOC, and Configure which title types are supported by TOC support.</span>
<span class="token comment"># You can add `toc: false` to the Front-matter of a post to turn off the TOC.</span>
<span class="token comment"># 是否激活文章 TOC 功能，并配置TOC支持选中哪些标题类型，这是全局配置。</span>
<span class="token comment"># 可以在某篇文章的 Front-matter 中再加上`toc: false`，使该篇文章关闭TOC目录功能</span>
toc:
  enable: <span class="token boolean">true</span>
  heading: h2, h3, h4
  collapseDepth: <span class="token number">0</span> <span class="token comment"># 目录默认展开层级</span>
  showToggleBtn: <span class="token boolean">true</span> <span class="token comment"># 是否显示切换TOC目录展开收缩的按钮</span>

<span class="token comment"># 代码块相关</span>
code:
  lang: <span class="token boolean">true</span> <span class="token comment"># 代码块是否显示名称</span>
  copy: <span class="token boolean">true</span> <span class="token comment"># 代码块是否可复制</span>
  shrink: <span class="token boolean">true</span> <span class="token comment"># 代码块是否可以收缩</span>
  break: <span class="token boolean">true</span> <span class="token comment"># 代码是否折行</span>

<span class="token comment"># 是否激活文章末尾的打赏功能，默认激活（你替换为的你自己的微信、支付宝二维码图片、或者使用网络图片也可以）.</span>
reward:
  enable: <span class="token boolean">true</span>
  title: 你的赏识是我前进的动力
  wechat: /medias/reward/wechat.png
  alipay: /medias/reward/alipay.jpg

<span class="token comment"># Whether to activate the copyright information of the blog and author when copying the post content.</span>
<span class="token comment"># minCharNumber: Approve copyright information by copying at least how many characters.</span>
<span class="token comment"># 是否激活复制文章时追加博客和作者的版权信息.</span>
copyright:
  enable: <span class="token boolean">false</span>
  minCharNumber: <span class="token number">120</span> <span class="token comment"># 至少复制多少个字符就追加版权信息.</span>
  description: 本文章著作权归作者所有，任何形式的转载都请注明出处。

<span class="token comment"># Whether to activate the mathjax, this is a global configuration, but the post still does not open the mathjax rendering.</span>
<span class="token comment"># Considering that the mathjax loading is time consuming,</span>
<span class="token comment"># you also need to add `mathjax: true` to the Front-matter of the post that needs to be rendered.</span>
<span class="token comment"># 是否激活mathjax数学公式，这是全局配置，但文章仍然不会都开启mathjax渲染，</span>
<span class="token comment"># 考虑到mathjax加载比较耗时，你还需要在需要渲染的文章的Front-matter中再加上`mathjax: true`才行.</span>
mathjax:
  enable: <span class="token boolean">true</span>
  cdn:  https://cdn.bootcss.com/mathjax/2.7.5/MathJax.js?config<span class="token operator">=</span>TeX-AMS-MML_HTMLorMML

<span class="token comment"># Post word count, reading duration, site total word count.</span>
<span class="token comment"># Before you activate, please confirm that you have installed the hexo-wordcount plugin,</span>
<span class="token comment"># install the plugin command: `npm i --save hexo-wordcount`.</span>
<span class="token comment"># 文章字数统计、阅读时长、总字数统计等</span>
<span class="token comment"># 文章信息--若要开启文章字数统计，需要安装 hexo-wordcount 插件，安装命令: `npm i --save hexo-wordcount`</span>
postInfo:
  date: <span class="token boolean">true</span> <span class="token comment"># 发布日期</span>
  update: <span class="token boolean">false</span> <span class="token comment"># 更新日期</span>
  wordCount: <span class="token boolean">false</span> <span class="token comment"># 文章字数统计</span>
  totalCount: <span class="token boolean">false</span> <span class="token comment"># 站点总文章字数</span>
  min2read: <span class="token boolean">false</span> <span class="token comment"># 文章阅读时长</span>
  readCount: <span class="token boolean">false</span> <span class="token comment"># 文章阅读次数</span>

<span class="token comment"># Whether to activate the 'love' effect of clicking on the page.</span>
<span class="token comment"># 是否激活点击页面的'爱心'效果，默认激活.</span>
clicklove:
  enable: <span class="token boolean">true</span>

<span class="token comment"># profile in about page, including avatars, career, and personal introductions.</span>
<span class="token comment"># 在”关于”页面中配置个人信息，包括头像、职业和个人介绍.</span>
profile:
  avatar: /medias/avatar.jpg
  career: DevOps Engineer
  introduction: If you wish to succeed, you should use persistence as your good friend, experience as your reference, prudence as your brother and hope as your sentry.

<span class="token comment"># config my projects informations in about page.</span>
<span class="token comment"># If you don't want to display this `My Projects` content, you can deactivate or delete this configuration.</span>
<span class="token comment"># 在“关于”页面配置"我的项目"信息，如果你不需要这些信息则可以将其设置为不激活或者将其删除.</span>
myProjects:
  enable: <span class="token boolean">true</span>
  data:
    hexo-theme-matery:
      icon: fas fa-file-alt
      iconBackground: <span class="token string">'linear-gradient(to bottom right, #66BB6A 0%, #81C784 100%)'</span>
      url: http://github.com/blinkfox/hexo-theme-matery
      desc: This is a Hexo blog theme with <span class="token string">'Material Design'</span> and responsive design.
    Fenix:
        icon: fas fa-database
        iconBackground: <span class="token string">'linear-gradient(to bottom right, #F06292 0%, #EF5350 100%)'</span>
        url: https://github.com/blinkfox/fenix
        desc: 这是 Spring Data JPA 复杂或动态 SQL 查询的扩展库。
    typora-vue-theme:
        icon: fas fa-file-alt
        iconBackground: <span class="token string">'linear-gradient(to bottom right, #29B6F6 0%, #1E88E5 100%)'</span>
        url: https://github.com/blinkfox/typora-vue-theme
        desc: This is a typora theme inspired by Vue document style.

<span class="token comment"># config my skills informations in about page.</span>
<span class="token comment"># If you don't want to display this `My Skills` content, you can deactivate or delete this configuration.</span>
<span class="token comment"># 在“关于”页面配置"我的技能"信息，如果你不需要这些信息则可以将其设置为不激活或者将其删除.</span>
mySkills:
  enable: <span class="token boolean">true</span>
  data:
    Linux:
      background: <span class="token string">'linear-gradient(to right, #FF0066 0%, #FF00CC 100%)'</span>
      percent: <span class="token number">85</span>%
    Shell:
      background: <span class="token string">'linear-gradient(to right, #9900FF 0%, #CC66FF 100%)'</span>
      percent: <span class="token number">80</span>%
    Go:
      background: <span class="token string">'linear-gradient(to right, #2196F3 0%, #42A5F5 100%)'</span>
      percent: <span class="token number">80</span>%
    CSS:
      background: <span class="token string">'linear-gradient(to right, #00BCD4 0%, #80DEEA 100%)'</span>
      percent: <span class="token number">70</span>%
    SQL:
      background: <span class="token string">'linear-gradient(to right, #4CAF50 0%, #81C784 100%)'</span>
      percent: <span class="token number">90</span>%
    程序设计:
      background: <span class="token string">'linear-gradient(to right, #FFEB3B 0%, #FFF176 100%)'</span>
      percent: <span class="token number">75</span>%

<span class="token comment"># config gallery of my photos in about page.</span>
<span class="token comment"># If you don't want to display this `Gallery` content, you can deactivate or delete this configuration.</span>
<span class="token comment"># 在“关于”页面配置"我的相册"图片，如果你不需要这些信息则可以将其设置为不激活或者将其删除.</span>
myGallery:
  enable: <span class="token boolean">true</span>
  data:
    - /medias/featureimages/0.jpg
    - /medias/featureimages/1.jpg
    - /medias/featureimages/2.jpg
    - /medias/featureimages/3.jpg
    - /medias/featureimages/4.jpg
    - /medias/featureimages/5.jpg
    - /medias/featureimages/6.jpg
    - /medias/featureimages/7.jpg
    - /medias/featureimages/8.jpg
    - /medias/featureimages/9.jpg
    - /medias/featureimages/10.jpg
    - /medias/featureimages/11.jpg
    - /medias/featureimages/12.jpg
    - /medias/featureimages/13.jpg
    - /medias/featureimages/14.jpg
    - /medias/featureimages/15.jpg
    - /medias/featureimages/16.jpg
    - /medias/featureimages/17.jpg
    - /medias/featureimages/18.jpg
    - /medias/featureimages/19.jpg
    - /medias/featureimages/20.jpg
    - /medias/featureimages/21.jpg
    - /medias/featureimages/22.jpg
    - /medias/featureimages/23.jpg

<span class="token comment"># Whether to display post-calender in the `archive` page</span>
<span class="token comment"># 设置在归档页面中是否显示'文章日历'控件</span>
postCalendar: <span class="token boolean">true</span>

<span class="token comment"># 不建议使用gittalk,gitment这样权限过高的oauth app,因为它们能够 读写 授权者 所有的公共仓库 ，也就是说拿到你的授权 Token 的人，可以将你的 GitHub 公共仓库删空（这是github权限分的不够细的锅），如果恶意攻击者想获取使用者的 AccessToken，只需要在代码中加上一个 ajax 请求即可。原贴地址:https://www.v2ex.com/t/535608。建议大家看完。（我没有在用gittalk/gitment的网站上评论过，但根据v2ex网友的提示，如果网站自行修改了 gitalk.js 脚本 或者反代了 github api，就很容易拿到你的 Token ）</span>

<span class="token comment"># https://github.com/utterance/utterances 是个 GitHub App，它的权限仅限于某个仓库。像 hugo hexo 这种静态页面类型的博客，clientID/clientSecret 泄露是不可避免的。我认为较好的解决方式是像 utteras 这种 GitHubApp，只有一个仓库的读写权限，将破坏降到最小。</span>

<span class="token comment"># valine和minivaline都是使用的免费的leancloud开发版资源，即使数据丢了leancloud也不用负任何的责任。此外valine的src目录已在1.4.0后停止更新。。。薛定谔的开源。</span>

<span class="token comment"># 当初多说国内最大都倒了，livere不一定靠谱。</span>

<span class="token comment"># disqus被墙了。</span>

<span class="token comment"># 畅言需要备案。</span>

<span class="token comment"># the Gitalk config，default disabled</span>
<span class="token comment"># Gitalk 评论模块的配置，默认为不激活</span>
gitalk:
  enable: <span class="token boolean">false</span>
  owner:
  repo:
  oauth:
    clientId:
    clientSecret:
  admin:

<span class="token comment"># the Gitment config，default disabled</span>
<span class="token comment"># Gitment 评论模块的配置，默认为不激活</span>
gitment:
  enable: <span class="token boolean">false</span>
  owner:
  repo:
  oauth:
    clientId:
    clientSecret:

<span class="token comment"># disqus config, default disabled</span>
<span class="token comment"># Disqus评论模块的配置，默认为不激活</span>
disqus:
  enable: <span class="token boolean">false</span>
  shortname:

<span class="token comment"># Livere comment configuration, the default is not activated</span>
<span class="token comment"># Livere 来必力评论模块的配置，默认为不激活</span>
livere:
  enable: <span class="token boolean">false</span>
  uid:

<span class="token comment"># The configuration of the Valine comment module is not activated by default.</span>
<span class="token comment"># To use it, activate the configuration item and set appId and appKey.</span>
<span class="token comment"># Valine 评论模块的配置，默认为不激活，如要使用，就请激活该配置项，并设置 appId 和 appKey.</span>
valine:
  enable: <span class="token boolean">false</span>
  appId:
  appKey:
  notify: <span class="token boolean">false</span>
  verify: <span class="token boolean">false</span>
  visitor: <span class="token boolean">true</span>
  avatar: <span class="token string">'mm'</span> <span class="token comment"># Gravatar style : mm/identicon/monsterid/wavatar/retro/hide</span>
  pageSize: <span class="token number">10</span>
  placeholder: <span class="token string">'just go go'</span> <span class="token comment"># Comment Box placeholder</span>
  background: /medias/comment_bg.png

<span class="token comment"># The configuration of the MiniValine comment module is not activated by default.</span>
<span class="token comment"># To use it, activate the configuration item and set appId and appKey.</span>
<span class="token comment"># MiniValine 评论模块的配置，默认为不激活，如要使用，就请激活该配置项，并设置 appId 和 appKey.</span>
<span class="token comment"># See: https://github.com/MiniValine/MiniValine</span>
minivaline:
  enable: <span class="token boolean">false</span>
  appId: zhM0AOiqle17oPoE84CoYw1e-gzGzoHsz <span class="token comment"># Your leancloud application appid</span>
  appKey: itmzT1JbXfAjVwMqDhGPzU45 <span class="token comment"># Your leancloud application appkey</span>
  mode: DesertsP <span class="token comment"># DesertsP or xCss</span>
  placeholder: Write a Comment <span class="token comment"># Comment box placeholder</span>
  math: <span class="token boolean">true</span> <span class="token comment"># Support MathJax.</span>
  md: <span class="token boolean">true</span> <span class="token comment"># Support Markdown.</span>
  enableQQ: <span class="token boolean">false</span> <span class="token comment"># Enable QQ avatar API.</span>
  NoRecordIP: <span class="token boolean">false</span> <span class="token comment"># Do not record commenter IP.</span>
  visitor: <span class="token boolean">true</span> <span class="token comment"># Article reading statistics.</span>
  maxNest: <span class="token number">6</span> <span class="token comment"># Sub-comment maximum nesting depth.</span>
  pageSize: <span class="token number">6</span> <span class="token comment"># Pagination size.</span>
  adminEmailMd5: de8a7aa53d07e6b6bceb45c64027763d <span class="token comment"># The MD5 of Admin Email to show Admin Flag.[Just Only DesertsP Style mode]</span>
  tagMeta: <span class="token comment"># The String Array of Words to show Flag.[Just Only xCss Style mode]</span>
    - 管理员
    - 小伙伴
    - 访客
  master: <span class="token comment"># The MD5 String Array of master Email to show master Flag.[Just Only xCss Style mode]</span>
    - de8a7aa53d07e6b6bceb45c64027763d
  friends: <span class="token comment"># The MD5 String Array of friends Email to show friends Flag.[Just Only xCss Style mode]</span>
    - b5bd5d836c7a0091aa8473e79ed4c25e
    - adb7d1cd192658a55c0ad22a3309cecf
    - 3ce1e6c77b4910f1871106cb30dc62b0
    - cfce8dc43725cc14ffcd9fb4892d5bfc
  <span class="token comment"># MiniValine's display language depends on user's browser or system environment</span>
  <span class="token comment"># If you want everyone visiting your site to see a uniform language, you can set a force language value</span>
  <span class="token comment"># Available values: en  | zh-CN | (and many more)</span>
  <span class="token comment"># More i18n info: https://github.com/MiniValine/minivaline-i18n</span>
  lang:
  <span class="token comment"># Expression Url.</span>
  <span class="token comment"># https://github.com/MiniValine/MiniValine/blob/master/.github/FAQ.md#how-to-customize-emoticons</span>
  emoticonUrl:
    - https://cdn.jsdelivr.net/npm/alus@latest
    - https://cdn.jsdelivr.net/gh/MiniValine/qq@latest
    - https://cdn.jsdelivr.net/gh/MiniValine/Bilibilis@latest
    - https://cdn.jsdelivr.net/gh/MiniValine/tieba@latest
    - https://cdn.jsdelivr.net/gh/MiniValine/twemoji@latest
    - https://cdn.jsdelivr.net/gh/MiniValine/weibo@latest

changyan:
  enable: <span class="token boolean">false</span>
  appId:
  conf:
<span class="token comment"># Whether to display fork me on github icon and link, default true, You can change it to your repo address</span>
<span class="token comment"># 配置是否在 header 中显示 fork me on github 的图标，默认为true，你可以修改为你的仓库地址.</span>
githubLink:
  enable: <span class="token boolean">true</span>
  url: https://github.com/trojan20161207
  title: Fork Me

<span class="token comment"># The password verification feature of read post. To use this feature,</span>
<span class="token comment"># activate the configuration item and write the 'password' key and Cipher in the post's Front-matter.</span>
<span class="token comment"># Note: In order to ensure that the original password will not be leaked to the web page,</span>
<span class="token comment"># the password of the article must be encrypted by 'SHA256' so that it will not be cracked.</span>
<span class="token comment"># 阅读文章的密码验证功能，如要使用此功能请激活该配置项，并在对应文章的Front-matter中写上'password'的键和加密后的密文即可.</span>
<span class="token comment"># 请注意：为了保证密码原文不会被泄露到网页中，文章的密码必须是通过'SHA256'加密的，这样就不会被破解.</span>
verifyPassword:
  enable: <span class="token boolean">false</span>
  promptMessage: 请输入访问本文章的密码
  errorMessage: 密码错误，将返回主页！

<span class="token comment"># busuanzi(http://busuanzi.ibruce.info/) website statistics</span>
<span class="token comment"># 不蒜子(http://busuanzi.ibruce.info/) 网站统计</span>
busuanziStatistics:
  enable: <span class="token boolean">true</span>
  totalTraffic: <span class="token boolean">true</span> <span class="token comment"># 总访问量</span>
  totalNumberOfvisitors: <span class="token boolean">true</span> <span class="token comment"># 总人次</span>

<span class="token comment"># Add google analytics configuration</span>
<span class="token comment"># 添加 Google Analytics 配置</span>
googleAnalytics:
  enable: <span class="token boolean">false</span>
  id:

<span class="token comment"># Add baidu analytics configuration</span>
<span class="token comment"># 添加 baidu Analytics 配置</span>
baiduAnalytics:
  enable: <span class="token boolean">false</span>
  id:

<span class="token comment"># 百度搜索资源平台提交链接</span>
baiduPush: <span class="token boolean">false</span>

<span class="token comment"># The used front-end library can be replaced with the corresponding CDN address as needed,</span>
<span class="token comment"># If the specific version is not specified below, you can use the latest version.</span>
<span class="token comment"># 使用到的前端库，可按需替换成对应的CDN地址，如果下面未指定具体的版本号，使用最新的版本即可.</span>
<span class="token comment"># 注：jsdelivr可以自动帮你生成.min版的js和css，所以你在设置js及css路径中可以直接写.min.xxx</span>
libs:
  css:
    matery: /css/matery.css
    mycss: /css/my.css
    fontAwesome: /libs/awesome/css/all.css <span class="token comment"># V5.11.1</span>
    materialize: /libs/materialize/materialize.min.css <span class="token comment"># 1.0.0</span>
    aos: /libs/aos/aos.css
    animate: /libs/animate/animate.min.css <span class="token comment"># V3.5.1</span>
    lightgallery: /libs/lightGallery/css/lightgallery.min.css <span class="token comment"># V1.6.11</span>
    aplayer: /libs/aplayer/APlayer.min.css
    dplayer: /libs/dplayer/DPlayer.min.css
    gitalk: /libs/gitalk/gitalk.css
    jqcloud: /libs/jqcloud/jqcloud.css
    tocbot: /libs/tocbot/tocbot.css
    prism: /libs/prism/prism.css
  js:
    matery: /js/matery.js
    jquery: /libs/jquery/jquery.min.js
    materialize: /libs/materialize/materialize.min.js <span class="token comment"># 1.0.0</span>
    masonry: /libs/masonry/masonry.pkgd.min.js <span class="token comment"># v4.0.0</span>
    aos: /libs/aos/aos.js
    scrollProgress: /libs/scrollprogress/scrollProgress.min.js
    lightgallery: /libs/lightGallery/js/lightgallery-all.min.js <span class="token comment"># V1.6.11</span>
    clicklove: /libs/others/clicklove.js
    busuanzi: /libs/others/busuanzi.pure.mini.js
    aplayer: /libs/aplayer/APlayer.min.js
    dplayer: /libs/dplayer/DPlayer.min.js
    crypto: /libs/cryptojs/crypto-js.min.js
    echarts: /libs/echarts/echarts.min.js
    gitalk: /libs/gitalk/gitalk.min.js
    valine: /libs/valine/Valine.min.js <span class="token comment"># 若想保持最新版，请替换为 https://unpkg.com/valine/dist/Valine.min.js  默认为 /libs/valine/Valine.min.js</span>
    minivaline: /libs/minivaline/MiniValine.js
    jqcloud: /libs/jqcloud/jqcloud-1.0.4.min.js
    tocbot: /libs/tocbot/tocbot.min.js
    canvas_nest: /libs/background/canvas-nest.js
    ribbon: /libs/background/ribbon.min.js
    ribbonRefresh: /libs/background/ribbon-refresh.min.js
    ribbon_dynamic: /libs/background/ribbon-dynamic.js
    instantpage: /libs/instantpage/instantpage.js

<span class="token comment"># The post featured images that needs to be displayed when there is no image.</span>
<span class="token comment"># 无文章特色图片时需要显示的文章特色图片.</span>
featureImages:
- /medias/featureimages/0.jpg
- /medias/featureimages/1.jpg
- /medias/featureimages/2.jpg
- /medias/featureimages/3.jpg
- /medias/featureimages/4.jpg
- /medias/featureimages/5.jpg
- /medias/featureimages/6.jpg
- /medias/featureimages/7.jpg
- /medias/featureimages/8.jpg
- /medias/featureimages/9.jpg
- /medias/featureimages/10.jpg
- /medias/featureimages/11.jpg
- /medias/featureimages/12.jpg
- /medias/featureimages/13.jpg
- /medias/featureimages/14.jpg
- /medias/featureimages/15.jpg
- /medias/featureimages/16.jpg
- /medias/featureimages/17.jpg
- /medias/featureimages/18.jpg
- /medias/featureimages/19.jpg
- /medias/featureimages/20.jpg
- /medias/featureimages/21.jpg
- /medias/featureimages/22.jpg
- /medias/featureimages/23.jpg

<span class="token comment"># default configs that the default policy for every articles/posts</span>
<span class="token comment"># default 配置文章的默认转载规则</span>

<span class="token comment"># you can define reprint policy for a single article in the front-matter of the specific md file using this key: reprintPolicy</span>
<span class="token comment"># 您可以使用在文章md文件的 front-matter 中指定 reprintPolicy 来给单个文章配置转载规则</span>

<span class="token comment"># 可用的转载规则有（available reprint policies are）：</span>
<span class="token comment"># 这些转载规则的意义请参考(you can refer to this link FMI)：https://creativecommons.org/choose/?lang=zh</span>
<span class="token comment"># cc_by（知识共享署名 4.0 国际许可协议 Creative Commons Attribution-NoDerivatives 4.0 International License）</span>
<span class="token comment"># cc_by_nd（知识共享署名-禁止演绎 4.0 国际许可协议 Creative Commons Attribution-NoDerivatives 4.0 International License）</span>
<span class="token comment"># cc_by_sa（知识共享署名-相同方式共享 4.0 国际许可协议 Creative Commons Attribution-ShareAlike 4.0 International License）</span>
<span class="token comment"># cc_by_nc（知识共享署名-非商业性使用 4.0 国际许可协议 Creative Commons Attribution-NoDerivatives 4.0 International License）</span>
<span class="token comment"># cc_by_nc_nd（知识共享署名-非商业性使用-禁止演绎 4.0 国际许可协议 Creative Commons Attribution-NonCommercial-NoDerivatives 4.0 International License）</span>
<span class="token comment"># cc_by_nc_sa（知识共享署名-非商业性使用-相同方式共享 4.0 国际许可协议 Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License）</span>

<span class="token comment"># cc0（CC0 1.0 通用 (CC0 1.0) 公共领域贡献 CC0 1.0 Universal (CC0 1.0) Public Domain Dedication） https://creativecommons.org/publicdomain/zero/1.0/deed.zh</span>

<span class="token comment"># noreprint（不允许转载 not allowed to reprint）</span>
<span class="token comment"># pay（付费转载 pay for reprinting）</span>
reprint:
  enable: <span class="token boolean">true</span> <span class="token comment"># whether enable reprint section 是否启用“转载规则限定模块”</span>
  default: cc_by

<span class="token comment"># DaoVoice online contact</span>
daovoice:
  enable: <span class="token boolean">false</span>
  app_id:

<span class="token comment"># Tidio online contact</span>
tidio:
  enable: <span class="token boolean">false</span>
  public_key:

<span class="token comment"># 腾讯兔小巢，见https://txc.qq.com/</span>
tuxiaochao:
  enable: <span class="token boolean">false</span>
  productId:
<span class="token comment">#背景canvas-nest</span>
canvas_nest:
  enable: <span class="token boolean">false</span>
  color: <span class="token number">0,0</span>,255 <span class="token comment"># 线条颜色, 默认: '0,0,0' ；三个数字分别为(R,G,B)，注意用,分割</span>
  pointColor: <span class="token number">0,0</span>,255 <span class="token comment"># 交点颜色, 默认: '0,0,0' ；三个数字分别为(R,G,B)，注意用,分割</span>
  opacity: <span class="token number">0.7</span> <span class="token comment"># 线条透明度（0~1）, 默认: 0.5</span>
  zIndex: <span class="token parameter variable">-1</span> <span class="token comment"># 背景的 z-index 属性，css 属性用于控制所在层的位置, 默认: -1.</span>
  count: <span class="token number">99</span> <span class="token comment"># 线条的总数量, 默认: 99</span>

<span class="token comment"># 背景静止彩带.</span>
ribbon:
  enable: <span class="token boolean">false</span>
  size: <span class="token number">150</span> <span class="token comment"># 彩带大小, 默认: 90.</span>
  alpha: <span class="token number">0.6</span> <span class="token comment"># 彩带透明度 (0 ~ 1), 默认: 0.6.</span>
  zIndex: <span class="token parameter variable">-1</span> <span class="token comment"># 背景的z-index属性，css属性用于控制所在层的位置, 默认: -1.</span>
  clickChange: <span class="token boolean">false</span>  <span class="token comment"># 设置是否每次点击都更换彩带.</span>

<span class="token comment"># 背景动态彩带.</span>
ribbon_dynamic:
  enable: <span class="token boolean">false</span>

<span class="token comment"># sharejs文章分享模块.</span>
<span class="token comment"># 支持顺序，可选项目为twitter, facebook, google, qq, qzone, wechat, weibo, douban, linkedin.</span>
sharejs:
  enable: <span class="token boolean">true</span>
  sites: google,qq,qzone,wechat,weibo

<span class="token comment"># addthis文章分享模块.</span>
addthis:
  enable: <span class="token boolean">false</span>
  pubid:  <span class="token comment"># 前往https://www.addthis.com/获取</span>

<span class="token comment"># 打字效果副标题.</span>
<span class="token comment"># 如果有符号 ‘ ，请在 ’ 前面加上 \</span>
subtitle:
  enable: <span class="token boolean">true</span>
  loop: <span class="token boolean">true</span> <span class="token comment"># 是否循环</span>
  showCursor: <span class="token boolean">true</span> <span class="token comment"># 是否显示光标</span>
  startDelay: <span class="token number">300</span> <span class="token comment"># 开始延迟</span>
  typeSpeed: <span class="token number">100</span> <span class="token comment"># 打字速度</span>
  backSpeed: <span class="token number">50</span> <span class="token comment"># 删除速度</span>
  sub1: 从来没有真正的绝境, 只有心灵的迷途
  sub2: Never really desperate, only the lost of the soul
  sub3: 用心过每一天，就像那是你生命中的最后一天
  sub4: Live every day with your heart, as <span class="token keyword">if</span> it was the last day <span class="token keyword">in</span> your life
  sub5: 用心做好每一件事，因为那可能是你能做的最后一件事
  sub6: Do everything with your heart, because that may be the last thing you can <span class="token keyword">do</span>

<span class="token comment"># 手机二级菜单.</span>
navMenu:
  mleft: <span class="token boolean">true</span> <span class="token comment"># 二级侧栏子菜单是否对齐左边</span>
  bgColor: <span class="token string">" "</span> <span class="token comment"># 二级侧栏子菜单背景颜色,留空即为全局背景色</span>

<span class="token comment"># 网页预加载.</span>
instantpage:
  enable: <span class="token boolean">true</span>

<span class="token comment"># banner 是否每日切换.</span>
<span class="token comment"># 若为 false, 则 banner 默认为 /medias/banner/0.jpg</span>
banner:
  enable: <span class="token boolean">true</span>

<span class="token comment">#ICP备案信息尾部显示</span>
icp:
  enable: <span class="token boolean">false</span>
  url: <span class="token comment"># 备案链接</span>
  text: <span class="token comment"># 备案信息</span>

<span class="token comment"># CDN访问加速 </span>
<span class="token comment"># 第一次使用本功能，一定要先配置url，再`hexo cl &amp;&amp; hexo g &amp;&amp; hexo d`部署到GitHub的仓库，注意！必须是GitHub的仓库！</span>
<span class="token comment"># 如果必须要使用国内的coding或者gitee，可以采用双部署，同时将网站部署到两个仓库（其中一个必须是GitHub的仓库）</span>
<span class="token comment"># URL配置规则（例子如下）： https://cdn.jsdelivr.net/gh/你的GitHub用户名/你的仓库名</span>
<span class="token comment"># 如果想关闭此功能，将 url地址 注释或删除即可！</span>
<span class="token comment">#</span>
<span class="token comment"># 注：配置了此项，就代表着本地调试的时候，网站依然会去GitHub请求资源（原来的资源），本地调试的时候记得将 此项配置 注释或者删除掉</span>
<span class="token comment"># 更多关于访问速度优化，请查看：https://blog.sky03.cn/posts/42790.html</span>
<span class="token comment"># 注：jsdelivr可以自动帮你生成.min版的js和css，所以你在上面设置js及css路径中可以直接写.min.xxx</span>
jsDelivr:
  url: https://cdn.jsdelivr.net/gh/trojan20161207/trojan20161207.github.io
  
<span class="token comment"># 网站背景图</span>
background:
  enable: <span class="token boolean">false</span>
  url: https://cdn.jsdelivr.net/gh/trojan20161207/trojan20161207.github.io/medias/featureimages/13.jpg

<span class="token comment"># 说说 https://artitalk.js.org/</span>
artitalk:
  enable: <span class="token boolean">false</span>
  appId: <span class="token comment"># xxxxx</span>
  appKey: <span class="token comment"># xxxxxx</span>

<span class="token comment"># 哔哔功能配置</span>
<span class="token comment"># 登陆leancloud创建应用。进入应用后，点击创建 Class，将「 Class 名称」命名为 content</span>
<span class="token comment"># 点击刚刚创建的content Class，点击添加列并创建名称为content的列，类型为String，注意列注释也要填写（随意填）</span>
<span class="token comment"># 记录appid，masterkey，api域名</span>
<span class="token comment"># 输入:hexo new page bb</span>
<span class="token comment"># hexo就在source文件夹下创建了bb/index.md。</span>
<span class="token comment"># 修改index.md的frontmater下的layout为bb：</span>
<span class="token comment"># ---</span>
<span class="token comment"># title: 黑石说</span>
<span class="token comment"># layout: bb</span>
<span class="token comment"># ---</span>
<span class="token comment"># 里面的文字可以自己随意加，会显示在哔哔的上方。</span>
<span class="token comment"># 关注公众号 "黑石哔哔"，发送: //bindCurrentUser:你的APPID,你的MASTERKEY,你的RESTAPI</span>
<span class="token comment"># 可用leancloud国际版，国际版api为 https://appid前八位.api.lncldglobal.com</span>
bbtime:
 enable: <span class="token boolean">false</span>
 appId: <span class="token comment"># 你的appId</span>
 appKey: <span class="token comment"># 你的appKey</span>
 serverURLs: <span class="token comment"># https://你的api</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
]]></content>
      <tags>
        <tag>blog</tag>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>写自己的nginx配置文件</title>
    <url>/2019/09/23/%E5%86%99%E8%87%AA%E5%B7%B1%E7%9A%84nginx%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6/</url>
    <content><![CDATA[<p>前面几节中我们已经学过了nginx配置文件中的各个段的配置指令，下面我们就来写一个自己配置文件。如下代码：</p>
<pre class="line-numbers language-none"><code class="language-none">worker_processes  1;
events &#123;
    worker_connections  1024;
&#125;
http &#123;
       server &#123;
            location &#x2F; &#123;
                      #root   html;      #定义服务器的默认网站根目录位置
                      #index index.php index.html index.htm;   #定义首页索引文件的名称
                      proxy_pass http:&#x2F;&#x2F;www.baidu.com;
             &#125;
            error_page   500 502 503 504  &#x2F;50x.html;
            location &#x3D; &#x2F;50x.html &#123;
                root   html;
           &#125;
         &#125;
&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>　　这样我们自己的配置文件就完成了，先将nginx的服务停止，然后我们用<em>nginx -c <em>.conf</em>命令来重新启动nginx，</em>.conf 为我们自己的配置文件所在的路径，nginx启动以后，然后点击【访问测试】，看看会出现什么情况，是不是已经转到我们所配置的站点了。</p>
<p>　　在右面的编辑页面中编辑一个配置文件，我自己的配置文件名为Mynginx.conf,其中的内容就是以上面代码的内容，保存在&#x2F;etc&#x2F;nginx目录下，完成以后我们做如下操作：</p>
<pre class="line-numbers language-none"><code class="language-none">nginx -s stop   
nginx -c &#x2F;etc&#x2F;nginx&#x2F;Mynginx.conf<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>

<p>然后点击【访问测试】</p>
]]></content>
      <tags>
        <tag>nginx</tag>
      </tags>
  </entry>
  <entry>
    <title>基于阿里云镜像站安装Kubernetes 1.15</title>
    <url>/2019/09/06/%E5%9F%BA%E4%BA%8E%E9%98%BF%E9%87%8C%E4%BA%91%E9%95%9C%E5%83%8F%E7%AB%99%E5%AE%89%E8%A3%85Kubernetes1.15/</url>
    <content><![CDATA[<pre><code>kubernetes官网的文档比较详细，但是所有的安装步骤都有个前提(你有足够自由的互联络)，之前在香港和亚马逊的服务器都是直接照着手册执行脚本一路顺畅。无奈天朝的网络只能够借助于阿里云镜像站了，先前只是在使用该站点的各种linux发行版安装包，最近发现还支持了kubernetes。具体可以访问[阿里巴巴开源镜像站](https://opsx.alibaba.com/mirror)。
# 安装docker-ce
</code></pre>
<h1 id="❤️-以下适用于centos-7"><a href="#❤️-以下适用于centos-7" class="headerlink" title="❤️ 以下适用于centos 7"></a>❤️ 以下适用于centos 7</h1><h1 id="step-1-安装必要的一些系统工具"><a href="#step-1-安装必要的一些系统工具" class="headerlink" title="step 1: 安装必要的一些系统工具"></a>step 1: 安装必要的一些系统工具</h1><pre class="line-numbers language-none"><code class="language-none">sudo yum install -y yum-utils device-mapper-persistent-data lvm2  <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h1 id="Step-2-添加软件源信息"><a href="#Step-2-添加软件源信息" class="headerlink" title="Step 2: 添加软件源信息"></a>Step 2: 添加软件源信息</h1><pre class="line-numbers language-none"><code class="language-none">sudo yum-config-manager --add-repo http:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;docker-ce&#x2F;linux&#x2F;centos&#x2F;docker-ce.repo  
yum-config-manager --disable docker-ce-edge  
yum-config-manager --disable docker-ce-test  <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<h1 id="Step-3-更新并安装-Docker-CE"><a href="#Step-3-更新并安装-Docker-CE" class="headerlink" title="Step 3: 更新并安装 Docker-CE"></a>Step 3: 更新并安装 Docker-CE</h1><pre class="line-numbers language-none"><code class="language-none">sudo yum makecache fast  
sudo yum -y install docker-ce  <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<h1 id="Step-4-开启Docker服务"><a href="#Step-4-开启Docker服务" class="headerlink" title="Step 4: 开启Docker服务"></a>Step 4: 开启Docker服务</h1><pre class="line-numbers language-none"><code class="language-none">sudo service docker start  <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h1 id="Step-5-更改cgroup-driver"><a href="#Step-5-更改cgroup-driver" class="headerlink" title="Step 5: 更改cgroup driver"></a>Step 5: 更改cgroup driver</h1><pre class="line-numbers language-none"><code class="language-none">cat &gt; &#x2F;etc&#x2F;docker&#x2F;daemon.json &lt;&lt;EOF  
&#123;  
 &quot;exec-opts&quot;: [&quot;native.cgroupdriver&#x3D;systemd&quot;],  
 &quot;log-driver&quot;: &quot;json-file&quot;,  
 &quot;log-opts&quot;: &#123;  
 &quot;max-size&quot;: &quot;100m&quot;  
 &#125;,  
 &quot;storage-driver&quot;: &quot;overlay2&quot;,  
 &quot;storage-opts&quot;: [  
 &quot;overlay2.override_kernel_check&#x3D;true&quot;  
 ]  
&#125;  
EOF <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h1 id="❤️-以下命令适用于ubuntu"><a href="#❤️-以下命令适用于ubuntu" class="headerlink" title="❤️ 以下命令适用于ubuntu"></a>❤️ 以下命令适用于ubuntu</h1><h1 id="step-1-安装必要的一些系统工具-1"><a href="#step-1-安装必要的一些系统工具-1" class="headerlink" title="step 1: 安装必要的一些系统工具"></a>step 1: 安装必要的一些系统工具</h1><pre class="line-numbers language-none"><code class="language-none">sudo apt-get update  
sudo apt-get -y install apt-transport-https ca-certificates curl software-properties-common  <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<h1 id="step-2-安装GPG证书"><a href="#step-2-安装GPG证书" class="headerlink" title="step 2: 安装GPG证书"></a>step 2: 安装GPG证书</h1><pre class="line-numbers language-none"><code class="language-none">curl -fsSL http:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;docker-ce&#x2F;linux&#x2F;ubuntu&#x2F;gpg | sudo apt-key add -  <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h1 id="Step-3-写入软件源信息"><a href="#Step-3-写入软件源信息" class="headerlink" title="Step 3: 写入软件源信息"></a>Step 3: 写入软件源信息</h1><pre class="line-numbers language-none"><code class="language-none">sudo add-apt-repository &quot;deb [arch&#x3D;amd64] http:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;docker-ce&#x2F;linux&#x2F;ubuntu $(lsb_release -cs) stable&quot;  <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h1 id="Step-4-更新并安装-Docker-CE"><a href="#Step-4-更新并安装-Docker-CE" class="headerlink" title="Step 4: 更新并安装 Docker-CE"></a>Step 4: 更新并安装 Docker-CE</h1><pre class="line-numbers language-none"><code class="language-none">sudo apt-get -y update  
sudo apt-get -y install docker-ce  <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<h1 id="Step-5-更改cgroup-driver-1"><a href="#Step-5-更改cgroup-driver-1" class="headerlink" title="Step 5: 更改cgroup driver"></a>Step 5: 更改cgroup driver</h1><pre class="line-numbers language-none"><code class="language-none">cat &gt; &#x2F;etc&#x2F;docker&#x2F;daemon.json &lt;&lt;EOF  
&#123;  
 &quot;exec-opts&quot;: [&quot;native.cgroupdriver&#x3D;systemd&quot;],  
 &quot;log-driver&quot;: &quot;json-file&quot;,  
 &quot;log-opts&quot;: &#123;  
 &quot;max-size&quot;: &quot;100m&quot;  
 &#125;,  
 &quot;storage-driver&quot;: &quot;overlay2&quot;,  
 &quot;storage-opts&quot;: [  
 &quot;overlay2.override_kernel_check&#x3D;true&quot;  
 ]  
&#125;  
EOF  <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>


<h1 id="安装二进制文件"><a href="#安装二进制文件" class="headerlink" title="安装二进制文件"></a>安装二进制文件</h1><p>主要是安装<code>kubelet</code>、<code>kubeadm</code>以及<code>kubectl</code>这三个可执行文件。其中kubeadm是官方的安装工具，kubectl是客户端，kubelet这个就不用介绍了。</p>
<h1 id="安装阿里云的k8s-yum源"><a href="#安装阿里云的k8s-yum源" class="headerlink" title="安装阿里云的k8s-yum源"></a>安装阿里云的k8s-yum源</h1><p>以下是针对于CentOS的yum源，官方也有针对Ubuntu的源</p>
<pre class="line-numbers language-none"><code class="language-none">cat &lt;&lt;EOF &gt; &#x2F;etc&#x2F;yum.repos.d&#x2F;kubernetes.repo  
[kubernetes]  
name&#x3D;Kubernetes  
baseurl&#x3D;http:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;kubernetes&#x2F;yum&#x2F;repos&#x2F;kubernetes-el7-x86_64  
enabled&#x3D;1  
gpgcheck&#x3D;0  
repo_gpgcheck&#x3D;0  
gpgkey&#x3D;http:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;kubernetes&#x2F;yum&#x2F;doc&#x2F;yum-key.gpg  
 http:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;kubernetes&#x2F;yum&#x2F;doc&#x2F;rpm-package-key.gpg  
EOF  <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h1 id="安装kubelet"><a href="#安装kubelet" class="headerlink" title="安装kubelet"></a>安装kubelet</h1><p>如果你希望直接安装最新发布版本的k8s，请直接执行（最终安装的版本关键看你安装的kubeadm版本）。</p>
<pre class="line-numbers language-none"><code class="language-none">setenforce 0  
yum install -y kubelet kubeadm kubectl --disableexcludes&#x3D;kubernetes  
systemctl enable docker &amp;&amp; systemctl start docker  
systemctl enable kubelet &amp;&amp; systemctl start kubelet  <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>

<h1 id="调参运行"><a href="#调参运行" class="headerlink" title="调参运行"></a>调参运行</h1><p>照着执行就行了。</p>
<pre class="line-numbers language-none"><code class="language-none">cat &lt;&lt;EOF &gt;  &#x2F;etc&#x2F;sysctl.d&#x2F;k8s.conf  
net.bridge.bridge-nf-call-ip6tables &#x3D; 1  
net.bridge.bridge-nf-call-iptables &#x3D; 1  
EOF  
sysctl --system  <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<pre class="line-numbers language-none"><code class="language-none">systemctl daemon-reload  
systemctl restart kubelet  <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<h1 id="容器组件"><a href="#容器组件" class="headerlink" title="容器组件"></a>容器组件</h1><h2 id="拉取镜像"><a href="#拉取镜像" class="headerlink" title="拉取镜像"></a>拉取镜像</h2><p>google和docker似乎是有意要对着干的，虽然阿里云也有docker registry的加速器，但是google并没有将kubernetes的镜像放到docker hub上。所以，我们需要先使用脚本，从阿里云的google_containers命名空间下载对应的克隆镜像，然后再通过docker tag将其labels修改为kubeadm生成的static-pod yaml文件对应的镜像标签。从而欺骗kubeadm，所有镜像都已经ready了，不用再去公网上拉取了。</p>
<p>具体操作如下：</p>
<h2 id="镜像列表"><a href="#镜像列表" class="headerlink" title="镜像列表"></a>镜像列表</h2><p>你肯定会疑问，我怎么知道我要使用哪些镜像？</p>
<p>好在v1.12.2以上的版本，kubeadm提示可以使用以下命令来获取到镜像信息：（本例是v1.15.0）  </p>
<pre class="line-numbers language-none"><code class="language-none">[root@k8s-master manifests]# kubeadm config images list
k8s.gcr.io&#x2F;kube-apiserver:v1.15.0
k8s.gcr.io&#x2F;kube-controller-manager:v1.15.0
k8s.gcr.io&#x2F;kube-scheduler:v1.15.0
k8s.gcr.io&#x2F;kube-proxy:v1.15.0
k8s.gcr.io&#x2F;pause:3.1
k8s.gcr.io&#x2F;etcd:3.3.10
k8s.gcr.io&#x2F;coredns:1.3.1<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>从阿里云拉取镜像  </p>
<pre class="line-numbers language-none"><code class="language-none">[root@k8s-master manifests]# cat .&#x2F;pull.sh  
for i in &#96;kubeadm config images list&#96;; do   
 imageName&#x3D;$&#123;i#k8s.gcr.io&#x2F;&#125;  
 docker pull registry.aliyuncs.com&#x2F;google_containers&#x2F;$imageName  
 docker tag registry.aliyuncs.com&#x2F;google_containers&#x2F;$imageName k8s.gcr.io&#x2F;$imageName  
 docker rmi registry.aliyuncs.com&#x2F;google_containers&#x2F;$imageName  
done;  <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="安装k8s"><a href="#安装k8s" class="headerlink" title="安装k8s"></a>安装k8s</h2><p>这就是kubeadm的安装流程了；下面是部署单节点k8s的命令，如果需要部署k8s集群，可以通过指定config文件的方式来指定其etcd集群，并使用相同的方式部署多个api-server、controller-manager以及scheduler。</p>
<h3 id="k8s"><a href="#k8s" class="headerlink" title="k8s"></a>k8s</h3><pre class="line-numbers language-none"><code class="language-none">[root@k8s-master manifests]# kubeadm init --kubernetes-version&#x3D;$(kubeadm version -o short)  --pod-network-cidr&#x3D;10.244.0.0&#x2F;16  
[init] using Kubernetes version: v1.15.0 
[preflight] running pre-flight checks  
[preflight&#x2F;images] Pulling images required for setting up a Kubernetes cluster  
[preflight&#x2F;images] This might take a minute or two, depending on the speed of your internet connection  
[preflight&#x2F;images] You can also perform this action in beforehand using &#39;kubeadm config images pull&#39;  <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h2 id="安装网络组件"><a href="#安装网络组件" class="headerlink" title="安装网络组件"></a>安装网络组件</h2><p>我比较喜欢使用flannel，可以配置不同的backend来支持多种类型的网络。当然，如果对网络安全有特殊的限制，可以考虑其他的组件.</p>
<pre class="line-numbers language-none"><code class="language-none">kubectl apply -f https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;coreos&#x2F;flannel&#x2F;bc79dd1505b0c8681ece4de4c0d86c5cd2643275&#x2F;Documentation&#x2F;kube-flannel.yml  <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h2 id="取消污点"><a href="#取消污点" class="headerlink" title="取消污点"></a>取消污点</h2><p>这是因为我就只有一台机器，如果不干掉这个taint就无法调度pod。</p>
<pre class="line-numbers language-none"><code class="language-none">kubectl taint nodes --all node-role.kubernetes.io&#x2F;master- <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h2 id="安装dashboard"><a href="#安装dashboard" class="headerlink" title="安装dashboard"></a>安装dashboard</h2><p>从官网拷贝dashboard的yaml文件到本地，保存为dashboard.yaml，需要注意版本。<br>#Create a new ServiceAccount  </p>
<pre class="line-numbers language-none"><code class="language-none">kubectl create serviceaccount k8sadmin -n kube-system  <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>#Create a ClusterRoleBinding with Cluster Admin Privileges  </p>
<pre class="line-numbers language-none"><code class="language-none">kubectl create clusterrolebinding k8sadmin --clusterrole&#x3D;cluster-admin --serviceaccount&#x3D;kube-system:k8sadmin  <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>#Get the token  </p>
<pre class="line-numbers language-none"><code class="language-none">kubectl get secret -n kube-system | grep k8sadmin | cut -d &quot; &quot; -f1 | xargs -n 1 | xargs kubectl get secret  -o &#39;jsonpath&#x3D;&#123;.data.token&#125;&#39; -n kube-system | base64 --decode  <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>执行以上命令，最后一条命令或获取到一串token，直接使用得到的token登录dashboard。</p>
<h1 id="安装dashboard-1"><a href="#安装dashboard-1" class="headerlink" title="安装dashboard"></a>安装dashboard</h1><pre class="line-numbers language-none"><code class="language-none">kubectl apply -f https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;kubernetes&#x2F;dashboard&#x2F;v1.10.1&#x2F;src&#x2F;deploy&#x2F;recommended&#x2F;kubernetes-dashboard.yaml  <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>如果无法下载墙外镜像，修改image信息：</p>
<p><code>k8s.gcr.io/kubernetes-dashboard-amd64:v1.10.1   =&gt; ljchen/k8s_gcr_io_kubernetes-dashboard-amd64:v1.10.1</code></p>
<h2 id="安装WeaveScope"><a href="#安装WeaveScope" class="headerlink" title="安装WeaveScope"></a>安装WeaveScope</h2><pre class="line-numbers language-none"><code class="language-none">kubectl apply -f &quot;https:&#x2F;&#x2F;cloud.weave.works&#x2F;k8s&#x2F;scope.yaml?k8s-version&#x3D;$(kubectl version | base64 | tr -d &#39;\n&#39;)&quot;  <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h1 id="设置端口映射"><a href="#设置端口映射" class="headerlink" title="设置端口映射"></a>设置端口映射</h1><pre class="line-numbers language-none"><code class="language-none">kubectl port-forward --address&#x3D;0.0.0.0 -n weave &quot;$(kubectl get -n weave pod --selector&#x3D;weave-scope-component&#x3D;app -o jsonpath&#x3D;&#39;&#123;.items..metadata.name&#125;&#39;)&quot; 4040  <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>执行完以上命令后，在浏览器里面访问执行命令所在的节点的http:&#x2F;&#x2F;{IP}:4040，将看到以下界面。是不是很炫酷！</p>
<h1 id="阿里巴巴开源镜像站"><a href="#阿里巴巴开源镜像站" class="headerlink" title="阿里巴巴开源镜像站"></a><a class="link"   href="http://ljchen.net/2018/10/23/%E5%9F%BA%E4%BA%8E%E9%98%BF%E9%87%8C%E4%BA%91%E9%95%9C%E5%83%8F%E7%AB%99%E5%AE%89%E8%A3%85kubernetes/#%E9%98%BF%E9%87%8C%E5%B7%B4%E5%B7%B4%E5%BC%80%E6%BA%90%E9%95%9C%E5%83%8F%E7%AB%99"  title="阿里巴巴开源镜像站"><i class="fas fa-external-link-alt"></i></a>阿里巴巴开源镜像站</h1><blockquote>
<p>请自行点击kubernetes的帮助。</p>
</blockquote>
<p>记录以下命令，便于添加其他节点主机：</p>
<pre class="line-numbers language-none"><code class="language-none">kubeadm join 192.168.56.201:6443 --token 59mifb.diod87cm1ivbqw6n 
--discovery-token-ca-cert-hash sha256:685b3c121d11f92c5b2af15b163c3860d0188f7795e48e272dde35e4d8435700<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
]]></content>
      <categories>
        <category>docker</category>
      </categories>
      <tags>
        <tag>kubernetes, docker</tag>
      </tags>
  </entry>
  <entry>
    <title>如何为DevOps的面试做好充分准备</title>
    <url>/2019/09/24/%E5%A6%82%E4%BD%95%E4%B8%BADevOps%E7%9A%84%E9%9D%A2%E8%AF%95%E5%81%9A%E5%A5%BD%E5%85%85%E5%88%86%E5%87%86%E5%A4%87/</url>
    <content><![CDATA[<h3 id="这是您为DevOps热点准备的面试准备。"><a href="#这是您为DevOps热点准备的面试准备。" class="headerlink" title="这是您为DevOps热点准备的面试准备。"></a>这是您为DevOps热点准备的面试准备。</h3><p><img  
                     lazyload
                     alt="image"
                     data-src="https://dzone.com/storage/temp/12433224-interiew-chairs-and-table.jpg"
                      alt="面试桌椅"
                ></p>
<p><em>那么，为什么他们要雇用您呢？</em></p>
<p>在过去的十年中，DevOps成为一种新的技术文化和职业，将软件开发所需的快速迭代与基础架构运营团队的坚如磐石的稳定性相结合。对于系统管理员，运营工程师以及其他拥有强大系统和软件背景的人员来说，过渡到DevOps的时间可能比现在更好。截至2019年8月，仅在美国，目前就有超过50,000个 LinkedIn DevOps工作岗位。</p>
<p>假设您已经了解了基础知识，并准备开始寻找工作。您如何评价DevOps面试？DevOps工程师必须既是优秀的软件开发人员，又是基础架构专家，因此，他们应该知道Linux基础架构，网络，算法和DevOps工具（例如Terraform，Docker和Kubernetes）。范围从标准软件工程师编码问题到有关系统设计，再到Linux调试和DevOps工具的问题等等。</p>
<p>这是一个令人生畏的清单，但请不要害怕！在Insight上，DevOps奖学金将许多具有可转让技能的个人的职业推向了人们所期望的行业DevOps职位。这是我们为他们准备面试的方式。</p>
<h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><p>动机是一个好的开始，但是您需要纪律才能有效地做好准备。我编写了这本指南，以帮助您制定有规律的面试准备程序。面试真的很烂-这是随机的，可能会让您对自己感到难过。在此过程中，<strong>不可</strong>控制的事情太多了，但是您<strong>可以</strong>控制自己的准备方式。</p>
<p>在这里有很多值得一试的东西，所以不要指望能够一次学习所有东西。也许有一天您会选择一个主题来关注。也许您将连续一个星期专注于另一个主题。不过，通常来说，您应该每天习惯性地进行两到三项活动，轮流讨论不同的主题，以使您的思想保持新鲜和投入。这些类别按重要性顺序列出：</p>
<ol>
<li>Linux基础</li>
<li>数据结构与算法</li>
<li>系统设计</li>
<li>解析</li>
<li>DevOps工具</li>
</ol>
<p>首先，要建立广泛而浅薄的知识基础，这样一来，以循环方式首先在各个主题之间实现负载平衡是一件好事。这将扩大您的DevOps空间的概念框架，以便您可以更轻松地将新信息放入上下文中。每个类别中的活动也按重要性顺序或多或少地排名。某些活动适合日常实践，例如CodeSignal问题或OverTheWire挑战。其他人则适合深入学习。</p>
<p>如果您想快点走，那就一个人走。但是，如果您想走得更远，那就一起走吧。与您的同龄人一起创建一个学习小组。互相追究责任。每周或每天签到和信息共享会话。在这段时间里，您会感到无动力，请记住，做某事总比什么都不做好。在您动力十足的那段时间里，请记住，睡眠和运动对您的成功至为重要。这些活动是人生下一阶段的垫脚石，但请记住让自己着迷于每块石头的形状。</p>
<h2 id="Linux基础"><a href="#Linux基础" class="headerlink" title="Linux基础"></a>Linux基础</h2><p>作为一名DevOps工程师，你应该对Linux了如指掌。从内核到网络再到命令行命令，有关Linux的任何问题都是公平的游戏。</p>
<h3 id="示例问题"><a href="#示例问题" class="headerlink" title="示例问题"></a>示例问题</h3><ul>
<li>Linux计算机加电时发生的步骤顺序是什么？</li>
<li>当您在浏览器中键入google.com并导致网页返回给您时，会发生什么情况？如果没有出现网页怎么办？如何调试问题？</li>
<li>您如何检查文件系统是否空间不足？如何打印最大文件列表？如何删除所有大于1 GB的.mov文件？</li>
</ul>
<h3 id="活动"><a href="#活动" class="headerlink" title="活动"></a>活动</h3><ul>
<li>通读<a href="http://solutionsproj.net/software/The_Linux_Command_Linex.pdf"><em>Linux命令</em></a>行书</li>
<li>通过<a class="link"   href="https://overthewire.org/wargames/" >OverTheWire<i class="fas fa-external-link-alt"></i></a>战争游戏进行工作。这些是通过精心设计的Linux系统进行的有趣的寻宝游戏，旨在教您一些基本概念。至少通过强盗等级。如果遇到困难，请不要担心Google解决方案。我强烈建议您随时随地在GitHub中记录进度。</li>
<li>只需使用vimtutor命令来学习vim。它是有史以来最好的编辑器，请勿让任何人说服您。</li>
<li>考虑购买课程以获取Linux基础知识认证（Linux +，RedHat等）。的确，一磅的认证比一盎司的经验没有价值，但是，如果您经验不足，那么认证可以帮助填补您的知识空白，并证明您具有基本的了解。</li>
</ul>
<h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><ul>
<li>最好参考手册Linux命令是<a class="link"   href="https://tldr.sh/" >tldr.sh<i class="fas fa-external-link-alt"></i></a>。我强烈建议您下载tl; dr移动应用程序以快速参考。这在电话采访中帮助了我，我当时根本不知道该怎么做。</li>
<li><a class="link"   href="https://devhints.io/" >devhints.io<i class="fas fa-external-link-alt"></i></a>是各种备忘单的重要来源。</li>
<li>它看上去并不浮华，但是<a class="link"   href="https://www.tldp.org/LDP/abs/html/" >Advanced Bash脚本指南<i class="fas fa-external-link-alt"></i></a>是个巨大的财产库。</li>
</ul>
<h2 id="数据结构与算法"><a href="#数据结构与算法" class="headerlink" title="数据结构与算法"></a>数据结构与算法</h2><p>请记住，DevOps是<strong>开发</strong> +运营，因此您应该知道如何编码。选择一种您选择的语言（不是Bash-如果您不太喜欢，我建议使用Python）并练习，练习，练习。这不仅仅是寻找最佳解决方案-您必须与面试官清楚地交流问题的参数，传达您的思考过程，并计算不同算法的时间和空间复杂度。</p>
<h3 id="示例问题-1"><a href="#示例问题-1" class="headerlink" title="示例问题"></a>示例问题</h3><ul>
<li>从列表中删除所有重复项。</li>
<li>在包含除一个以外的所有可能IP的文件中找到丢失的IP。</li>
<li>对二叉树的所有节点进行排序。</li>
</ul>
<h3 id="活动-1"><a href="#活动-1" class="headerlink" title="活动"></a>活动</h3><ul>
<li><a class="link"   href="https://www.khanacademy.org/computing/computer-science/algorithms" >可汗学院<i class="fas fa-external-link-alt"></i></a>有一个非常好的数据结构和算法入门。它使用Javascript，但不要反对它。该课程是与汤姆·科门（Tom Cormen）合作完成的，汤姆·科门（Tom Cormen）是<a class="link"   href="https://en.wikipedia.org/wiki/Introduction_to_Algorithms" >一本有关数据结构和算法<i class="fas fa-external-link-alt"></i></a>的权威<a class="link"   href="https://en.wikipedia.org/wiki/Introduction_to_Algorithms" >著作<i class="fas fa-external-link-alt"></i></a>，绝对值得拥有。</li>
<li><a class="link"   href="https://leetcode.com/" >LeetCode<i class="fas fa-external-link-alt"></i></a>拥有大量的问题库，这些问题库与真实的面试问题非常接近。实际上，许多公司都会直接问您LeetCode问题！每种算法至少要回答10个简单和中等问题。当您解决了100个问题后，您就可以开始感到准备好了，并且实际上可以解决这些问题而无需查找任何内容。</li>
<li>每天在<a class="link"   href="https://codesignal.com/developers/interview-practice/" >CodeSignal<i class="fas fa-external-link-alt"></i></a>上<a class="link"   href="https://codesignal.com/developers/interview-practice/" >完成<i class="fas fa-external-link-alt"></i></a>面试准备材料。我建议使用Python，但您可以使用任何语言。将代码复制并粘贴到文件中，并使用Gi​​tHub对其进行版本控制。每天，仔细阅读您昨天做的代码，并详细记录下来。编写代码比阅读旧代码并记住发生的事情要容易。一两天后重新访问旧代码将迫使您综合所学的概念。</li>
<li>通过CodeSignal的Python Arcade进行工作。这是对所有重要的标准Python库的很好的浏览。有些练习确实没有达到目标，但总体而言，这是一个不错的播放列表。</li>
<li>研究动态规划，有向无环图，拓扑排序。</li>
<li>每个人都需要一点SQL。无需花费大量时间，但是您应该在<a class="link"   href="https://mode.com/" >Mode Analytics<i class="fas fa-external-link-alt"></i></a>上注册一个免费帐户，并利用其使用真实公共数据库的出色互动SQL教程。</li>
<li>随着您对编码技能的适应程度提高，请使用<a class="link"   href="https://www.pramp.com/" >Pramp<i class="fas fa-external-link-alt"></i></a>进行现场技术面试。这是重要的组成部分。像练习技术电话屏幕一样，您没有比技术电话屏幕更充分的准备。</li>
<li>请记住，唯一有价值的知识是您可以在白板或实时编码上在面试官面前展示的内容。如果您倾向于在高压情况下停滞不前，那么您就远非唯一的人了-请确保与同伴一起做很多练习。</li>
</ul>
<h3 id="参考-1"><a href="#参考-1" class="headerlink" title="参考"></a>参考</h3><ul>
<li><a class="link"   href="https://learnxinyminutes.com/docs/python3/" >LearnXinYminutes<i class="fas fa-external-link-alt"></i></a>是一个很棒的示例驱动的Python备忘单</li>
<li><a class="link"   href="https://gto76.github.io/python-cheatsheet/#main" >Python<i class="fas fa-external-link-alt"></i></a>备忘<a class="link"   href="https://gto76.github.io/python-cheatsheet/#main" >单<i class="fas fa-external-link-alt"></i></a>：最好的Python备忘单，尽管它很简洁</li>
<li><a class="link"   href="https://docs.python-guide.org/" >Hitchhiker的Python指南<i class="fas fa-external-link-alt"></i></a>：最佳的Python文档。</li>
<li>我的<a class="link"   href="https://github.com/chuckinator0/Projects/tree/master/scripts" >脚本GitHub存储库中<i class="fas fa-external-link-alt"></i></a>有很多示例文件，这些文件经过了详细记录，尽管实际上是无组织的！</li>
</ul>
<h2 id="系统设计"><a href="#系统设计" class="headerlink" title="系统设计"></a>系统设计</h2><p>系统设计面试可测试您的整体思维，架构复杂基础架构的能力以及沟通技巧。确保采用自上而下的设计方法，并具有清晰的基础结构图和DevOps注意事项。</p>
<h3 id="示例问题-2"><a href="#示例问题-2" class="headerlink" title="示例问题"></a>示例问题</h3><ul>
<li>设计一个基于微博消息的社交网络，如Twitter。您将如何确保不同地区的高可用性？</li>
</ul>
<h3 id="活动-2"><a href="#活动-2" class="headerlink" title="活动"></a>活动</h3><ul>
<li>消除<a class="link"   href="https://github.com/donnemartin/system-design-primer/blob/master/README.md" >系统设计入门知识<i class="fas fa-external-link-alt"></i></a>。一个有趣的事情是选择一个主题，然后请朋友选择另一个主题，然后花2个小时研究您的主题，然后再花一两个小时进行分享。轮流扮演面试官和受访者的角色。</li>
<li>阅读<a class="link"   href="https://landing.google.com/sre/sre-book/toc/index.html" >Google SRE图书<i class="fas fa-external-link-alt"></i></a>。这是现代DevOps必读的书。</li>
</ul>
<h2 id="解析"><a href="#解析" class="headerlink" title="解析"></a>解析</h2><p>系统管理员经常分析系统输出和日志，以获得系统见解和调试问题。使用grep，awk和sed之类的工具进行命令行解析是DevOps工具库的一项重要技能。</p>
<h3 id="示例问题-3"><a href="#示例问题-3" class="headerlink" title="示例问题"></a>示例问题</h3><ul>
<li>给定一个Apache Web服务器日志，每天有多少个请求？哪些IP是最常访问的访客？最需要哪些页面和图像？</li>
</ul>
<h3 id="活动-3"><a href="#活动-3" class="headerlink" title="活动"></a>活动</h3><ul>
<li>通过Insight的<a class="link"   href="https://github.com/InsightDataScience/Parsing-Workshop" >解析研讨会资料<i class="fas fa-external-link-alt"></i></a>中的<strong>练习进行练习</strong>。专注于awk。本章材料不错，是练习是最重要的部分。<a class="link"   href="https://github.com/InsightDataScience/Parsing-Workshop" ><i class="fas fa-external-link-alt"></i></a></li>
</ul>
<h3 id="参考-2"><a href="#参考-2" class="headerlink" title="参考"></a>参考</h3><ul>
<li><a class="link"   href="https://learnxinyminutes.com/docs/awk/" >LearnXinYminutes<i class="fas fa-external-link-alt"></i></a>：另一个出色的示例驱动参考-这次是awk。</li>
<li><a class="link"   href="https://regexr.com/" >Regexr<i class="fas fa-external-link-alt"></i></a>：最佳正则表达式参考。</li>
</ul>
<h2 id="DevOps工具"><a href="#DevOps工具" class="headerlink" title="DevOps工具"></a>DevOps工具</h2><p>Docker，Terraform和Kubernetes是必不可少的DevOps工具，并且彻底学习它们不会出错。您还应该知道至少一种CI&#x2F;CD工具，例如Jenkins。强烈建议您至少在三大云之一上学习这些工具：AWS，GCP或Azure。</p>
<h3 id="示例问题："><a href="#示例问题：" class="headerlink" title="示例问题："></a>示例问题：</h3><ul>
<li>使用Terraform将Docker应用程序部署到新的AWS EC2实例上。</li>
</ul>
<h3 id="活动-4"><a href="#活动-4" class="headerlink" title="活动"></a>活动</h3><ul>
<li>您需要学习Kubernetes。为了学习Kubernetes，您需要了解容器化和Docker。</li>
<li>通过<a class="link"   href="https://github.com/docker/labs/blob/master/beginner/readme.md" >Docker初学者<i class="fas fa-external-link-alt"></i></a>实验</li>
<li>通过<a class="link"   href="https://training.play-with-docker.com/" >Docker课堂<i class="fas fa-external-link-alt"></i></a>进行<a class="link"   href="https://training.play-with-docker.com/" >游戏<i class="fas fa-external-link-alt"></i></a></li>
<li>Kubernetes（概念：容器编排）</li>
<li>阅读<a class="link"   href="https://kubernetes.io/docs/concepts/overview/what-is-kubernetes/" >Kubernetes概念<i class="fas fa-external-link-alt"></i></a></li>
<li>通过<a class="link"   href="https://kubernetes.io/docs/tutorials/kubernetes-basics/" >Kubernetes基础<i class="fas fa-external-link-alt"></i></a>教程学习</li>
<li>若要进行更深入的潜水，请完成<a class="link"   href="https://www.katacoda.com/courses/kubernetes" >Katacoda课程<i class="fas fa-external-link-alt"></i></a></li>
<li>通过一两个入门性的<a class="link"   href="https://jenkins.io/doc/tutorials/build-a-python-app-with-pyinstaller/" >Jenkins教程<i class="fas fa-external-link-alt"></i></a>来学习有关CI &#x2F; CD的更多信息（概念：部署管道作为代码）。老实说，我对Jenkins知之甚少，所以我不了解更好的资源。</li>
<li>使用<a class="link"   href="https://www.vagrantup.com/intro/getting-started/index.html" >Vagrant<i class="fas fa-external-link-alt"></i></a>声明性地定义VM，然后使用<a class="link"   href="https://www.virtualbox.org/" >VirtualBox<i class="fas fa-external-link-alt"></i></a>或<a class="link"   href="https://www.packer.io/intro/getting-started/install.html" >Packer<i class="fas fa-external-link-alt"></i></a>将该VM导出为OVA文件（概念：不可变的基础结构，配置为代码）。</li>
<li>Terraform（概念：基础架构作为代码）</li>
<li>阅读Terragrunt的<a class="link"   href="https://blog.gruntwork.io/a-comprehensive-guide-to-terraform-b3d32832baca" >Terraform综合指南<i class="fas fa-external-link-alt"></i></a></li>
<li>通过<a class="link"   href="https://learn.hashicorp.com/terraform/" >Terraform教程进行工作<i class="fas fa-external-link-alt"></i></a></li>
<li>Ansible（概念：配置为代码）</li>
<li>观看<a class="link"   href="https://www.ansible.com/resources/videos/quick-start-video" >介绍视频<i class="fas fa-external-link-alt"></i></a></li>
<li>对于一些动手实验，我认为Linux Academy可能是最好的选择（不是免费的）</li>
<li>进行<a class="link"   href="https://docs.honeycomb.io/learning-about-observability/quick-start/" >Honeycomb Quickstart，<i class="fas fa-external-link-alt"></i></a>以提供一种监视&#x2F;跟踪工具（概念：全栈跟踪）</li>
<li>完成<a class="link"   href="https://learn.hashicorp.com/consul/" >Consul教程<i class="fas fa-external-link-alt"></i></a>（概念：服务发现）。</li>
<li>完成<a class="link"   href="https://learn.hashicorp.com/vault/" >Vault教程<i class="fas fa-external-link-alt"></i></a>（概念：企业级机密管理）</li>
<li>玩<a class="link"   href="https://linkerd.io/2/getting-started/" >Linkerd<i class="fas fa-external-link-alt"></i></a>（概念：服务网格）</li>
<li>Apache Kafka（概念：容错，高吞吐量事件流）</li>
<li>适用于Apache Kafka的无耻插件—  在该网站上免费找到<a class="link"   href="https://cloud.contentraven.com/confluent/self-userpackage" >Confluent培训<i class="fas fa-external-link-alt"></i></a>课程，以获取有关Kafka基础知识的不错的视频集</li>
<li>查看<a class="link"   href="https://github.com/confluentinc/training-operations-src" >操作培训仓库，<i class="fas fa-external-link-alt"></i></a>以建立自己的本地docker-组成Kafka集群，并开始使用Kafka</li>
</ul>
<h3 id="参考-3"><a href="#参考-3" class="headerlink" title="参考"></a>参考</h3><ul>
<li>Ansible：<a class="link"   href="https://docs.ansible.com/ansible/latest/user_guide/index.html" >用户指南<i class="fas fa-external-link-alt"></i></a>。</li>
<li>想在Kubernetes中做一些特定的事情吗？检查文档的“ <a class="link"   href="https://kubernetes.io/docs/tasks/" >任务”<i class="fas fa-external-link-alt"></i></a>部分。有许多特定于任务的指南。</li>
<li>Docker的“demo”(<a class="link"   href="https://docs.docker.com/samples/)%E9%A1%B5%E9%9D%A2%E6%8F%90%E4%BE%9B%E4%BA%86%E5%AE%8C%E6%95%B4%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F%E7%9A%84%E8%89%AF%E5%A5%BD%E7%A4%BA%E4%BE%8B%E4%BB%A5%E5%8F%8A%E4%B8%80%E4%BA%9B%E5%AE%9E%E7%94%A8%E7%9A%84%E6%95%99%E7%A8%8B%E3%80%82%E6%88%91%E5%96%9C%E6%AC%A2[Django" >https://docs.docker.com/samples/)页面提供了完整应用程序的良好示例以及一些实用的教程。我喜欢[Django<i class="fas fa-external-link-alt"></i></a> + Postgres](<a class="link"   href="https://docs.docker.com/compose/django/)%E7%A4%BA%E4%BE%8B%E3%80%82" >https://docs.docker.com/compose/django/)示例。<i class="fas fa-external-link-alt"></i></a></li>
</ul>
<h2 id="其他具有高价值物品"><a href="#其他具有高价值物品" class="headerlink" title="其他具有高价值物品"></a>其他具有高价值物品</h2><h3 id="活动-5"><a href="#活动-5" class="headerlink" title="活动"></a>活动</h3><ul>
<li>定期收听《软件工程日报》(<a class="link"   href="https://softwareengineeringdaily.com/)%E6%92%AD%E5%AE%A2%E3%80%82%E5%88%B0%E7%9B%AE%E5%89%8D%E4%B8%BA%E6%AD%A2%EF%BC%8C%E8%BF%99%E6%98%AF%E4%BF%9D%E6%8C%81DevOps%E4%B8%96%E7%95%8C%E8%84%89%E6%90%8F%E7%9A%84%E6%9C%80%E4%BD%B3%E6%96%B9%E6%B3%95%E3%80%82%E5%BB%BA%E8%AE%AE%E6%82%A8%E5%AE%89%E8%A3%85%E8%AF%A5%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F%EF%BC%8C%E4%BB%A5%E4%BE%BF%E6%82%A8%E5%8F%AF%E4%BB%A5%E8%BD%BB%E6%9D%BE%E6%90%9C%E7%B4%A2%E6%97%A7%E5%89%A7%E9%9B%86%EF%BC%8C%E4%BB%A5%E6%B7%B1%E5%85%A5%E4%BA%86%E8%A7%A3%E6%AD%A3%E5%9C%A8%E7%A0%94%E7%A9%B6%E7%9A%84%E6%8A%80%E6%9C%AF%E5%92%8C%E6%A6%82%E5%BF%B5%E3%80%82%E5%9C%A8%E2%80%9C" >https://softwareengineeringdaily.com/)播客。到目前为止，这是保持DevOps世界脉搏的最佳方法。建议您安装该应用程序，以便您可以轻松搜索旧剧集，以深入了解正在研究的技术和概念。在“<i class="fas fa-external-link-alt"></i></a> DevOps工具”部分中，我为每个工具背后的概念提供了关键字。您可以使用这些关键字在SEdaily中搜索相关的播客。</li>
<li>阅读有关看板(<a class="link"   href="https://www.atlassian.com/agile/kanban/boards)%E7%9A%84%E7%9F%A5%E8%AF%86%EF%BC%8C%E5%B9%B6%E4%BD%BF%E7%94%A8%E5%AE%83%E4%BB%AC%E6%9D%A5%E5%A2%9E%E5%BC%BA%E6%82%A8%E7%9A%84%E6%B3%A8%E6%84%8F%E5%8A%9B%E5%92%8C%E7%94%9F%E4%BA%A7%E5%8A%9B%E3%80%82GitHub%E6%9C%89%E4%B8%80%E4%B8%AA%E7%AE%80%E5%8D%95%E7%9A%84%E7%9C%8B%E6%9D%BF%EF%BC%8C%E6%82%A8%E5%8F%AF%E4%BB%A5%E4%BD%BF%E7%94%A8%E5%AE%83%E6%9D%A5%E4%BF%9D%E6%8C%81%E7%94%9F%E4%BA%A7%E5%8A%9B%E3%80%82%E6%88%91%E4%B8%AA%E4%BA%BA%E4%B9%9F%E5%96%9C%E6%AC%A2[%E5%AD%90%E5%BC%B9%E5%BC%8F%E6%97%A5%E8%AE%B0](https://www.youtube.com/watch?v=fm15cmYU0IM)%E5%92%8C%5BPomodoro%E6%96%B9%E6%B3%95%5D(https://en.wikipedia.org/wiki/Pomodoro_Technique)%E3%80%82" >https://www.atlassian.com/agile/kanban/boards)的知识，并使用它们来增强您的注意力和生产力。GitHub有一个简单的看板，您可以使用它来保持生产力。我个人也喜欢[子弹式日记](https://www.youtube.com/watch?v=fm15cmYU0IM)和[Pomodoro方法](https://en.wikipedia.org/wiki/Pomodoro_Technique)。<i class="fas fa-external-link-alt"></i></a></li>
<li>深入了解一些您喜欢的工具的技术细节。从文档开始。配对并分享技术深层次的收获。</li>
<li>考虑为Linux Academy或acloudguru课程付费以获得AWS，GCP或Azure认证。</li>
</ul>
<h3 id="参考-4"><a href="#参考-4" class="headerlink" title="参考"></a>参考</h3><ul>
<li>Digital Ocean有很棒的教程。当我使用Google时，我倾向于首先尝试“ <research topic> site：digitalocean.com”。当您第一次学习手动安装某些东西时，这特别有用。</li>
</ul>
]]></content>
      <tags>
        <tag>DevOps</tag>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title>容器和配置：3个DevOps工具以及对应的速查表</title>
    <url>/2019/10/15/%E5%AE%B9%E5%99%A8%E5%92%8C%E9%85%8D%E7%BD%AE3%E4%B8%AADevOps%E5%B7%A5%E5%85%B7%E4%BB%A5%E5%8F%8A%E5%AF%B9%E5%BA%94%E7%9A%84%E9%80%9F%E6%9F%A5%E8%A1%A8/</url>
    <content><![CDATA[<h3 id="Puppet，Docker和Ansible速查表有助于简化DevOps的实现。"><a href="#Puppet，Docker和Ansible速查表有助于简化DevOps的实现。" class="headerlink" title="Puppet，Docker和Ansible速查表有助于简化DevOps的实现。"></a>Puppet，Docker和Ansible速查表有助于简化DevOps的实现。</h3><p><img  
                     lazyload
                     alt="image"
                     data-src="https://dzone.com/storage/temp/12567617-tools.jpg"
                      alt="工具"
                ></p>
<p><em>这些DevOps工具使每个DevOps实施都更加容易。</em></p>
<h2 id="Puppet"><a href="#Puppet" class="headerlink" title="Puppet"></a><strong>Puppet</strong></h2><p>Puppet是使用最广泛的DevOps工具之一。它通过支持版本控制，自动测试和连续交付的功能，使交付和发布技术更改的速度更快，更频繁。它可以管理多台服务器并执行系统配置。出于多种原因，Puppet是当今IT行业中最流行的配置管理工具之一。</p>
<p>Puppet提供了更多的平台支持。例如，以下是您可以使用Puppet管理的平台：</p>
<ul>
<li>Debian &#x2F; Ubuntu</li>
<li>Microsoft Windows</li>
<li>Redhat，Centos，Fedora</li>
<li>Mac OS X Server</li>
</ul>
<p>与其他配置管理工具不同，Puppet在任何系统上部署配置后，都会在一定间隔后继续验证那些配置。您也可以修改这些间隔。</p>
<h3 id="了解Puppet架构和Puppet组件"><a href="#了解Puppet架构和Puppet组件" class="headerlink" title="了解Puppet架构和Puppet组件"></a><strong>了解Puppet架构和Puppet组件</strong></h3><p><img  
                     lazyload
                     alt="image"
                     data-src="https://dzone.com/storage/temp/12568247-how-does-puppet-work-1.png"
                      alt="Puppet"
                ></p>
<p><strong>Puppet Master：</strong> Puppet Master是处理所有与配置有关的信息的工具。Puppet Master在指定的服务器上运行，并管理部署和配置。</p>
<p><strong>Puppet Agent：</strong> Puppet代理在客户端上运行。Puppet代理是由Puppet Master维护和管理的实际工作机器。</p>
<p><strong>Config Repository：</strong> Config Repository是存储与服务器相关的配置和节点的位置。可以在需要时随时将其拉出。</p>
<p><strong>Facts</strong>：它们是全局变量，包含与机器有关的详细信息，例如操作系统和网络接口。它们用于分析任何节点的当前状态。</p>
<p><strong>Catalog</strong>：将用Puppet编写的所有配置都转换为编译后的格式，称为目录，然后将这些目录应用于目标系统。</p>
<p><strong>Manifests</strong>：清单是声明所有需要检查和更改的所有资源（即服务，程序包或文件）的文件。清单的扩展名为“ .pp”。</p>
<p><strong>Module</strong>：模块是清单文件的集合，这些清单文件的组织方式便于共享文件。</p>
<p><strong>Class</strong>：与其他编程语言一样，Puppet也具有用于更好地组织代码的类，从而使阅读和理解代码以及重用部分代码更加容易。</p>
<p><strong>Resources</strong>：在Puppet代码中，是通过声明资源定义的编码块，其中资源可以表示包，文件，用户，命令。</p>
<p><strong>Nodes</strong>：要在其上安装P代理的所有要管理的服务器或客户端都称为节点。</p>
<h2 id="Docker"><a href="#Docker" class="headerlink" title="Docker"></a><strong>Docker</strong></h2><p>Docker是高端DevOps工具，它允许在多个系统上构建，交付和运行分布式应用程序。它有助于快速组装应用程序，通常适用于容器管理。</p>
<p>使用Docker容器时的一些重要术语包括：</p>
<ul>
<li><strong>Layer</strong>：只读文件以配置系统</li>
<li><strong>Image</strong>：只读层，它是镜像的基础</li>
<li><strong>Container</strong>：镜像的可运行实例</li>
<li><strong>Registry&#x2F;hub</strong>: 镜像存放的中央位置</li>
<li><strong>Docker machine</strong>：运行Docker容器的虚拟机</li>
<li><strong>Docker-compose</strong>：一个虚拟机，可将多个容器作为系统运行</li>
</ul>
<p><img  
                     lazyload
                     alt="image"
                     data-src="https://dzone.com/storage/temp/12568254-docker-cheat-sheet.jpg"
                      alt="Docker速查表"
                ></p>
<h2 id="Ansible"><a href="#Ansible" class="headerlink" title="Ansible"></a><strong>Ansible</strong></h2><p>Ansible是一种开源IT配置工具，可帮助自动执行服务器和云配置，配置管理和应用程序部署。它可以管理复杂的部署并提高生产率，并有助于自动化应用程序的整个生命周期。 </p>
<p>让我们考虑一种情况，其中系统管理员负责处理公司的基础结构。有九台服务器，其中五台服务器充当Web服务器，五台服务器充当数据库服务器。此外，您想在Web服务器上安装Tomcat，在数据库服务器上安装MySQL。在传统方法中，系统管理员将必须手动管理服务器，安装所需的软件并更改配置，以及分别管理每个服务器上的服务。Ansile通过自动执行此过程的大部分步骤来帮助解决这一问题。<br><img  
                     lazyload
                     alt="image"
                     data-src="https://dzone.com/storage/temp/12568248-ansible-cheat-sheet-3.jpg"
                      alt="Ansible速查表"
                ></p>
<h3 id="Ansible中的重要术语"><a href="#Ansible中的重要术语" class="headerlink" title="Ansible中的重要术语"></a><strong>Ansible中的重要术语</strong></h3><p><strong>Controller Machine</strong>：这是Ansible的安装位置。控制器机器有助于在您管理的服务器上启用配置。</p>
<p><strong>Inventory</strong>：基本上，这是一个初始化文件，其中包含有关您所管理的服务器的信息。</p>
<p><strong>Playbook</strong>：脚本化的有组织的单位，用于定义服务器配置管理的自动化作业。</p>
<p><strong>Task</strong>：任务块定义了要在服务器上执行的单个过程，例如安装软件包。</p>
<p><strong>Nagios</strong>：此工具有助于监视IT基础结构。它能够确定错误并在标准网络，服务器和日志监视系统的帮助下进行纠正。</p>
]]></content>
      <tags>
        <tag>devops</tag>
      </tags>
  </entry>
  <entry>
    <title>将Python脚本变成漂亮的ML工具</title>
    <url>/2019/10/08/%E5%B0%86Python%E8%84%9A%E6%9C%AC%E5%8F%98%E6%88%90%E6%BC%82%E4%BA%AE%E7%9A%84ML%E5%B7%A5%E5%85%B7/</url>
    <content><![CDATA[<h2 id="将Python脚本变成漂亮的ML工具"><a href="#将Python脚本变成漂亮的ML工具" class="headerlink" title="将Python脚本变成漂亮的ML工具"></a>将Python脚本变成漂亮的ML工具</h2><p>Streamlit，这是专为ML工程师打造的应用程序框架<br>Adrien Treuille<br><img  
                     lazyload
                     alt="image"
                     data-src="https://img.hacpai.com/file/2019/10/1Mbn2SxozueUkGKPW1NJkOw-342c5971.gif"
                      alt="1Mbn2SxozueUkGKPW1NJkOw.gif"
                ><br>在300行Python中使用实时神经网络推理对语义搜索引擎进行编码。</p>
<p>以我的经验，每个不平凡的机器学习项目最终都将使用漏洞缠身且无法维护的内部工具进行缝合。这些工具（通常是Jupyter笔记本和Flask应用程序的拼凑而成）难以部署，需要对客户端-服务器体系结构进行推理，并且无法与Tensorflow GPU会话等机器学习结构很好地集成。</p>
<p>我首先在卡内基·梅隆大学（Carnegie Mellon），然后在伯克利（Berkeley），谷歌X（Google X），以及后来在Zoox构建自动机器人时就看到了。这些工具通常是在Jupyter笔记本电脑中诞生的：传感器校准工具，模拟比较应用程序，LIDAR对准应用程序，场景重播工具等等。<br>随着工具重要性的提高，项目经理介入了。过程萌芽了。要求开花。这些单独的项目孕育成脚本，并逐渐成为繁琐的维护噩梦。</p>
<p><img  
                     lazyload
                     alt="image"
                     data-src="https://img.hacpai.com/file/2019/10/15BWfcoBn2yypksY8QuKA-9aaa7cb1.png"
                      alt="15BWfcoBn2yypksY8QuKA.png"
                ><br>机器学习工程师的临时应用构建流程。</p>
<p>当工具变得至关重要时，我们召集了<strong>工具团队</strong>。他们写了流利的Vue和React。他们在笔记本电脑上贴上声明性框架的标签。他们有一个设计过程：</p>
<p><img  
                     lazyload
                     alt="image"
                     data-src="https://img.hacpai.com/file/2019/10/1hNO5NYKjcsEV7jIpEaz8Eg-7c517413.png"
                      alt="1hNO5NYKjcsEV7jIpEaz8Eg.png"
                ><br>工具团队的应用程序构建流程整洁。</p>
<p>太棒了!但是这些工具都需要新功能，例如每周一次。工具团队正在支持其他十个项目。他们会说：“我们将在两个月内再次更新您的工具。”<br>因此，我们回到了构建自己的工具，部署Flask应用程序，编写HTML，CSS和JavaScript，以及尝试对从笔记本到样式表的所有内容进行版本控制的过程。因此，我的老Google X朋友Thiago Teixeira和我开始思考以下问题：<strong>如果我们能够使构建工具像编写Python脚本一样容易，该怎么办？</strong><br>我们希望机器学习工程师无需工具团队就能创建精美的应用程序。这些内部工具应作为ML工作流程的自然副产品而出现。写这样的工具应该感觉像训练神经网络或Jupyter执行即席分析！同时，我们希望保留功能强大的应用程序框架的所有灵活性。我们想要创建工程师可以炫耀的漂亮，高性能的工具。基本上，我们想要这样：</p>
<p><img  
                     lazyload
                     alt="image"
                     data-src="https://img.hacpai.com/file/2019/10/1gdD55KRcRVRvfjsQLsXA-6c78e2d5.png"
                      alt="1gdD55KRcRVRvfjsQLsXA.png"
                ><br>Streamlit应用程序构建流程。</p>
<p>我们拥有一个了不起的Beta社区，其中包括来自Uber，Twitter，Stitch Fix和Dropbox的工程师，我们工作了一年的时间来创建Streamlit，这是一个针对ML工程师的完全免费和开源的应用程序框架。对于每个原型，Streamlit的核心原理变得越来越简单。他们是：<br><strong>＃1：拥抱Python脚本。</strong>Streamlit应用程序实际上只是从上到下运行的脚本。没有隐藏状态。您可以使用函数调用来分解代码。如果您知道如何编写Python脚本，则可以编写Streamlit应用程序。例如，这是您写入屏幕的方式：</p>
<pre class="line-numbers language-none"><code class="language-none">导入streamlit为st 
st.write（&#39;Hello，world！&#39;）<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>

<p><img  
                     lazyload
                     alt="image"
                     data-src="https://img.hacpai.com/file/2019/10/1VNqEOqFJQl5fB7Z0ed5lMw-83fa2837.png"
                      alt="1VNqEOqFJQl5fB7Z0ed5lMw.png"
                ></p>
<p>很高兴见到你。<br><strong>＃2：将小部件视为变量。</strong>Streamlit中没有回调！每次交互都只是从上到下重新运行脚本。这种方法可以产生非常干净的代码：<br>导入streamlit为st </p>
<pre class="line-numbers language-none"><code class="language-none">x &#x3D; st.slider（&#39;x&#39;）
st.write（x，&#39;squared is&#39;，x * x）<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<p><img  
                     lazyload
                     alt="image"
                     data-src="https://img.hacpai.com/file/2019/10/1h8BwonRrhnh3KtjO5cDEcA-0f122826.png"
                      alt="1h8BwonRrhnh3KtjO5cDEcA.png"
                ><br>包含三行代码的交互式Streamlit应用程序。</p>
<p><strong>＃3：重用数据和计算。</strong>如果您下载大量数据或执行复杂的计算该怎么办？关键是跨运行安全地重用信息。Streamlit引入了一种缓存原语，其行为类似于持久的默认情况下不可变的数据存储，可让Streamlit应用程序安全，轻松地重用信息。例如，此代码<strong>下载数据一次</strong>从Udacity自驾车项目，得到一个简单，快捷的应用程序：</p>
<pre class="line-numbers language-none"><code class="language-none">导入 streamlit as st
将熊猫作为 pd 导入

＃重复使用这些数据！
read_and_cache_csv &#x3D; st.cache（pd.read_csv）

BUCKET  &#x3D;  “ https:&#x2F;&#x2F;streamlit-self-driving.s3-us-west-2.amazonaws.com&#x2F; ”
数据&#x3D; read_and_cache_csv（BUCKET  +  “ labels.csv.gz ”，NROWS &#x3D; 1000）
wanted_label &#x3D; st.selectbox（&#39;过滤到：&#39;，[ &#39; car &#39;，&#39; truck &#39; ]）
st.write（数据[数据。标签&#x3D;&#x3D;所需标签]）<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>原始代码查看：<a class="link"   href="https://gist.github.com/treuille/c633dc8bc86efaa98eb8abe76478aa81/raw/2019640b6a9ff5da5ab6d5b11b3345ddc764b285/cache_example.py" >https://gist.github.com/treuille/c633dc8bc86efaa98eb8abe76478aa81/raw/2019640b6a9ff5da5ab6d5b11b3345ddc764b285/cache_example.py<i class="fas fa-external-link-alt"></i></a></p>
<p>使用st.cache在Streamlit运行中保留数据。要运行此代码，请按照以下说明进行操作。</p>
<p><img  
                     lazyload
                     alt="image"
                     data-src="https://img.hacpai.com/file/2019/10/1vLvk0xZUVEx1GcrzYhWxXQ-b58f56c0.png"
                      alt="1vLvk0xZUVEx1GcrzYhWxXQ.png"
                ></p>
<p>运行上面的st.cache示例的输出。</p>
<p>简而言之，Streamlit的工作方式如下：</p>
<ol>
<li>对于每个用户交互，整个脚本都是从头开始运行的。<br>2.Streamlit在给定小部件状态的情况下为每个变量分配一个最新值。<br>3.缓存允许Streamlit跳过冗余数据获取和计算。<br>或在图片中：<br><img  
                     lazyload
                     alt="image"
                     data-src="https://img.hacpai.com/file/2019/10/1l4gxFYEZnRhysQQWIVJgA-afdf8c2f.png"
                      alt="1l4gxFYEZnRhysQQWIVJgA.png"
                ><br>用户事件触发Streamlit从头开始重新运行脚本。只有高速缓存在运行之间持续存在。</li>
</ol>
<p>如果这听起来很有趣，那么您可以立即尝试！赶紧运行：</p>
<pre class="line-numbers language-none"><code class="language-none">$ pip install --upgrade streamlit 
$ streamlit hello<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
   <pre class="line-numbers language-none"><code class="language-none">现在，您可以在浏览器中查看Streamlit应用程序。
本地URL：
http:&#x2F;&#x2F;localhost:8501 
外网URL：
http:&#x2F;&#x2F;10.0.1.29:8501<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>这将自动弹出打开一个指向您本地Streamlit应用程序的Web浏览器。如果没有，只需单击链接。</p>
<p><img  
                     lazyload
                     alt="image"
                     data-src="https://img.hacpai.com/file/2019/10/1Btm7O0pYqAkenXUPECLw-6ba5c610.png"
                      alt="1Btm7O0pYqAkenXUPECLw.png"
                ></p>
<p>要查看类似此分形动画的更多示例，请从命令行运行streamlit hello。</p>
<hr>
<p>好。你从分形玩回来了吗？这些可能会令人着迷。<br>这些想法的简单性不会阻止您使用Streamlit创建令人难以置信的丰富实用的应用程序。在Zoox和Google X期间，我看着无人驾驶汽车项目激增为数以十亿计的视觉数据，需要对其进行搜索和理解，包括在图像上运行模型以比较性能。我见过的每个自动驾驶汽车项目最终都让整个团队都在使用这种工具。<br>在Streamlit中构建这样的工具很容易。这个Streamlit演示使您可以在整个Udacity自动驾驶汽车照片数据集中执行语义搜索，可视化人类注释的地面真相标签，并从应用程序内部实时运行完整的神经网络（YOLO） [1]。<br><img  
                     lazyload
                     alt="image"
                     data-src="https://img.hacpai.com/file/2019/10/1p3XPmx0TUIuMmQQa4mjHQ-81b29b26.gif"
                      alt="1p3XPmx0TUIuMmQQa4mjHQ.gif"
                ></p>
<p>这个300行的Streamlit演示结合了语义视觉搜索和交互式神经网络推理。</p>
<h2 id="整个应用程序是一个完全自包含的300行Python脚本，其中大多数是机器学习代码。实际上，整个应用程序中只有23个Streamlit调用。您可以立即自己运行它！"><a href="#整个应用程序是一个完全自包含的300行Python脚本，其中大多数是机器学习代码。实际上，整个应用程序中只有23个Streamlit调用。您可以立即自己运行它！" class="headerlink" title="整个应用程序是一个完全自包含的300行Python脚本，其中大多数是机器学习代码。实际上，整个应用程序中只有23个Streamlit调用。您可以立即自己运行它！"></a>整个应用程序是一个完全自包含的300行Python脚本，其中大多数是机器学习代码。实际上，整个应用程序中只有23个Streamlit调用。您可以立即自己运行它！<br><pre class="line-numbers language-none"><code class="language-none">$ pip install --upgrade streamlit opencv-python 
$ streamlit run
https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;streamlit&#x2F;demo-self-driving&#x2F;master&#x2F;app.py<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></h2><p>在与机器学习团队合作进行自己的项目时，我们意识到这些简单的想法产生了许多重要的好处：<br><strong>Streamlit应用程序是纯Python文件。</strong>因此，您可以在Streamlit中使用自己喜欢的编辑器和调试器。</p>
<p><img  
                     lazyload
                     alt="image"
                     data-src="https://img.hacpai.com/file/2019/10/14KMALKoeS3TUSBn0ryzYg-d7bc9c09.png"
                      alt="14KMALKoeS3TUSBn0ryzYg.png"
                ></p>
<p>我最喜欢的用于编写Streamlit应用程序的布局在左侧是VSCode，在右侧是Chrome。</p>
<p><strong>纯Python脚本可与Git</strong>和其他源代码控制软件<strong>无缝配合</strong>，包括提交，拉取请求，问题和注释。因为Streamlit的基础语言是纯Python，所以您可以免费获得这些出色的协作工具的所有好处。</p>
<p><img  
                     lazyload
                     alt="image"
                     data-src="https://img.hacpai.com/file/2019/10/0pY7e7BLPI2atTV-4bf401a4.png"
                      alt="0pY7e7BLPI2atTV.png"
                ></p>
<p>因为Streamlit应用程序只是Python脚本，所以您可以使用Git轻松地对其进行版本控制。</p>
<p><strong>Streamlit提供了即时模式实时编码环境。</strong>当Streamlit检测到源文件更改时，只需单击始终重新运行。</p>
<p><img  
                     lazyload
                     alt="image"
                     data-src="https://img.hacpai.com/file/2019/10/1P3vtLkHGeCRHGu5B5ifg-0d278a81.png"
                      alt="1P3vtLkHGeCRHGu5B5ifg.png"
                ><br>单击“始终重新运行”以启用实时编码。</p>
<p><strong>缓存简化了计算管道的设置。</strong>令人惊讶的是，链接缓存的功能会自动创建高效的计算管道！考虑以下代码，这些代码是从我们的Udacity演示改编而成的：</p>
<pre class="line-numbers language-none"><code class="language-none">import streamlit as st
import pandas as pd

@st.cache
def load_metadata():
    DATA_URL &#x3D; &quot;https:&#x2F;&#x2F;streamlit-self-driving.s3-us-west-2.amazonaws.com&#x2F;labels.csv.gz&quot;
    return pd.read_csv(DATA_URL, nrows&#x3D;1000)

@st.cache
def create_summary(metadata, summary_type):
    one_hot_encoded &#x3D; pd.get_dummies(metadata[[&quot;frame&quot;, &quot;label&quot;]], columns&#x3D;[&quot;label&quot;])
    return getattr(one_hot_encoded.groupby([&quot;frame&quot;]), summary_type)()

# Piping one st.cache function into another forms a computation DAG.
summary_type &#x3D; st.selectbox(&quot;Type of summary:&quot;, [&quot;sum&quot;, &quot;any&quot;])
metadata &#x3D; load_metadata()
summary &#x3D; create_summary(metadata, summary_type)
st.write(&#39;## Metadata&#39;, metadata, &#39;## Summary&#39;, summary)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>源码来自：<a class="link"   href="https://gist.github.com/treuille/ac7755eb37c63a78fac7dfef89f3517e/raw/568cc2d190c2f96b2a8a7aaf6fa444d68bde630e/caching_DAG_example.py" >https://gist.github.com/treuille/ac7755eb37c63a78fac7dfef89f3517e/raw/568cc2d190c2f96b2a8a7aaf6fa444d68bde630e/caching_DAG_example.py<i class="fas fa-external-link-alt"></i></a></p>
<p>Streamlit中的简单计算管道。要运行此代码，请按照以下说明进行操作。<br>基本上，管道是load_metadata→create_summary。每次运行脚本时，<strong>Streamlit只会重新计算需要正确答案的管道子集。</strong>酷！</p>
<p><img  
                     lazyload
                     alt="image"
                     data-src="https://img.hacpai.com/file/2019/10/1e0z12L0pXYlCE5OM3n6LA-7b6f242f.png"
                      alt="1e0z12L0pXYlCE5OM3n6LA.png"
                ><br>为了使应用程序具有高性能，Streamlit仅重新计算更新UI所需的任何内容。</p>
<p><strong>Streamlit是为GPU构建的。</strong>Streamlit允许直接访问机器级原语，例如TensorFlow和PyTorch，并补充了这些库。例如，在此演示中，Streamlit的缓存存储了整个NVIDIA名人GAN [2]。当用户更新滑块时，这种方法几乎可以实现瞬时推断。</p>
<p><img  
                     lazyload
                     alt="image"
                     data-src="https://img.hacpai.com/file/2019/10/1188SkUE1onGcpQIuSZsiMQ-644dc8b5.gif"
                      alt="1188SkUE1onGcpQIuSZsiMQ.gif"
                ><br>该Streamlit应用程序使用管韶博的TL-GAN [3] 演示了NVIDIA名人GAN [2]模型。</p>
<p><strong>Streamlit是一个免费的开源库，而不是专有的Web应用程序。</strong>您可以在不与我们联系的情况下在本地提供Streamlit应用程序。您甚至可以在没有Internet连接的笔记本电脑上本地运行Streamlit！此外，现有项目可以逐步采用Streamlit。</p>
<p><img  
                     lazyload
                     alt="image"
                     data-src="https://img.hacpai.com/file/2019/10/1nyOMWYNcM9mPTU5mHf1CxQ-fa82969b.png"
                      alt="1nyOMWYNcM9mPTU5mHf1CxQ.png"
                ><br>有几种方法逐渐采用Streamlit。（图标由fullvector &#x2F; Freepik提供。）<br>这只是您使用Streamlit可以做的事情的表面。</p>
<p>Streamlit最令人兴奋的方面之一是如何将这些原语轻松地组合成看起来像脚本的复杂应用程序。关于我们的架构如何工作以及我们计划的功能，我们还有很多话要说，但是我们将其保存下来以备将来之用。</p>
<p><img  
                     lazyload
                     alt="image"
                     data-src="https://img.hacpai.com/file/2019/10/1wmwwsWkOHzsYLe8pB2RzBA-33e9fe5c.png"
                      alt="1wmwwsWkOHzsYLe8pB2RzBA.png"
                ><br>Streamlit组件的框图。更多即将推出！</p>
<p>我们很高兴能最终与社区今天共享Streamlit，并看到你们所有人用它构建的东西。我们希望您会发现将Python脚本转换为漂亮的ML应用变得轻松而愉快。</p>
<p>感谢Amanda Kelly，Thiago Teixeira，TC Ricks，Seth Weidman，Regan Carey，Beverly Treuille，GenevièveWachtell和Barney Pell在本文中提供的有益帮助。</p>
<p>参考文献：<br>[1] J. Redmon and A. Farhadi, *YOLOv3: An Incremental Improvement *(2018), arXiv.<br>[2] T. Karras, T. Aila, S. Laine, and J. Lehtinen, <em>Progressive Growing of GANs for Improved Quality, Stability, and Variation</em> (2018), ICLR.<br>[3] S. Guan, *Controlled image synthesis and editing using a novel TL-GAN model *(2018), Insight Data Science Blog.</p>
<p>感谢TC Ricks ，Amanda Kelly 和Amanda Kelly 。 </p>
]]></content>
      <tags>
        <tag>机器学习</tag>
      </tags>
  </entry>
  <entry>
    <title>快速shell安装docker-ce</title>
    <url>/2019/09/19/%E5%BF%AB%E9%80%9Fshell%E5%AE%89%E8%A3%85dockerce/</url>
    <content><![CDATA[<p>我们以18.09.8为例，以下为详细shell：</p>
<pre class="line-numbers language-none"><code class="language-none">#!&#x2F;bin&#x2F;sh
set -e

CHANNEL&#x3D;&quot;stable&quot;

docker_version&#x3D;18.09.8
apt_url&#x3D;&quot;https:&#x2F;&#x2F;apt.dockerproject.org&quot;
yum_url&#x3D;&quot;https:&#x2F;&#x2F;yum.dockerproject.org&quot;
gpg_fingerprint&#x3D;&quot;9DC858229FC7DD38854AE2D88D81803C0EBFCD88&quot;

key_servers&#x3D;&quot;
ha.pool.sks-keyservers.net
pgp.mit.edu
keyserver.ubuntu.com
&quot;

rhel_repos&#x3D;&quot;
rhel-7-server-extras-rpms
rhui-REGION-rhel-server-extras
rhui-rhel-7-server-rhui-extras-rpms
rhui-rhel-7-for-arm-64-extras-rhui-rpms
&quot;

mirror&#x3D;&#39;&#39;
while [ $# -gt 0 ]; do
	case &quot;$1&quot; in
		--mirror)
			mirror&#x3D;&quot;$2&quot;
			shift
			;;
		*)
			echo &quot;Illegal option $1&quot;
			;;
	esac
	shift $(( $# &gt; 0 ? 1 : 0 ))
done

case &quot;$mirror&quot; in
	AzureChinaCloud)
		apt_url&#x3D;&quot;https:&#x2F;&#x2F;mirror.azure.cn&#x2F;docker-engine&#x2F;apt&quot;
		yum_url&#x3D;&quot;https:&#x2F;&#x2F;mirror.azure.cn&#x2F;docker-engine&#x2F;yum&quot;
		;;
	Aliyun)
		apt_url&#x3D;&quot;https:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;docker-engine&#x2F;apt&quot;
		yum_url&#x3D;&quot;https:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;docker-engine&#x2F;yum&quot;
		;;
esac

command_exists() &#123;
	command -v &quot;$@&quot; &gt; &#x2F;dev&#x2F;null 2&gt;&amp;1
&#125;

echo_docker_as_nonroot() &#123;
	if command_exists docker &amp;&amp; [ -e &#x2F;var&#x2F;run&#x2F;docker.sock ]; then
		(
			set -x
			$sh_c &#39;docker version&#39;
		) || true
	fi
	your_user&#x3D;your-user
	[ &quot;$user&quot; !&#x3D; &#39;root&#39; ] &amp;&amp; your_user&#x3D;&quot;$user&quot;
	# intentionally mixed spaces and tabs here -- tabs are stripped by &quot;&lt;&lt;-EOF&quot;, spaces are kept in the output
	cat &lt;&lt;-EOF

	If you would like to use Docker as a non-root user, you should now consider
	adding your user to the &quot;docker&quot; group with something like:

	  sudo usermod -aG docker $your_user

	Remember that you will have to log out and back in for this to take effect!

	WARNING: Adding a user to the &quot;docker&quot; group will grant the ability to run
	         containers which can be used to obtain root privileges on the
	         docker host.
	         Refer to https:&#x2F;&#x2F;docs.docker.com&#x2F;engine&#x2F;security&#x2F;security&#x2F;#docker-daemon-attack-surface
	         for more information.

	EOF
&#125;

# Check if this is a forked Linux distro
check_forked() &#123;

	# Check for lsb_release command existence, it usually exists in forked distros
	if command_exists lsb_release; then
		# Check if the &#96;-u&#96; option is supported
		set +e
		lsb_release -a -u &gt; &#x2F;dev&#x2F;null 2&gt;&amp;1
		lsb_release_exit_code&#x3D;$?
		set -e

		# Check if the command has exited successfully, it means we&#39;re in a forked distro
		if [ &quot;$lsb_release_exit_code&quot; &#x3D; &quot;0&quot; ]; then
			# Print info about current distro
			cat &lt;&lt;-EOF
			You&#39;re using &#39;$lsb_dist&#39; version &#39;$dist_version&#39;.
			EOF

			# Get the upstream release info
			lsb_dist&#x3D;$(lsb_release -a -u 2&gt;&amp;1 | tr &#39;[:upper:]&#39; &#39;[:lower:]&#39; | grep -E &#39;id&#39; | cut -d &#39;:&#39; -f 2 | tr -d &#39;[[:space:]]&#39;)
			dist_version&#x3D;$(lsb_release -a -u 2&gt;&amp;1 | tr &#39;[:upper:]&#39; &#39;[:lower:]&#39; | grep -E &#39;codename&#39; | cut -d &#39;:&#39; -f 2 | tr -d &#39;[[:space:]]&#39;)

			# Print info about upstream distro
			cat &lt;&lt;-EOF
			Upstream release is &#39;$lsb_dist&#39; version &#39;$dist_version&#39;.
			EOF
		else
			if [ -r &#x2F;etc&#x2F;debian_version ] &amp;&amp; [ &quot;$lsb_dist&quot; !&#x3D; &quot;ubuntu&quot; ] &amp;&amp; [ &quot;$lsb_dist&quot; !&#x3D; &quot;raspbian&quot; ]; then
				# We&#39;re Debian and don&#39;t even know it!
				lsb_dist&#x3D;debian
				dist_version&#x3D;&quot;$(cat &#x2F;etc&#x2F;debian_version | sed &#39;s&#x2F;\&#x2F;.*&#x2F;&#x2F;&#39; | sed &#39;s&#x2F;\..*&#x2F;&#x2F;&#39;)&quot;
				case &quot;$dist_version&quot; in
					10)
						dist_version&#x3D;&quot;buster&quot;
					;;
					9)
						dist_version&#x3D;&quot;stretch&quot;
					;;
					8|&#39;Kali Linux 2&#39;)
						dist_version&#x3D;&quot;jessie&quot;
					;;
					7)
						dist_version&#x3D;&quot;wheezy&quot;
					;;
				esac
			fi
		fi
	fi
&#125;

semverParse() &#123;
	major&#x3D;&quot;$&#123;1%%.*&#125;&quot;
	minor&#x3D;&quot;$&#123;1#$major.&#125;&quot;
	minor&#x3D;&quot;$&#123;minor%%.*&#125;&quot;
	patch&#x3D;&quot;$&#123;1#$major.$minor.&#125;&quot;
	patch&#x3D;&quot;$&#123;patch%%[-.]*&#125;&quot;
&#125;

deprecation_notice() &#123;
	echo
	echo
	echo &quot;  WARNING: $1 is no longer updated @ $url&quot;
	echo &quot;           Installing the legacy docker-engine package...&quot;
	echo
	echo
	sleep 10;
&#125;

do_install() &#123;

	architecture&#x3D;$(uname -m)
	case $architecture in
		# officially supported
		amd64|aarch64|arm64|x86_64)
			;;
		# unofficially supported with available repositories
		armv6l|armv7l)
			;;
		# unofficially supported without available repositories
		ppc64le|s390x)
			cat 1&gt;&amp;2 &lt;&lt;-EOF
			Error: This install script does not support $architecture, because no
			$architecture package exists in Docker&#39;s repositories.

			Other install options include checking your distribution&#39;s package repository
			for a version of Docker, or building Docker from source.
			EOF
			exit 1
			;;
		# not supported
		*)
			cat &gt;&amp;2 &lt;&lt;-EOF
			Error: $architecture is not a recognized platform.
			EOF
			exit 1
			;;
	esac

	if command_exists docker; then
		version&#x3D;&quot;$(docker -v | cut -d &#39; &#39; -f3 | cut -d &#39;,&#39; -f1)&quot;
		MAJOR_W&#x3D;1
		MINOR_W&#x3D;10

		semverParse $version

		shouldWarn&#x3D;0
		if [ $major -lt $MAJOR_W ]; then
			shouldWarn&#x3D;1
		fi

		if [ $major -le $MAJOR_W ] &amp;&amp; [ $minor -lt $MINOR_W ]; then
			shouldWarn&#x3D;1
		fi

		cat &gt;&amp;2 &lt;&lt;-&#39;EOF&#39;
			Warning: the &quot;docker&quot; command appears to already exist on this system.

			If you already have Docker installed, this script can cause trouble, which is
			why we&#39;re displaying this warning and provide the opportunity to cancel the
			installation.

			If you installed the current Docker package using this script and are using it
		EOF

		if [ $shouldWarn -eq 1 ]; then
			cat &gt;&amp;2 &lt;&lt;-&#39;EOF&#39;
			again to update Docker, we urge you to migrate your image store before upgrading
			to v1.10+.

			You can find instructions for this here:
			https:&#x2F;&#x2F;github.com&#x2F;docker&#x2F;docker&#x2F;wiki&#x2F;Engine-v1.10.0-content-addressability-migration
			EOF
		else
			cat &gt;&amp;2 &lt;&lt;-&#39;EOF&#39;
			again to update Docker, you can safely ignore this message.
			EOF
		fi

		cat &gt;&amp;2 &lt;&lt;-&#39;EOF&#39;

			You may press Ctrl+C now to abort this script.
		EOF
		( set -x; sleep 20 )
	fi

	user&#x3D;&quot;$(id -un 2&gt;&#x2F;dev&#x2F;null || true)&quot;

	sh_c&#x3D;&#39;sh -c&#39;
	if [ &quot;$user&quot; !&#x3D; &#39;root&#39; ]; then
		if command_exists sudo; then
			sh_c&#x3D;&#39;sudo -E sh -c&#39;
		elif command_exists su; then
			sh_c&#x3D;&#39;su -c&#39;
		else
			cat &gt;&amp;2 &lt;&lt;-&#39;EOF&#39;
			Error: this installer needs the ability to run commands as root.
			We are unable to find either &quot;sudo&quot; or &quot;su&quot; available to make this happen.
			EOF
			exit 1
		fi
	fi

	curl&#x3D;&#39;&#39;
	if command_exists curl; then
		curl&#x3D;&#39;curl -sSL&#39;
	elif command_exists wget; then
		curl&#x3D;&#39;wget -qO-&#39;
	elif command_exists busybox &amp;&amp; busybox --list-modules | grep -q wget; then
		curl&#x3D;&#39;busybox wget -qO-&#39;
	fi

	# check to see which repo they are trying to install from
	if [ -z &quot;$repo&quot; ]; then
		repo&#x3D;&#39;main&#39;
		if [ &quot;https:&#x2F;&#x2F;test.docker.com&#x2F;&quot; &#x3D; &quot;$url&quot; ]; then
			repo&#x3D;&#39;testing&#39;
		elif [ &quot;https:&#x2F;&#x2F;experimental.docker.com&#x2F;&quot; &#x3D; &quot;$url&quot; ]; then
			repo&#x3D;&#39;experimental&#39;
		fi
	fi

	# perform some very rudimentary platform detection
	lsb_dist&#x3D;&#39;&#39;
	dist_version&#x3D;&#39;&#39;
	if command_exists lsb_release; then
		lsb_dist&#x3D;&quot;$(lsb_release -si)&quot;
	fi
	if [ -z &quot;$lsb_dist&quot; ] &amp;&amp; [ -r &#x2F;etc&#x2F;lsb-release ]; then
		lsb_dist&#x3D;&quot;$(. &#x2F;etc&#x2F;lsb-release &amp;&amp; echo &quot;$DISTRIB_ID&quot;)&quot;
	fi
	if [ -z &quot;$lsb_dist&quot; ] &amp;&amp; [ -r &#x2F;etc&#x2F;debian_version ]; then
		lsb_dist&#x3D;&#39;debian&#39;
	fi
	if [ -z &quot;$lsb_dist&quot; ] &amp;&amp; [ -r &#x2F;etc&#x2F;fedora-release ]; then
		lsb_dist&#x3D;&#39;fedora&#39;
	fi
	if [ -z &quot;$lsb_dist&quot; ] &amp;&amp; [ -r &#x2F;etc&#x2F;oracle-release ]; then
		lsb_dist&#x3D;&#39;oracleserver&#39;
	fi
	if [ -z &quot;$lsb_dist&quot; ] &amp;&amp; [ -r &#x2F;etc&#x2F;centos-release ]; then
		lsb_dist&#x3D;&#39;centos&#39;
	fi
	if [ -z &quot;$lsb_dist&quot; ] &amp;&amp; [ -r &#x2F;etc&#x2F;redhat-release ]; then
		lsb_dist&#x3D;&#39;redhat&#39;
	fi
	if [ -z &quot;$lsb_dist&quot; ] &amp;&amp; [ -r &#x2F;etc&#x2F;os-release ]; then
		lsb_dist&#x3D;&quot;$(. &#x2F;etc&#x2F;os-release &amp;&amp; echo &quot;$ID&quot;)&quot;
	fi

	lsb_dist&#x3D;&quot;$(echo &quot;$lsb_dist&quot; | tr &#39;[:upper:]&#39; &#39;[:lower:]&#39;)&quot;

	# Special case redhatenterpriseserver
	if [ &quot;$&#123;lsb_dist&#125;&quot; &#x3D; &quot;redhatenterpriseserver&quot; ]; then
		# Set it to redhat, it will be changed to centos below anyways
		lsb_dist&#x3D;&#39;redhat&#39;
	fi

	case &quot;$lsb_dist&quot; in

		ubuntu)
			if command_exists lsb_release; then
				dist_version&#x3D;&quot;$(lsb_release --codename | cut -f2)&quot;
			fi
			if [ -z &quot;$dist_version&quot; ] &amp;&amp; [ -r &#x2F;etc&#x2F;lsb-release ]; then
				dist_version&#x3D;&quot;$(. &#x2F;etc&#x2F;lsb-release &amp;&amp; echo &quot;$DISTRIB_CODENAME&quot;)&quot;
			fi
		;;

		debian|raspbian)
			dist_version&#x3D;&quot;$(cat &#x2F;etc&#x2F;debian_version | sed &#39;s&#x2F;\&#x2F;.*&#x2F;&#x2F;&#39; | sed &#39;s&#x2F;\..*&#x2F;&#x2F;&#39;)&quot;
			case &quot;$dist_version&quot; in
				9)
					dist_version&#x3D;&quot;stretch&quot;
				;;
				8)
					dist_version&#x3D;&quot;jessie&quot;
				;;
				7)
					dist_version&#x3D;&quot;wheezy&quot;
				;;
			esac
		;;

		oracleserver)
			# need to switch lsb_dist to match yum repo URL
			lsb_dist&#x3D;&quot;oraclelinux&quot;
			dist_version&#x3D;&quot;$(rpm -q --whatprovides redhat-release --queryformat &quot;%&#123;VERSION&#125;\n&quot; | sed &#39;s&#x2F;\&#x2F;.*&#x2F;&#x2F;&#39; | sed &#39;s&#x2F;\..*&#x2F;&#x2F;&#39; | sed &#39;s&#x2F;Server*&#x2F;&#x2F;&#39;)&quot;
		;;

		fedora|centos|redhat)
			dist_version&#x3D;&quot;$(rpm -q --whatprovides $&#123;lsb_dist&#125;-release --queryformat &quot;%&#123;VERSION&#125;\n&quot; | sed &#39;s&#x2F;\&#x2F;.*&#x2F;&#x2F;&#39; | sed &#39;s&#x2F;\..*&#x2F;&#x2F;&#39; | sed &#39;s&#x2F;Server*&#x2F;&#x2F;&#39; | sort | tail -1)&quot;
		;;

		*)
			if command_exists lsb_release; then
				dist_version&#x3D;&quot;$(lsb_release --codename | cut -f2)&quot;
			fi
			if [ -z &quot;$dist_version&quot; ] &amp;&amp; [ -r &#x2F;etc&#x2F;os-release ]; then
				dist_version&#x3D;&quot;$(. &#x2F;etc&#x2F;os-release &amp;&amp; echo &quot;$VERSION_ID&quot;)&quot;
			fi
		;;


	esac

	# Check if this is a forked Linux distro
	check_forked

	# Run setup for each distro accordingly
	case &quot;$lsb_dist&quot; in
		ubuntu|debian)
			pre_reqs&#x3D;&quot;apt-transport-https ca-certificates curl&quot;
			if [ &quot;$lsb_dist&quot; &#x3D; &quot;debian&quot; ] &amp;&amp; [ &quot;$dist_version&quot; &#x3D; &quot;wheezy&quot; ]; then
				pre_reqs&#x3D;&quot;$pre_reqs python-software-properties&quot;
				backports&#x3D;&quot;deb http:&#x2F;&#x2F;ftp.debian.org&#x2F;debian wheezy-backports main&quot;
				if ! grep -Fxq &quot;$backports&quot; &#x2F;etc&#x2F;apt&#x2F;sources.list; then
					(set -x; $sh_c &quot;echo \&quot;$backports\&quot; &gt;&gt; &#x2F;etc&#x2F;apt&#x2F;sources.list&quot;)
				fi
			else
				pre_reqs&#x3D;&quot;$pre_reqs software-properties-common&quot;
			fi
			if ! command -v gpg &gt; &#x2F;dev&#x2F;null; then
				pre_reqs&#x3D;&quot;$pre_reqs gnupg&quot;
			fi
			apt_repo&#x3D;&quot;deb [arch&#x3D;$(dpkg --print-architecture)] https:&#x2F;&#x2F;download.docker.com&#x2F;linux&#x2F;$lsb_dist $dist_version $CHANNEL&quot;
			(
				set -x
				$sh_c &#39;apt-get update&#39;
				$sh_c &quot;apt-get install -y -q $pre_reqs&quot;
				curl -fsSl &quot;https:&#x2F;&#x2F;download.docker.com&#x2F;linux&#x2F;$lsb_dist&#x2F;gpg&quot; | $sh_c &#39;apt-key add -&#39;
				$sh_c &quot;add-apt-repository \&quot;$apt_repo\&quot;&quot;
				if [ &quot;$lsb_dist&quot; &#x3D; &quot;debian&quot; ] &amp;&amp; [ &quot;$dist_version&quot; &#x3D; &quot;wheezy&quot; ]; then
					$sh_c &#39;sed -i &quot;&#x2F;deb-src.*download\.docker&#x2F;d&quot; &#x2F;etc&#x2F;apt&#x2F;sources.list&#39;
				fi
				$sh_c &#39;apt-get update&#39;
				$sh_c &quot;apt-get install -y -q docker-ce&#x3D;$(apt-cache madison docker-ce | grep $&#123;docker_version&#125; | head -n 1 | cut -d &#39; &#39; -f 4)&quot;
			)
			echo_docker_as_nonroot
			exit 0
			;;
		centos|fedora|redhat|oraclelinux)
			yum_repo&#x3D;&quot;https:&#x2F;&#x2F;download.docker.com&#x2F;linux&#x2F;centos&#x2F;docker-ce.repo&quot;
			if [ &quot;$lsb_dist&quot; &#x3D; &quot;fedora&quot; ]; then
				if [ &quot;$dist_version&quot; -lt &quot;24&quot; ]; then
					echo &quot;Error: Only Fedora &gt;&#x3D;24 are supported by $url&quot;
					exit 1
				fi
				pkg_manager&#x3D;&quot;dnf&quot;
				config_manager&#x3D;&quot;dnf config-manager&quot;
				enable_channel_flag&#x3D;&quot;--set-enabled&quot;
				pre_reqs&#x3D;&quot;dnf-plugins-core&quot;
			else
				pkg_manager&#x3D;&quot;yum&quot;
				config_manager&#x3D;&quot;yum-config-manager&quot;
				enable_channel_flag&#x3D;&quot;--enable&quot;
				pre_reqs&#x3D;&quot;yum-utils&quot;
			fi
			(
				set -x
			        if [ &quot;$lsb_dist&quot; &#x3D; &quot;redhat&quot; ]; then
                                        for rhel_repo in $rhel_repos ; do
                                                $sh_c &quot;$config_manager $enable_channel_flag $rhel_repo&quot;
                                        done
                                fi
				$sh_c &quot;$pkg_manager install -y -q $pre_reqs&quot;
				$sh_c &quot;$config_manager --add-repo $yum_repo&quot;
				if [ &quot;$CHANNEL&quot; !&#x3D; &quot;stable&quot; ]; then
					echo &quot;Info: Enabling channel &#39;$CHANNEL&#39; for docker-ce repo&quot;
					$sh_c &quot;$config_manager $enable_channel_flag docker-ce-$CHANNEL&quot;
				fi
				$sh_c &quot;$pkg_manager makecache fast&quot;
				$sh_c &quot;$pkg_manager install -y -q docker-ce-$&#123;docker_version&#125;&quot;
				if [ -d &#39;&#x2F;run&#x2F;systemd&#x2F;system&#39; ]; then
					$sh_c &#39;service docker start&#39;
				else
					$sh_c &#39;systemctl start docker&#39;
				fi
			)
			echo_docker_as_nonroot
			exit 0
			;;
		raspbian)
			deprecation_notice &quot;$lsb_dist&quot;
			export DEBIAN_FRONTEND&#x3D;noninteractive

			did_apt_get_update&#x3D;
			apt_get_update() &#123;
				if [ -z &quot;$did_apt_get_update&quot; ]; then
					( set -x; $sh_c &#39;sleep 3; apt-get update&#39; )
					did_apt_get_update&#x3D;1
				fi
			&#125;

			if [ &quot;$lsb_dist&quot; !&#x3D; &quot;raspbian&quot; ]; then
				# aufs is preferred over devicemapper; try to ensure the driver is available.
				if ! grep -q aufs &#x2F;proc&#x2F;filesystems &amp;&amp; ! $sh_c &#39;modprobe aufs&#39;; then
					if uname -r | grep -q -- &#39;-generic&#39; &amp;&amp; dpkg -l &#39;linux-image-*-generic&#39; | grep -qE &#39;^ii|^hi&#39; 2&gt;&#x2F;dev&#x2F;null; then
						kern_extras&#x3D;&quot;linux-image-extra-$(uname -r) linux-image-extra-virtual&quot;

						apt_get_update
						( set -x; $sh_c &#39;sleep 3; apt-get install -y -q &#39;&quot;$kern_extras&quot; ) || true

						if ! grep -q aufs &#x2F;proc&#x2F;filesystems &amp;&amp; ! $sh_c &#39;modprobe aufs&#39;; then
							echo &gt;&amp;2 &#39;Warning: tried to install &#39;&quot;$kern_extras&quot;&#39; (for AUFS)&#39;
							echo &gt;&amp;2 &#39; but we still have no AUFS.  Docker may not work. Proceeding anyways!&#39;
							( set -x; sleep 10 )
						fi
					else
						echo &gt;&amp;2 &#39;Warning: current kernel is not supported by the linux-image-extra-virtual&#39;
						echo &gt;&amp;2 &#39; package.  We have no AUFS support.  Consider installing the packages&#39;
						echo &gt;&amp;2 &#39; &quot;linux-image-virtual&quot; and &quot;linux-image-extra-virtual&quot; for AUFS support.&#39;
						( set -x; sleep 10 )
					fi
				fi
			fi

			# install apparmor utils if they&#39;re missing and apparmor is enabled in the kernel
			# otherwise Docker will fail to start
			if [ &quot;$(cat &#x2F;sys&#x2F;module&#x2F;apparmor&#x2F;parameters&#x2F;enabled 2&gt;&#x2F;dev&#x2F;null)&quot; &#x3D; &#39;Y&#39; ]; then
				if command -v apparmor_parser &gt;&#x2F;dev&#x2F;null 2&gt;&amp;1; then
					echo &#39;apparmor is enabled in the kernel and apparmor utils were already installed&#39;
				else
					echo &#39;apparmor is enabled in the kernel, but apparmor_parser is missing. Trying to install it..&#39;
					apt_get_update
					( set -x; $sh_c &#39;sleep 3; apt-get install -y -q apparmor&#39; )
				fi
			fi

			if [ ! -e &#x2F;usr&#x2F;lib&#x2F;apt&#x2F;methods&#x2F;https ]; then
				apt_get_update
				( set -x; $sh_c &#39;sleep 3; apt-get install -y -q apt-transport-https ca-certificates&#39; )
			fi
			if [ -z &quot;$curl&quot; ]; then
				apt_get_update
				( set -x; $sh_c &#39;sleep 3; apt-get install -y -q curl ca-certificates&#39; )
				curl&#x3D;&#39;curl -sSL&#39;
			fi
			if ! command -v gpg &gt; &#x2F;dev&#x2F;null; then
				apt_get_update
				( set -x; $sh_c &#39;sleep 3; apt-get install -y -q gnupg2 || apt-get install -y -q gnupg&#39; )
			fi

			# dirmngr is a separate package in ubuntu yakkety; see https:&#x2F;&#x2F;bugs.launchpad.net&#x2F;ubuntu&#x2F;+source&#x2F;apt&#x2F;+bug&#x2F;1634464
			if ! command -v dirmngr &gt; &#x2F;dev&#x2F;null; then
				apt_get_update
				( set -x; $sh_c &#39;sleep 3; apt-get install -y -q dirmngr&#39; )
			fi

			(
			set -x
                        for key_server in $key_servers ; do
                                $sh_c &quot;apt-key adv --keyserver hkp:&#x2F;&#x2F;$&#123;key_server&#125;:80 --recv-keys $&#123;gpg_fingerprint&#125;&quot; &amp;&amp; break
                        done
                        $sh_c &quot;apt-key adv -k $&#123;gpg_fingerprint&#125; &gt;&#x2F;dev&#x2F;null&quot;
			$sh_c &quot;mkdir -p &#x2F;etc&#x2F;apt&#x2F;sources.list.d&quot;
			$sh_c &quot;echo deb \[arch&#x3D;$(dpkg --print-architecture)\] $&#123;apt_url&#125;&#x2F;repo $&#123;lsb_dist&#125;-$&#123;dist_version&#125; $&#123;repo&#125; &gt; &#x2F;etc&#x2F;apt&#x2F;sources.list.d&#x2F;docker.list&quot;
			$sh_c &#39;sleep 3; apt-get update; apt-get install -y -q docker-engine&#39;
			)
			echo_docker_as_nonroot
			exit 0
			;;
		rancheros)
			(
			set -x
			$sh_c &quot;sleep 3; ros engine switch -f $(sudo ros engine list | grep $&#123;docker_version&#125; | head -n 1 | cut -d &#39; &#39; -f 2)&quot;
			)
			exit 0
			;;
	esac

	# intentionally mixed spaces and tabs here -- tabs are stripped by &quot;&lt;&lt;-&#39;EOF&#39;&quot;, spaces are kept in the output
	cat &gt;&amp;2 &lt;&lt;-&#39;EOF&#39;

	Either your platform is not easily detectable or is not supported by this
	installer script.
	Please visit the following URL for more detailed installation instructions:

	https:&#x2F;&#x2F;docs.docker.com&#x2F;engine&#x2F;installation&#x2F;

	EOF
	exit 1
&#125;

# wrapped up in a function so that we have some protection against only getting
# half the file during &quot;curl | sh&quot;
do_install<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

]]></content>
      <categories>
        <category>docker, shell</category>
      </categories>
      <tags>
        <tag>docker, shell</tag>
      </tags>
  </entry>
  <entry>
    <title>改进CI管道中自动化性能测试的10条技巧（第1部分）</title>
    <url>/2019/11/01/%E6%94%B9%E8%BF%9BCI%E7%AE%A1%E9%81%93%E4%B8%AD%E8%87%AA%E5%8A%A8%E5%8C%96%E6%80%A7%E8%83%BD%E6%B5%8B%E8%AF%95%E7%9A%8410%E6%9D%A1%E6%8A%80%E5%B7%A7%E7%AC%AC1%E9%83%A8%E5%88%86/</url>
    <content><![CDATA[<h3 id="看一看如何通过连续测试和SLA改善CI管道的性能。"><a href="#看一看如何通过连续测试和SLA改善CI管道的性能。" class="headerlink" title="看一看如何通过连续测试和SLA改善CI管道的性能。"></a>看一看如何通过连续测试和SLA改善CI管道的性能。</h3><p><img  
                     lazyload
                     alt="image"
                     data-src="https://dzone.com/storage/temp/12642760-10.jpg"
                      alt="图片标题"
                ></p>
<p><em>这是创建更好的CI管道的方法的1和2。</em></p>
<p>在持续集成管道中正确进行测试是Web规模软件开发的关键部分。对于许多公司而言，这是一个挑战，尤其是在自动化性能测试方面。这不是因为缺乏努力。许多公司似乎无法实现其努力的全部价值。原因很多。一些测试工作只是在重新发明轮子。其他人则只是出于执行目的而无明显意图地随机进行。确保测试既适当又旨在满足业务需求是事后才想到的。</p>
<p>不必一定是以这种方式。</p>
<p>任何公司都可以在自动化CI管道中进行有用，高效的性能测试。所需要的只是那些有知识的人的一些有用的知识。为了扩大“了解者”的圈子，我们创建了十个技巧列表，以改善CI Pipelines中的性能测试。</p>
<p>1.根据产品的长期目标进行连续测试</p>
<p>2.区分SLA，SLO和SLI</p>
<p>3.保持测试规模小且目标明确</p>
<p>4.在整体之前测试段</p>
<p>5.自动化不易碎的东西</p>
<p>6.节省时间，使用烟雾测试</p>
<p>7.利用您的源代码管理管理系统</p>
<p>8.没有反馈循环的期望不是</p>
<p>9.已知的基础架构是可测试的基础架构</p>
<p>10.使用您的CI &#x2F; CD管道，而不是反对</p>
<p>今天的帖子将重点介绍前两个技巧，而其余建议将在单独的文章中介绍。</p>
<h2 id="1-根据产品的长期目标进行连续测试"><a href="#1-根据产品的长期目标进行连续测试" class="headerlink" title="1.根据产品的长期目标进行连续测试"></a><strong>1.根据产品的长期目标进行连续测试</strong></h2><p>如果你想快速识别什么可怕的事情是否在进行与贵公司的测试流程，请考虑以下情形。现在该发布产品了。开发团队中的每个人都以焦虑不安的状态坐在会议室的桌子旁，等待端到端测试完成，以便可以将代码推送发布。无论哪种方式，您都无法自拔。为什么？毕竟，如果测试顺利，代码将继续进行。没关系吧？错误。</p>
<p>发布的生存能力取决于单个引发焦虑的端到端测试的状态这一事实揭示了整个测试过程的重大缺陷。此类测试所承受的压力不应超过常规血液测试的压力。如果患者有定期体检，健康饮食和定期运动的病史，则血液检查应验证历史上的积极行为。但是，如果患者已经十年没有去看医生，只能依靠薯片和生啤酒的饮食生活，而且只能走到邮箱，那么简单的验血会改变您的生活。谁知道它可能揭示什么？</p>
<p>类比适用于IT流程。如果公司的总体开发实践是健康的，并且在软件开发生命周期的各个级别进行连续测试，则端到端测试应该只是另一个验证复选框。如果发现问题所在，则无需费力即可解决它。</p>
<p>当开发实践杂乱无章，而测试被拖到最后时，最后的端到端测试又怎会是一种焦虑的经历呢？谁知道代码中隐藏了多少技术债务，开发人员不再在公司工作留下了多少谜团。测试中有多少只不过是循环使用20％的代码库，而其余部分则保持不变？诸如此类的问题在开发环境中令人惊讶地普遍存在，在该环境中，长期产品目标尚不清楚，而测试事件则是偶然的。</p>
<p>当创造了所有人都可以充分理解长期产品目标的条件时，开发过程和所产生的代码质量也会提高（前提是在整个生命周期阶段都进行了连续测试）。基于产品的长期目标进行连续测试是明智且实用的，并有助于改善自动化性能测试。</p>
<h2 id="2-区分SLA，SLO和SLI"><a href="#2-区分SLA，SLO和SLI" class="headerlink" title="2.区分SLA，SLO和SLI"></a><strong>2.区分SLA，SLO和SLI</strong></h2><p>当大多数公司考虑定义软件&#x2F;软件服务的工作方式时，他们相信服务水平协议。定义明确的SLA是必不可少的。否则，就没有可靠的方法让公司作为服务提供商或消费者运营。从提供商的角度来看，缺少SLA意味着客户可以随时（并期望）要求任何东西。从消费者的角度来看，没有SLA会使技术人员处于等待数小时的危险之中，因为他们的公司的数字基础架构崩溃时，他们一直处于等待与关键任务支持人员联系的状态。</p>
<p>SLA是必需的，但它们只能捕获部分图片。还需要更多。服务水平目标（SLO）和服务水平指标（SLI）的添加提供了必要的附加信息，以确保提供者和消费者之间的伙伴关系满足所有人的需求。</p>
<p>SLA描述了提供者和消费者之间的承诺；其复杂性将根据各方的需求而变化。SLA将定义每个服务的职责和服务的可用性。该协议仅取决于其背后目标的定义以及确定服务级别的度量标准。这就是SLO和SLI变得重要的地方。</p>
<p>如果提前定义了SLO，则建立SLA会容易得多。理解消费者希望从代码&#x2F;服务中获得什么，将提供必要的见解，以确认所提供的服务符合期望。定义明确的SLO将有助于制定对所有人都有意义的SLA。</p>
<p>为了使SLA有效地满足SLO中规定的目标，必须定义一套标准的，易于理解的度量标准。否则，公司冒着将苹果与橙子进行比较的风险。因此，SLI的价值。服务水平指示器提供有关如何根据SLA衡量运营绩效的详细信息。SLI越精确，就越好。</p>
<p>SLO &#x2F; SLI允许您根据SLA构造进行假设。确定了操作的需求和条件以及测量方法。“我需要喝点东西”和“我渴了，需要8盎司水来满足我的渴求”之间的区别。</p>
<p>然后，基于定义明确的SLO的SLA，然后根据详细SLI的一组度量标准进行测量，这将有益于常规操作以及测试过程。根据SLI中明确定义的参数，满足SLA要求的测试与即席测试相比，提供了更高的准确性和更可靠的分析。</p>
<p>在SLA，SLO和SLI之间进行区分将大大有助于在软件所涉及的各方（开发人员，测试人员和用户之间）之间建立有意义，可靠的关系。</p>
<p><em>下周，在由十个技巧组成的三部分博客系列中的第二篇中，我们将深入探讨技巧3-6。</em></p>
]]></content>
      <tags>
        <tag>自动化测试</tag>
      </tags>
  </entry>
  <entry>
    <title>新世界的大门</title>
    <url>/2019/08/26/%E6%96%B0%E4%B8%96%E7%95%8C/</url>
    <content><![CDATA[<p>Welcome to <a class="link"   href="https://hexo.io/" >Hexo<i class="fas fa-external-link-alt"></i></a>! This is your very first post. Check <a class="link"   href="https://hexo.io/docs/" >documentation<i class="fas fa-external-link-alt"></i></a> for more info. If you get any problems when using Hexo, you can find the answer in <a class="link"   href="https://hexo.io/docs/troubleshooting.html" >troubleshooting<i class="fas fa-external-link-alt"></i></a> or you can ask me on <a class="link"   href="https://github.com/hexojs/hexo/issues" >GitHub<i class="fas fa-external-link-alt"></i></a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>More info: <a class="link"   href="https://hexo.io/docs/writing.html" >Writing<i class="fas fa-external-link-alt"></i></a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo server<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>More info: <a class="link"   href="https://hexo.io/docs/server.html" >Server<i class="fas fa-external-link-alt"></i></a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo generate<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>More info: <a class="link"   href="https://hexo.io/docs/generating.html" >Generating<i class="fas fa-external-link-alt"></i></a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo deploy<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>More info: <a class="link"   href="https://hexo.io/docs/deployment.html" >Deployment<i class="fas fa-external-link-alt"></i></a></p>
]]></content>
      <categories>
        <category>new world</category>
      </categories>
      <tags>
        <tag>new world</tag>
      </tags>
  </entry>
  <entry>
    <title>罗翔语录</title>
    <url>/2021/10/21/%E7%BD%97%E7%BF%94%E8%AF%AD%E5%BD%95/</url>
    <content><![CDATA[<h2 id="演好自己的剧本"><a href="#演好自己的剧本" class="headerlink" title="演好自己的剧本"></a>演好自己的剧本</h2><h2 id="Keep-calm-and-carry-on"><a href="#Keep-calm-and-carry-on" class="headerlink" title="Keep calm and carry on."></a>Keep calm and carry on.</h2><pre class="line-numbers language-none"><code class="language-none">我们很多时候是不是觉得我们抓的牌实在是太差了呀

但是再差的牌你都应该打下去

我们登上并非我们所选择的舞台

在坐的有谁的剧本是你自己设定的

其实不是的 

我们决定不了我们的出身

我们决定不了我们的智商

我们更决定不了我们这一生的贵人相助

很多时候我们经常会羡慕别人的剧本

我有的时候也非常羡慕别人的剧本

但是没有谁的剧本值得羡慕

你只能把你自己的剧本给演好

如果在你的一生中真的遭遇到这些挫折

那对不起 这就是你的剧本

你有两种选择

一种选择是弃演

一种选择是把既定的剧本给选好 给演好

所以希望大家能够演好自己的剧本

摘自--罗翔
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      <categories>
        <category>摘抄</category>
      </categories>
      <tags>
        <tag>摘抄</tag>
      </tags>
  </entry>
  <entry>
    <title>运维架构层级</title>
    <url>/2019/09/19/%E8%BF%90%E7%BB%B4%E6%9E%B6%E6%9E%84%E5%B1%82%E7%BA%A7/</url>
    <content><![CDATA[<p><img  
                     lazyload
                     alt="image"
                     data-src="https://img.hacpai.com/bing/20180330.jpg?imageView2/1/w/960/h/540/interlace/1/q/100"
                     
                > </p>
<p><img  
                     lazyload
                     alt="image"
                     data-src="https://img.hacpai.com/file/2019/09/image-08604d6b.png"
                      alt="image.png"
                ><br><img  
                     lazyload
                     alt="image"
                     data-src="https://img.hacpai.com/file/2019/09/image-753a7fbe.png"
                      alt="image.png"
                ><br><img  
                     lazyload
                     alt="image"
                     data-src="https://img.hacpai.com/file/2019/09/image-8a1fb5a5.png"
                      alt="image.png"
                ><br><img  
                     lazyload
                     alt="image"
                     data-src="https://img.hacpai.com/file/2019/09/image-6fdcd397.png"
                      alt="image.png"
                ><br>来源：<a class="link"   href="https://www.unixhot.com/page/ops" >https://www.unixhot.com/page/ops<i class="fas fa-external-link-alt"></i></a></p>
]]></content>
      <categories>
        <category>架构</category>
      </categories>
      <tags>
        <tag>Linux运维</tag>
      </tags>
  </entry>
  <entry>
    <title>高并发大流量网站10个调优策略</title>
    <url>/2019/09/19/%E9%AB%98%E5%B9%B6%E5%8F%91%E5%A4%A7%E6%B5%81%E9%87%8F%E7%BD%91%E7%AB%9910%E4%B8%AA%E8%B0%83%E4%BC%98%E7%AD%96%E7%95%A5/</url>
    <content><![CDATA[<p><strong>1.</strong> <strong>硬件升级</strong></p>
<p>普通的P4服务器一般最多能支持每天10万独立IP，如果访问量比这个还要大，那么必须首先配置一台更高性能的专用服务器才能解决问题，否则怎么优化都不可能彻底解决性能问题。</p>
<p><strong>2.</strong> <strong>负载均衡</strong></p>
<p>它是根据某种负载均衡策略把请求分发到集群中的每一台服务器上，让整个服务器群来处理网站的请求。</p>
<p>公司比较有钱的，可以购买专门负责均衡的硬件（如：F5），效果肯定会很好。对于大部分公司，会选择廉价有效的方法扩展整个系统的架构，来增加服务器的吞吐量和处理能力，以及承载能力。</p>
<p><strong>3.</strong> <strong>服务器集群</strong></p>
<p>服务器集群就是指将N台服务器集中起来一起进行同一种服务，它们之间通过网络实现通信。让N台服务器之间相互协作，共同承载一个网站的请求压力。</p>
<p>在客户端看来就像是只有一个服务器。集群可以利用多个计算机进行并行计算从而获得很高的计算速度，也可以用多个计算机做备份，从而使得任何一个机器坏了整个系统还是能正常运行。</p>
<p><strong>4.</strong> <strong>数据库读写分离</strong></p>
<p>基本的原理是让主数据库处理事务性增、改、删操作（INSERT、UPDATE、DELETE）,而从数据库处理SELECT查询操作。</p>
<p><strong>5.</strong> <strong>数据库分表技术（垂直分割，水平分割）</strong></p>
<p>当一张的数据达到几百万时，你查询一次所花的时间会变多，如果有联合查询的话，很有可能会死在那儿了。分表的目的就在于此，减小数据库的负担，缩短查询时间。</p>
<p><strong>6.</strong> <strong>表建立相应的索引</strong></p>
<p>使用索引可快速访问数据库表中的特定信息。</p>
<p><strong>7.</strong> <strong>页面静态化</strong></p>
<p>前台实现完全的静态化最好，可以完全不用访问数据库。</p>
<p><strong>8.</strong> <strong>缓存技术（MemCache\Redis）</strong></p>
<p>缓存技术就是另一个解决方案，就是将动态数据存储到缓存文件中，动态网页直接调用这些文件，而不必再访问数据库</p>
<p><strong>9.</strong> <strong>禁止外部盗链</strong></p>
<p>外部网站的图片或者文件盗链往往会带来大量的负载压力，因此应该严格限制外部对于自身的图片或者文件盗链</p>
<p><strong>10.</strong> <strong>控制大文件的下载</strong></p>
<p>大文件的下载会占用很大的流量，并且对于非SCSI硬盘来说，大量下载文件会消耗CPU，使得网站响应能力下降。因此，尽量不要提供超过2M的大文件下载，如果需要提供，建议尽量将大文件放在另外一台服务器上。</p>
]]></content>
      <categories>
        <category>网站调优</category>
      </categories>
      <tags>
        <tag>高并发, 网站调优</tag>
      </tags>
  </entry>
</search>
